// Assembly code emitted by HLA compiler
// Version 2.7 build 3322 (prototype)
// HLA compiler written by Randall Hyde
// GAS compatible output


        .globl     numCodeRelocs
        .globl     dataSize
        .globl     QuitMain__hla_
        .globl     numDataRelocs
        .globl     _hlabe_compile
        .globl     compileMACHO
        .globl     DfltExHndlr__hla_
        .globl     bssSize
        .globl     compileELF
        .globl     symbolTable
        .globl     codeSize
        .globl     hlabe_compile
        .globl     currentSection
        .globl     lexer
        .globl     equatesTable
        .globl     compileCOFF
        .globl     printLineNumberChain
        .globl     optimizeDisps
        .globl     InstallSignals__hla_


  .text


        .globl    MEM_FREE
        .globl    STR_CPY
        .globl    STR_INIT
        .globl    STR_CPYZ
        .globl    EX_PRINTEXCEPTIONERROR
        .globl    MEM_ALLOC1
        .globl    FILEIO_OPENNEW
        .globl    STR_A_CPY
        .globl    STDOUT_PUTSSIZE
        .globl    CONV_GETDELIMITERS
        .globl    CONV_SETDELIMITERS
        .globl    FILEIO_CLOSE
        .globl    STDERR_PUTI32
        .globl    MEM_ZALLOC
        .globl    STR_LENGTH
        .globl    STDERR_PUTS
        .globl    STDERR_PUTC
        .globl    _HLA_GET_EXCEPTIONPTREBP
        .globl    STDERR_PUTU32
        .globl    STDOUT_PUTU32
        .globl    _HLA_PUSH_EXCEPTIONPTR
        .globl    FILEIO_WRITE
        .globl    STDERR_NEWLN
        .globl    STDOUT_NEWLN
        .globl    DefaultExceptionHandler__hla_
        .globl    abstract__hla_
        .globl    STDOUT_PUTZS
        .globl    CONV_ATOH128
        .globl    STR_A_BUFTOSTR2
        .globl    _HLA_SET_EXCEPTIONPTR
        .globl    STDERR_PUTU8
        .globl    STDOUT_PUTU8
        .globl    ZSTR_CPY
        .globl    CONV_ATOU128
        .globl    TABLE_GETNODE
        .globl    TIME_UTCDATETIME
        .globl    MEM_REALLOC1
        .globl    BuildExcepts__hla_
        .globl    CONV_ATOH80
        .globl    CONV_ATOH64
        .globl    TIME_TOUNIXTIME
        .globl    CONV_ATOH32
        .globl    STDOUT_PUTS
        .globl    STDOUT_PUTD
        .globl    STDOUT_PUTC
        .globl    CONV_ATOU64
        .globl    CONV_ATOU32
        .globl    CSET_SETUNION
        .globl    Raise__hla_
        .globl    TABLE_CREATE
        .globl    shortDfltExcept__hla_
        .globl    TABLE_LOOKUP






  .text

DfltExHndlr__hla_:
        pushl      %ebp 
        movl       %esp, %ebp 
        jmp        DefaultExceptionHandler__hla_
xDfltExHndlr__hla___hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
InstallSignals__hla_:
        pushl      %ebp 
        movl       %esp, %ebp 
xInstallSignals__hla___hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
freeTableRecord__hla_3391:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      4(%ebx) 
        call       MEM_FREE
xfreeTableRecord__hla_3391__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
printLineNumberChain:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        mov        25(%ebx), %ebx 
        jmp        continue__hla_3399
while__hla_3399:
        pushl      $9 
        call       STDERR_PUTC
        pushl      4(%ebx) 
        call       STDERR_PUTS
        pushl      $58 
        call       STDERR_PUTC
        pushl      8(%ebx) 
        call       STDERR_PUTU32
        mov        (%ebx), %ebx 
        cmpl       $0, %ebx 
        je         false__hla_3401
        pushl      $str__hla_3402 
        call       STDERR_PUTS
false__hla_3401:
continue__hla_3399:
        cmpl       $0, %ebx 
        jne        while__hla_3399
exitloop__hla_3399:

        call       STDERR_NEWLN
        popl       %ebx 
xprintLineNumberChain__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
skipToEoln__hla_3418:
        jmp        continue__hla_3421
while__hla_3421:
        incl       %ebx 
continue__hla_3421:
        cmpl       end_source__hla_3414, %ebx 
        jnb        L3423__hla_
        cmpb       $10, (%ebx) 
        jne        while__hla_3421
L3423__hla_:
exitloop__hla_3421:

        incl       %ebx 
        incl       lineNumber__hla_3408 
        ret
skipSpaces__hla_3429:
        decl       %ebx 

skipSpcs__hla_3432:
        incl       %ebx 
        cmpl       end_source__hla_3414, %ebx 
        jae        skippedSpaces__hla_3433
        mov        (%ebx), %al 
        cmpb       $32, %al 
        je         skipSpcs__hla_3432
        cmpb       $9, %al 
        je         skipSpcs__hla_3432
        cmpb       $13, %al 
        je         skipSpcs__hla_3432

skippedSpaces__hla_3433:
        ret
skipSpaces2__hla_3439:
        decl       %ebx 

skipSpcs__hla_3442:
        incl       %ebx 
        cmpl       end_source__hla_3414, %ebx 
        jae        skippedSpaces__hla_3443
        mov        (%ebx), %al 
        cmpb       $32, %al 
        je         skipSpcs__hla_3442
        cmpb       $9, %al 
        je         skipSpcs__hla_3442
        cmpb       $13, %al 
        je         skipSpcs__hla_3442
        ret

skippedSpaces__hla_3443:
        pushl      $str__hla_3444 
        call       STDOUT_PUTS
        mov        $20, %eax 
        jmp        Raise__hla_
grabID__hla_3450:
        mov        4(%esp), %ecx 
forever__hla_3455:
continue__hla_3454:
        cmpl       end_source__hla_3414, %ebx 
        jae        exitloop__hla_3454
        movzbl     (%ebx), %eax 
        btl        %eax, idSet__hla_3451 
        jnc        exitloop__hla_3454
        mov        %al, (%ecx) 
        incl       %ebx 
        incl       %ecx 
        jmp        forever__hla_3455
exitloop__hla_3454:

        movb       $0, (%ecx) 
        mov        4(%esp), %edx 
        subl       %edx, %ecx 
        mov        %ecx, -4(%edx) 
        pushl      %esi 
        pushl      %edi 
false__hla_3458:
repeat__hla_3458:
        pushl      %edx 
        movl       $equatesTable, %esi 
        mov        (%esi), %edi 
        call *     8(%edi) 
        cmpl       $0, %eax 
        je         false__hla_3459
        mov        4(%eax), %eax 
        pushl      %eax 
        pushl      %edx 
        call       STR_CPY
false__hla_3459:
continue__hla_3458:
        cmpl       $0, %eax 
        jne        repeat__hla_3458
exitloop__hla_3458:

        popl       %edi 
        popl       %esi 
        cmpl       end_source__hla_3414, %ebx 
        setb       %al 
        movzbl     %al, %eax 
        ret        $4
unknownStmt__hla_3465:
        pushl      $str__hla_3468 
        call       STDOUT_PUTS
        mov        start_stmt__hla_3415, %ebx 
        jmp        continue__hla_3469
while__hla_3469:
        pushl      (%ebx) 
        call       STDOUT_PUTC
        incl       %ebx 
continue__hla_3469:
        cmpl       end_source__hla_3414, %ebx 
        jnb        L3471__hla_
        cmpb       $10, (%ebx) 
        jne        while__hla_3469
L3471__hla_:
exitloop__hla_3469:

        incl       %ebx 
        incl       lineNumber__hla_3408 
        call       STDOUT_NEWLN
        ret
getOperand__hla_3480:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $1028, %esp 
        pushl      %esi 
        call       skipSpaces2__hla_3439
        movzbl     (%ebx), %eax 
        cmpl       $36, %eax 
        jl         default__hla_3483
        cmpl       $122, %eax 
        jg         default__hla_3483
        jmp *      jmpTbl__hla_3483-144(,%eax,4) 
case__hla_3484:
        lea        1(%ebx), %esi 
        call       CONV_ATOH32
        movl       %esi, %ebx 
        xorl       %edx, %edx 
        jmp        endswitch__hla_3483
case__hla_3485:
        lea        (%ebx), %esi 
        call       CONV_ATOU32
        movl       %esi, %ebx 
        xorl       %edx, %edx 
        jmp        endswitch__hla_3483
case__hla_3486:
        pushl      %ebp 
        addl       $-1028, (%esp) 
        pushl      $1024 
        call       STR_INIT
        mov        %eax, -4(%ebp) 
        pushl      -4(%ebp) 
        call       grabID__hla_3450
        pushl      -4(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        call *     4(%edi) 
        cmpl       $0, 4(%eax) 
        jne        false__hla_3487
        movl       %eax, %edx 
        pushl      $24 
        call       MEM_ALLOC1
        mov        %eax, 4(%edx) 
        movb       $4, 21(%eax) 
        mov        8(%edx), %ecx 
        mov        %ecx, 4(%eax) 
        movl       $0, 12(%eax) 
        movl       $0, (%eax) 
        movb       $0, 20(%eax) 
        jmp        endif__hla_3487
false__hla_3487:
        mov        4(%eax), %edx 
        orb        $4, 21(%edx) 
        movl       %eax, %edx 
endif__hla_3487:
        xorl       %eax, %eax 
        jmp        endswitch__hla_3483
case__hla_3488:
        addl       $1, %ebx 
        call       RelExpr__hla_3477
        pushl      %eax 
        call       skipSpaces2__hla_3439
        cmpb       $41, %al 
        je         false__hla_3489
        pushl      $str__hla_3490 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3408 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $9, %eax 
        jmp        Raise__hla_
false__hla_3489:
        addl       $1, %ebx 
        popl       %eax 
        jmp        endswitch__hla_3483
default__hla_3483:
        pushl      $str__hla_3491 
        call       STDOUT_PUTS
        pushl      %eax 
        call       STDOUT_PUTC
        pushl      $str__hla_3492 
        call       STDOUT_PUTS
        pushl      lineNumber__hla_3408 
        call       STDOUT_PUTU32
        call       STDOUT_NEWLN
        mov        $20, %eax 
        jmp        Raise__hla_
endswitch__hla_3483:
        popl       %esi 
xgetOperand__hla_3480__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
RelExpr__hla_3477:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $8, %esp 
        call       getOperand__hla_3480
        mov        %eax, -4(%ebp) 
        mov        %edx, -8(%ebp) 
forever__hla_3499:
continue__hla_3498:
        movzbl     (%ebx), %eax 
        cmpl       $43, %eax 
        je         case__hla_3501
        cmpl       $45, %eax 
        je         case__hla_3504
        jmp        default__hla_3500
case__hla_3501:
        addl       $1, %ebx 
        call       getOperand__hla_3480
        cmpl       $0, %edx 
        je         false__hla_3502
        pushl      $str__hla_3503 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3408 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3502:
        addl       %eax, -4(%ebp) 
        jmp        endswitch__hla_3500
case__hla_3504:
        addl       $1, %ebx 
        call       getOperand__hla_3480
        cmpl       $0, %edx 
        je         false__hla_3505
        pushl      $str__hla_3503 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3408 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3505:
        negl       %eax 
        addl       %eax, -4(%ebp) 
        jmp        endswitch__hla_3500
default__hla_3500:
        jmp        exitloop__hla_3498
endswitch__hla_3500:
        jmp        forever__hla_3499
exitloop__hla_3498:

        mov        -4(%ebp), %eax 
        mov        -8(%ebp), %edx 
xRelExpr__hla_3477__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
EvalExpr__hla_3511:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %edx 
        call       RelExpr__hla_3477
        cmpl       $0, %edx 
        je         false__hla_3514
        pushl      $str__hla_3515 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3408 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3514:
        popl       %edx 
xEvalExpr__hla_3511__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
parseBytes__hla_3521:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $12, %esp 
        call       skipSpaces2__hla_3439
        cmpb       $34, (%ebx) 
        jne        false__hla_3524
        addl       $1, %ebx 
        mov        %ebx, -4(%ebp) 
        jmp        continue__hla_3525
while__hla_3525:
        addl       $1, %ebx 
continue__hla_3525:
        cmpb       $34, (%ebx) 
        jne        while__hla_3525
exitloop__hla_3525:

        mov        %ebx, -8(%ebp) 
        call       skipSpaces2__hla_3439
        cmpb       $44, (%ebx) 
        jne        false__hla_3527
        addl       $1, %ebx 
        mov        -8(%ebp), %eax 
        subl       -4(%ebp), %eax 
        addl       8(%ebp), %eax 
        pushl      %eax 
        call       parseBytes__hla_3521
        jmp        endif__hla_3527
false__hla_3527:
        mov        -8(%ebp), %ecx 
        subl       -4(%ebp), %ecx 
        addl       8(%ebp), %ecx 
        addl       $17, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC1
        subl       $17, %ecx 
        pushl      %edx 
        mov        tknListTail__hla_3409, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %ecx, 13(%eax) 
        mov        %eax, tknListTail__hla_3409 
        popl       %edx 
        addl       $17, %eax 
endif__hla_3527:
        pushl      %esi 
        pushl      %edi 
        pushl      %ecx 
        cld
        mov        -4(%ebp), %esi 
        movl       %eax, %edi 
        addl       8(%ebp), %edi 
        mov        -8(%ebp), %ecx 
        subl       %esi, %ecx 
        cld
        rep movsb
        popl       %ecx 
        popl       %edi 
        popl       %esi 
        jmp        endif__hla_3524
false__hla_3524:
        call       EvalExpr__hla_3511
        cmpl       $256, %eax 
        jnae       false__hla_3528
        pushl      $str__hla_3529 
        call       STDOUT_PUTS
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_3528:
        mov        %al, -9(%ebp) 
        call       skipSpaces2__hla_3439
        cmpb       $44, (%ebx) 
        jne        false__hla_3530
        addl       $1, %ebx 
        mov        8(%ebp), %eax 
        addl       $1, %eax 
        pushl      %eax 
        call       parseBytes__hla_3521
        jmp        endif__hla_3530
false__hla_3530:
        mov        8(%ebp), %ecx 
        addl       $18, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC1
        subl       $17, %ecx 
        pushl      %edx 
        mov        tknListTail__hla_3409, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %ecx, 13(%eax) 
        mov        %eax, tknListTail__hla_3409 
        popl       %edx 
        addl       $17, %eax 
endif__hla_3530:
        pushl      %ebx 
        pushl      %edx 
        mov        -9(%ebp), %bl 
        mov        8(%ebp), %edx 
        mov        %bl, (%eax,%edx,1) 
        popl       %edx 
        popl       %ebx 
endif__hla_3524:
xparseBytes__hla_3521__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
parseWords__hla_3536:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $12, %esp 
        pushl      %edx 
        call       skipSpaces2__hla_3439
        call       EvalExpr__hla_3511
        cmpl       $65536, %eax 
        jnae       false__hla_3539
        pushl      $str__hla_3540 
        call       STDOUT_PUTS
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_3539:
        mov        %ax, -10(%ebp) 
        call       skipSpaces2__hla_3439
        cmpb       $44, (%ebx) 
        jne        false__hla_3541
        addl       $1, %ebx 
        mov        8(%ebp), %eax 
        addl       $2, %eax 
        pushl      %eax 
        call       parseWords__hla_3536
        jmp        endif__hla_3541
false__hla_3541:
        mov        8(%ebp), %ecx 
        addl       $19, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC1
        subl       $17, %ecx 
        mov        tknListTail__hla_3409, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %ecx, 13(%eax) 
        mov        %eax, tknListTail__hla_3409 
        addl       $17, %eax 
        pushl      %ebx 
        mov        -10(%ebp), %bx 
        mov        8(%ebp), %edx 
        mov        %bx, (%eax,%edx,1) 
        popl       %ebx 
endif__hla_3541:
        popl       %edx 
xparseWords__hla_3536__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
parseDwords__hla_3547:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $16, %esp 
        pushl      %edx 
        call       skipSpaces2__hla_3439
        call       RelExpr__hla_3477
        mov        %eax, -12(%ebp) 
        cmpl       $0, %edx 
        jne        false__hla_3550
        pushl      $21 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3409, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        movl       $4, 13(%eax) 
        mov        %eax, tknListTail__hla_3409 
        mov        -12(%ebp), %edx 
        mov        %edx, 17(%eax) 
        clc
        jmp        endif__hla_3550
false__hla_3550:
        pushl      $21 
        call       MEM_ALLOC1
        pushl      %edx 
        mov        tknListTail__hla_3409, %edx 
        movb       $5, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %eax, tknListTail__hla_3409 
        popl       %edx 
        mov        %edx, 13(%eax) 
        mov        -12(%ebp), %edx 
        mov        %edx, 17(%eax) 
        stc
endif__hla_3550:
        popl       %edx 
xparseDwords__hla_3547__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
EvalQWord__hla_3559:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %esi 
        mov        (%ebx), %al 
        cmpb       $36, %al 
        jne        false__hla_3562
        addl       $1, %ebx 
        lea        (%ebx), %esi 
        call       CONV_ATOH64
        movl       %esi, %ebx 
        jmp        endif__hla_3562
false__hla_3562:
        lea        (%ebx), %esi 
        call       CONV_ATOU64
        movl       %esi, %ebx 
endif__hla_3562:
        popl       %esi 
xEvalQWord__hla_3559__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
parseQWords__hla_3556:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $16, %esp 
        pushl      %edx 
        call       skipSpaces2__hla_3439
        call       EvalQWord__hla_3559
        mov        %eax, -16(%ebp) 
        mov        %edx, -12(%ebp) 
        call       skipSpaces2__hla_3439
        cmpb       $44, (%ebx) 
        jne        false__hla_3568
        addl       $1, %ebx 
        mov        8(%ebp), %eax 
        addl       $8, %eax 
        pushl      %eax 
        call       parseQWords__hla_3556
        jmp        endif__hla_3568
false__hla_3568:
        mov        8(%ebp), %ecx 
        addl       $25, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC1
        subl       $17, %ecx 
        mov        tknListTail__hla_3409, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %ecx, 13(%eax) 
        mov        %eax, tknListTail__hla_3409 
        addl       $17, %eax 
        pushl      %ebx 
        mov        -16(%ebp), %ebx 
        mov        8(%ebp), %edx 
        mov        %ebx, (%eax,%edx,1) 
        mov        -12(%ebp), %ebx 
        mov        %ebx, 4(%eax,%edx,1) 
        popl       %ebx 
endif__hla_3568:
        popl       %edx 
xparseQWords__hla_3556__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
EvalTByte__hla_3577:
        pushl      %esi 
        mov        (%ebx), %al 
        cmpb       $36, %al 
        jne        false__hla_3580
        addl       $1, %ebx 
        lea        (%ebx), %esi 
        pushl      %ebp 
        addl       $-24, (%esp) 
        call       CONV_ATOH80
        movl       %esi, %ebx 
        jmp        endif__hla_3580
false__hla_3580:
        lea        (%ebx), %esi 
        pushl      %ebp 
        addl       $-24, (%esp) 
        call       CONV_ATOU128
        movl       %esi, %ebx 
        movzwl     -14(%ebp), %eax 
        orl        -12(%ebp), %eax 
        testl      %eax, %eax 
        je         false__hla_3581
        pushl      $str__hla_3582 
        call       STDOUT_PUTS
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_3581:
endif__hla_3580:
        popl       %esi 
        ret
parseTBytes__hla_3574:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $24, %esp 
        pushl      %edx 
        call       skipSpaces2__hla_3439
        call       EvalTByte__hla_3577
        call       skipSpaces2__hla_3439
        cmpb       $44, (%ebx) 
        jne        false__hla_3588
        addl       $1, %ebx 
        mov        8(%ebp), %eax 
        addl       $10, %eax 
        pushl      %eax 
        call       parseTBytes__hla_3574
        jmp        endif__hla_3588
false__hla_3588:
        mov        8(%ebp), %ecx 
        addl       $27, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC1
        subl       $17, %ecx 
        mov        tknListTail__hla_3409, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %ecx, 13(%eax) 
        mov        %eax, tknListTail__hla_3409 
        addl       $17, %eax 
        pushl      %ebx 
        mov        -24(%ebp), %ebx 
        mov        8(%ebp), %edx 
        mov        %ebx, (%eax,%edx,1) 
        mov        -20(%ebp), %ebx 
        mov        %ebx, 4(%eax,%edx,1) 
        mov        -16(%ebp), %bx 
        mov        %bx, 8(%eax,%edx,1) 
        popl       %ebx 
endif__hla_3588:
        popl       %edx 
xparseTBytes__hla_3574__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
EvalLWord__hla_3597:
        pushl      %esi 
        mov        (%ebx), %al 
        cmpb       $36, %al 
        jne        false__hla_3600
        addl       $1, %ebx 
        lea        (%ebx), %esi 
        pushl      %ebp 
        addl       $-24, (%esp) 
        call       CONV_ATOH128
        movl       %esi, %ebx 
        jmp        endif__hla_3600
false__hla_3600:
        lea        (%ebx), %esi 
        pushl      %ebp 
        addl       $-24, (%esp) 
        call       CONV_ATOU128
        movl       %esi, %ebx 
endif__hla_3600:
        popl       %esi 
        ret
parseLWords__hla_3594:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $24, %esp 
        pushl      %edx 
        call       skipSpaces2__hla_3439
        call       EvalLWord__hla_3597
        call       skipSpaces2__hla_3439
        cmpb       $44, (%ebx) 
        jne        false__hla_3606
        addl       $1, %ebx 
        mov        8(%ebp), %eax 
        addl       $16, %eax 
        pushl      %eax 
        call       parseTBytes__hla_3574
        jmp        endif__hla_3606
false__hla_3606:
        mov        8(%ebp), %ecx 
        addl       $33, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC1
        subl       $17, %ecx 
        mov        tknListTail__hla_3409, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %ecx, 13(%eax) 
        mov        %eax, tknListTail__hla_3409 
        addl       $17, %eax 
        pushl      %ebx 
        mov        -24(%ebp), %ebx 
        mov        8(%ebp), %edx 
        mov        %ebx, (%eax,%edx,1) 
        mov        -20(%ebp), %ebx 
        mov        %ebx, 4(%eax,%edx,1) 
        mov        -16(%ebp), %ebx 
        mov        %ebx, 8(%eax,%edx,1) 
        mov        -12(%ebp), %ebx 
        mov        %ebx, 12(%eax,%edx,1) 
        popl       %ebx 
endif__hla_3606:
        popl       %edx 
xparseLWords__hla_3594__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
coalesce__hla_3612:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $32, %esp 
        mov        %eax, -16(%ebp) 
        mov        %ecx, -20(%ebp) 
        mov        %edx, -24(%ebp) 
        mov        %esi, -28(%ebp) 
        mov        %edi, -32(%ebp) 
        mov        8(%ebp), %edx 
        mov        (%edx), %esi 
        mov        %esi, -8(%ebp) 
        mov        (%esi), %eax 
        mov        %eax, -4(%ebp) 
        mov        13(%edx), %ecx 
        addl       13(%esi), %ecx 
        mov        %ecx, -12(%ebp) 
        addl       $17, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC1
        mov        13(%esi), %ecx 
        addl       $17, %ecx 
        movl       %eax, %edi 
        cld
        rep movsb
        mov        -12(%ebp), %ecx 
        mov        %ecx, 13(%eax) 
        mov        8(%ebp), %esi 
        mov        13(%esi), %ecx 
        addl       $17, %esi 
        cld
        rep movsb
        mov        -4(%ebp), %edx 
        mov        %eax, 4(%edx) 
        mov        %edx, (%eax) 
        movl       $0, 4(%eax) 
        mov        %eax, tknListTail__hla_3409 
        pushl      8(%ebp) 
        call       MEM_FREE
        pushl      -8(%ebp) 
        call       MEM_FREE
        mov        -16(%ebp), %eax 
        mov        -20(%ebp), %ecx 
        mov        -24(%ebp), %edx 
        mov        -28(%ebp), %esi 
        mov        -32(%ebp), %edi 
xcoalesce__hla_3612__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
initStmt__hla_3620:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ecx 
        pushl      8(%ebp) 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3409, %ecx 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        mov        %eax, 4(%ecx) 
        mov        %eax, tknListTail__hla_3409 
        popl       %ecx 
xinitStmt__hla_3620__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
parseSourceFileList__hla_3628:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %edx 
        call       skipSpaces2__hla_3439
        cmpb       $59, (%ebx) 
        jne        false__hla_3632
        pushl      %ecx 
        pushl      %esi 
        pushl      %edi 
        addl       $1, %ebx 
        call       skipSpaces2__hla_3439
        movl       %ebx, %ecx 
        subl       $1, %ebx 
false__hla_3633:
repeat__hla_3633:
        addl       $1, %ebx 
        movzbl     (%ebx), %eax 
        btl        %eax, filenameDelims__hla_3629 
continue__hla_3633:
        jnc        repeat__hla_3633
exitloop__hla_3633:

        movl       %ebx, %eax 
        subl       %ecx, %eax 
        cmpl       $512, %eax 
        jna        false__hla_3634
        pushl      $str__hla_3635 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3408 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_3634:
        pushl      $12 
        call       MEM_ALLOC1
        mov        8(%ebp), %edx 
        mov        %eax, (%edx) 
        movl       %eax, %edx 
        pushl      %ecx 
        pushl      %ebx 
        call       STR_A_BUFTOSTR2
        addl       $1, %ebx 
        mov        %eax, 4(%edx) 
        cmpb       $44, (%ebx) 
        jne        false__hla_3636
        addl       $1, %ebx 
false__hla_3636:
        call       skipSpaces2__hla_3439
        movl       %ebx, %esi 
        call       CONV_ATOU32
        movl       %esi, %ebx 
        mov        %eax, 8(%edx) 
        movl       $0, (%edx) 
        lea        (%edx), %eax 
        popl       %edi 
        popl       %esi 
        popl       %ecx 
        pushl      %eax 
        call       parseSourceFileList__hla_3628
        jmp        endif__hla_3632
false__hla_3632:
        mov        8(%ebp), %edx 
        movl       $0, (%edx) 
endif__hla_3632:
        popl       %edx 
xparseSourceFileList__hla_3628__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
getDisp__hla_3642:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %eax 
        call       skipSpaces__hla_3429
        call       RelExpr__hla_3477
        popl       %ecx 
        mov        %eax, 21(%ecx) 
        mov        %edx, 17(%ecx) 
        movl       $0, 13(%ecx) 
        lea        25(%ecx), %eax 
        pushl      %eax 
        call       parseSourceFileList__hla_3628
        call       skipToEoln__hla_3418
xgetDisp__hla_3642__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
emitDummy__hla_3650:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %eax 
        pushl      %ecx 
        pushl      $13 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3409, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $21, 8(%eax) 
        mov        %eax, tknListTail__hla_3409 
        popl       %ecx 
        popl       %eax 
xemitDummy__hla_3650__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
lexer:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $5144, %esp 
        movl       $0, -12(%ebp) 
        movl       $0, -4(%ebp) 
        pushl      %ebp 
        addl       $-1036, (%esp) 
        pushl      $1024 
        call       STR_INIT
        mov        %eax, -8(%ebp) 
        mov        20(%ebp), %eax 
        mov        %eax, end_source__hla_3414 
        pushl      $13 
        call       MEM_ALLOC1
        movl       $0, 4(%eax) 
        movl       $0, (%eax) 
        movb       $0, 8(%eax) 
        mov        %eax, -5136(%ebp) 
        mov        %eax, codeListTail__hla_3411 
        mov        %eax, tknListTail__hla_3409 
        movl       $codeListTail__hla_3411, lastTailPtr__hla_3410 
        movb       $1, currentSection 
        pushl      $13 
        call       MEM_ALLOC1
        movl       $0, 4(%eax) 
        movl       $0, (%eax) 
        movb       $0, 8(%eax) 
        mov        %eax, -5140(%ebp) 
        mov        %eax, dataListTail__hla_3412 
        pushl      $13 
        call       MEM_ALLOC1
        movl       $0, 4(%eax) 
        movl       $0, (%eax) 
        movb       $0, 8(%eax) 
        mov        %eax, -5144(%ebp) 
        mov        %eax, bssListTail__hla_3413 
        mov        24(%ebp), %ebx 
forever__hla_3659:
continue__hla_3658:
        mov        %ebx, start_stmt__hla_3415 
        decl       %ebx 

skipSpcs__hla_3660:
        incl       %ebx 
        cmpl       end_source__hla_3414, %ebx 
        jae        exitloop__hla_3658
        mov        (%ebx), %al 
        cmpb       $32, %al 
        je         skipSpcs__hla_3660
        cmpb       $9, %al 
        je         skipSpcs__hla_3660
        cmpb       $13, %al 
        je         skipSpcs__hla_3660
        cmpb       $10, %al 
        jne        false__hla_3662
        incl       %ebx 
        incl       lineNumber__hla_3408 
        jmp        continue__hla_3658
false__hla_3662:
        cmpb       $59, %al 
        jne        false__hla_3663
        call       skipToEoln__hla_3418
        jmp        continue__hla_3658
false__hla_3663:
        cmpb       $46, %al 
        jne        false__hla_3664
        addl       $1, %ebx 
        movzbl     (%ebx), %eax 
        cmpl       $97, %eax 
        jl         default__hla_3665
        cmpl       $122, %eax 
        jg         default__hla_3665
        jmp *      jmpTbl__hla_3665-388(,%eax,4) 
case__hla_3666:
        pushl      $17 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3409, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $1, 8(%eax) 
        mov        %eax, tknListTail__hla_3409 
        addl       $1, %ebx 
        call       EvalExpr__hla_3511
        mov        tknListTail__hla_3409, %ecx 
        mov        %eax, 13(%ecx) 
        call       skipToEoln__hla_3418
        jmp        endswitch__hla_3665
case__hla_3667:
        addl       $1, %ebx 
        pushl      $0 
        call       parseBytes__hla_3521
        subl       $17, %eax 
        mov        (%eax), %ecx 
        cmpl       $0, %ecx 
        jne        _0e54_skipAssertion___hla_3672
        pushl      _0e55_msg___hla_3670 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0e54_skipAssertion___hla_3672:
        cmpb       $2, 8(%ecx) 
        jne        false__hla_3673
        pushl      %eax 
        call       coalesce__hla_3612
false__hla_3673:
        call       skipToEoln__hla_3418
        jmp        endswitch__hla_3665
case__hla_3674:
        call       emitDummy__hla_3650
        movb       $1, currentSection 
        mov        lastTailPtr__hla_3410, %eax 
        mov        tknListTail__hla_3409, %ecx 
        mov        %ecx, (%eax) 
        movl       $codeListTail__hla_3411, lastTailPtr__hla_3410 
        mov        codeListTail__hla_3411, %eax 
        mov        %eax, tknListTail__hla_3409 
        pushl      $13 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3409, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $10, 8(%eax) 
        mov        %eax, tknListTail__hla_3409 
        call       skipToEoln__hla_3418
        jmp        endswitch__hla_3665
case__hla_3675:
        addl       $1, %ebx 
        pushl      $0 
        call       parseDwords__hla_3547
        jc         false__hla_3676
        mov        (%eax), %ecx 
        cmpl       $0, %ecx 
        jne        _0e5d_skipAssertion___hla_3681
        pushl      _0e5e_msg___hla_3679 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0e5d_skipAssertion___hla_3681:
        cmpb       $2, 8(%ecx) 
        jne        false__hla_3682
        pushl      %eax 
        call       coalesce__hla_3612
false__hla_3682:
false__hla_3676:
        call       skipToEoln__hla_3418
        jmp        endswitch__hla_3665
case__hla_3683:
        addl       $1, %ebx 
        call       skipSpaces2__hla_3439
        pushl      -8(%ebp) 
        call       grabID__hla_3450
        pushl      -8(%ebp) 
        movl       $equatesTable, %esi 
        mov        (%esi), %edi 
        call *     4(%edi) 
        cmpl       $0, 4(%eax) 
        jne        false__hla_3684
        pushl      %eax 
        call       skipSpaces2__hla_3439
        cmpb       $44, (%ebx) 
        je         false__hla_3685
        pushl      $str__hla_3686 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3408 
        call       STDERR_PUTU32
        pushl      $str__hla_3687 
        call       STDERR_PUTS
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3685:
        addl       $1, %ebx 
        call       skipSpaces2__hla_3439
        pushl      -8(%ebp) 
        call       grabID__hla_3450
        pushl      -8(%ebp) 
        call       STR_A_CPY
        popl       %edx 
        mov        %eax, 4(%edx) 
        jmp        endif__hla_3684
false__hla_3684:
        pushl      $str__hla_3688 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3408 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
endif__hla_3684:
        jmp        endswitch__hla_3665
case__hla_3689:
        addl       $1, %ebx 
        call       skipSpaces2__hla_3439
        pushl      -8(%ebp) 
        call       grabID__hla_3450
        pushl      -8(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        call *     4(%edi) 
        cmpl       $0, 4(%eax) 
        je         false__hla_3690
        movl       %eax, %edx 
        pushl      $17 
        call       MEM_ALLOC1
        movb       $4, 8(%eax) 
        mov        %edx, 13(%eax) 
        mov        tknListTail__hla_3409, %ecx 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        mov        %eax, 4(%ecx) 
        mov        %eax, tknListTail__hla_3409 
        jmp        endif__hla_3690
false__hla_3690:
        pushl      $str__hla_3691 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3408 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
endif__hla_3690:
        call       skipToEoln__hla_3418
        jmp        endswitch__hla_3665
case__hla_3692:
        addl       $1, %ebx 
        pushl      $0 
        call       parseLWords__hla_3594
        subl       $17, %eax 
        mov        (%eax), %ecx 
        cmpl       $0, %ecx 
        jne        _0e6d_skipAssertion___hla_3697
        pushl      _0e6e_msg___hla_3695 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0e6d_skipAssertion___hla_3697:
        cmpb       $2, 8(%ecx) 
        jne        false__hla_3698
        pushl      %eax 
        call       coalesce__hla_3612
false__hla_3698:
        call       skipToEoln__hla_3418
        jmp        endswitch__hla_3665
case__hla_3699:
        addl       $1, %ebx 
        call       skipSpaces2__hla_3439
        pushl      -8(%ebp) 
        call       grabID__hla_3450
        pushl      -8(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        call *     4(%edi) 
        cmpl       $0, 4(%eax) 
        jne        false__hla_3700
        movl       %eax, %ecx 
        pushl      $24 
        call       MEM_ALLOC1
        mov        %eax, 4(%ecx) 
        movb       $2, 21(%eax) 
        movl       $0, 12(%eax) 
        movl       $0, (%eax) 
        mov        8(%ecx), %ecx 
        mov        %ecx, 4(%eax) 
        movb       $0, 20(%eax) 
        jmp        endif__hla_3700
false__hla_3700:
        mov        4(%eax), %ecx 
        testb      $1, 21(%ecx) 
        jz         false__hla_3701
        pushl      $str__hla_3702 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3408 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3701:
        orb        $2, 21(%ecx) 
endif__hla_3700:
        call       skipToEoln__hla_3418
        jmp        endswitch__hla_3665
case__hla_3703:
        addl       $1, %ebx 
        pushl      $0 
        call       parseQWords__hla_3556
        subl       $17, %eax 
        mov        (%eax), %ecx 
        cmpl       $0, %ecx 
        jne        _0e78_skipAssertion___hla_3708
        pushl      _0e79_msg___hla_3706 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0e78_skipAssertion___hla_3708:
        cmpb       $2, 8(%ecx) 
        jne        false__hla_3709
        pushl      %eax 
        call       coalesce__hla_3612
false__hla_3709:
        call       skipToEoln__hla_3418
        jmp        endswitch__hla_3665
case__hla_3710:
        pushl      $17 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3409, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $6, 8(%eax) 
        mov        %eax, tknListTail__hla_3409 
        addl       $1, %ebx 
        call       EvalExpr__hla_3511
        mov        tknListTail__hla_3409, %ecx 
        mov        %eax, 13(%ecx) 
        call       skipToEoln__hla_3418
        jmp        endswitch__hla_3665
case__hla_3711:
        call       emitDummy__hla_3650
        movb       $2, currentSection 
        mov        lastTailPtr__hla_3410, %eax 
        mov        tknListTail__hla_3409, %ecx 
        mov        %ecx, (%eax) 
        movl       $dataListTail__hla_3412, lastTailPtr__hla_3410 
        mov        dataListTail__hla_3412, %eax 
        mov        %eax, tknListTail__hla_3409 
        pushl      $13 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3409, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $12, 8(%eax) 
        mov        %eax, tknListTail__hla_3409 
        call       skipToEoln__hla_3418
        jmp        endswitch__hla_3665
case__hla_3712:
        addl       $1, %ebx 
        pushl      $0 
        call       parseTBytes__hla_3574
        subl       $17, %eax 
        mov        (%eax), %ecx 
        cmpl       $0, %ecx 
        jne        _0e81_skipAssertion___hla_3717
        pushl      _0e82_msg___hla_3715 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0e81_skipAssertion___hla_3717:
        cmpb       $2, 8(%ecx) 
        jne        false__hla_3718
        pushl      %eax 
        call       coalesce__hla_3612
false__hla_3718:
        call       skipToEoln__hla_3418
        jmp        endswitch__hla_3665
case__hla_3719:
        addl       $1, %ebx 
        mov        (%ebx), %al 
        cmpb       $98, %al 
        jne        false__hla_3720
        pushl      $25 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3409, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $7, 8(%eax) 
        mov        %eax, tknListTail__hla_3409 
        addl       $1, %ebx 
        call       EvalExpr__hla_3511
        mov        tknListTail__hla_3409, %ecx 
        mov        %eax, 17(%ecx) 
        call       skipSpaces2__hla_3439
        cmpb       $44, (%ebx) 
        je         false__hla_3721
        pushl      $str__hla_3722 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3408 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3721:
        addl       $1, %ebx 
        call       EvalExpr__hla_3511
        mov        tknListTail__hla_3409, %ecx 
        mov        %eax, 21(%ecx) 
        movl       $1, 13(%ecx) 
        jmp        endif__hla_3720
false__hla_3720:
        cmpb       $119, %al 
        jne        false__hla_3723
        pushl      $25 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3409, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $8, 8(%eax) 
        mov        %eax, tknListTail__hla_3409 
        addl       $1, %ebx 
        call       EvalExpr__hla_3511
        mov        tknListTail__hla_3409, %ecx 
        mov        %eax, 17(%ecx) 
        call       skipSpaces2__hla_3439
        cmpb       $44, (%ebx) 
        je         false__hla_3724
        pushl      $str__hla_3725 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3408 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3724:
        addl       $1, %ebx 
        call       EvalExpr__hla_3511
        mov        tknListTail__hla_3409, %ecx 
        mov        %eax, 21(%ecx) 
        movl       $2, 13(%ecx) 
        jmp        endif__hla_3720
false__hla_3723:
        cmpb       $100, %al 
        jne        false__hla_3726
        pushl      $25 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3409, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $9, 8(%eax) 
        mov        %eax, tknListTail__hla_3409 
        addl       $1, %ebx 
        call       EvalExpr__hla_3511
        mov        tknListTail__hla_3409, %ecx 
        mov        %eax, 17(%ecx) 
        call       skipSpaces2__hla_3439
        cmpb       $44, (%ebx) 
        je         false__hla_3727
        pushl      $str__hla_3728 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3408 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3727:
        addl       $1, %ebx 
        call       EvalExpr__hla_3511
        mov        tknListTail__hla_3409, %ecx 
        mov        %eax, 21(%ecx) 
        movl       $4, 13(%ecx) 
        jmp        endif__hla_3720
false__hla_3726:
        call       unknownStmt__hla_3465
endif__hla_3720:
        call       skipToEoln__hla_3418
        jmp        endswitch__hla_3665
case__hla_3729:
        call       emitDummy__hla_3650
        movb       $3, currentSection 
        mov        lastTailPtr__hla_3410, %eax 
        mov        tknListTail__hla_3409, %ecx 
        mov        %ecx, (%eax) 
        movl       $bssListTail__hla_3413, lastTailPtr__hla_3410 
        mov        bssListTail__hla_3413, %eax 
        mov        %eax, tknListTail__hla_3409 
        pushl      $13 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3409, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $13, 8(%eax) 
        mov        %eax, tknListTail__hla_3409 
        call       skipToEoln__hla_3418
        jmp        endswitch__hla_3665
case__hla_3730:
        addl       $1, %ebx 
        pushl      $0 
        call       parseWords__hla_3536
        subl       $17, %eax 
        mov        (%eax), %ecx 
        cmpl       $0, %ecx 
        jne        _0e93_skipAssertion___hla_3735
        pushl      _0e94_msg___hla_3733 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0e93_skipAssertion___hla_3735:
        cmpb       $2, 8(%ecx) 
        jne        false__hla_3736
        pushl      %eax 
        call       coalesce__hla_3612
false__hla_3736:
        call       skipToEoln__hla_3418
        jmp        endswitch__hla_3665
case__hla_3737:
        addl       $1, %ebx 
        call       skipSpaces2__hla_3439
        pushl      -8(%ebp) 
        call       grabID__hla_3450
        pushl      -8(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        call *     4(%edi) 
        cmpl       $0, 4(%eax) 
        jne        false__hla_3738
        movl       %eax, %ecx 
        pushl      $24 
        call       MEM_ALLOC1
        mov        %eax, 4(%ecx) 
        movb       $1, 21(%eax) 
        movl       $0, 12(%eax) 
        movl       $0, (%eax) 
        mov        8(%ecx), %ecx 
        mov        %ecx, 4(%eax) 
        mov        currentSection, %cl 
        mov        %cl, 20(%eax) 
        jmp        endif__hla_3738
false__hla_3738:
        mov        4(%eax), %ecx 
        testb      $1, 21(%ecx) 
        jz         false__hla_3739
        mov        8(%eax), %eax 
        pushl      $str__hla_3740 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTS
        pushl      $str__hla_3741 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3408 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
        jmp        endif__hla_3739
false__hla_3739:
        testb      $8, 21(%ecx) 
        jz         false__hla_3742
        orb        $2, 21(%ecx) 
        jmp        endif__hla_3742
false__hla_3742:
        orb        $1, 21(%ecx) 
endif__hla_3742:
endif__hla_3739:
        movl       %ecx, %eax 
        mov        currentSection, %cl 
        mov        %cl, 20(%eax) 
endif__hla_3738:
        call       skipToEoln__hla_3418
        jmp        endswitch__hla_3665
case__hla_3743:
        call       skipToEoln__hla_3418
        jmp        endswitch__hla_3665
default__hla_3665:
        call       unknownStmt__hla_3465
endswitch__hla_3665:
        jmp        endif__hla_3664
false__hla_3664:
        cmpb       $58, %al 
        jne        false__hla_3744
        addl       $1, %ebx 
        call       skipSpaces2__hla_3439
        pushl      -8(%ebp) 
        call       grabID__hla_3450
        pushl      $17 
        call       MEM_ALLOC1
        movl       %eax, %edx 
        pushl      -8(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        call *     4(%edi) 
        cmpl       $0, 4(%eax) 
        jne        false__hla_3745
        movl       %eax, %ecx 
        pushl      $24 
        call       MEM_ALLOC1
        mov        %eax, 4(%ecx) 
        movb       $8, 21(%eax) 
        movl       $0, 12(%eax) 
        movl       $0, (%eax) 
        mov        8(%ecx), %edx 
        mov        %edx, 4(%eax) 
        mov        currentSection, %dl 
        mov        %dl, 20(%eax) 
        movb       $0, 22(%eax) 
        movl       $0, 16(%eax) 
        movl       %ecx, %eax 
        jmp        endif__hla_3745
false__hla_3745:
        mov        4(%eax), %ecx 
        testb      $8, 21(%ecx) 
        jz         false__hla_3746
        pushl      $str__hla_3747 
        call       STDERR_PUTS
        pushl      8(%eax) 
        call       STDERR_PUTS
        pushl      $str__hla_3748 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3408 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3746:
        testb      $1, 21(%ecx) 
        jz         false__hla_3749
        andb       $254, 21(%ecx) 
        orb        $2, 21(%ecx) 
false__hla_3749:
        orb        $8, 21(%ecx) 
        mov        currentSection, %dl 
        mov        %dl, 20(%ecx) 
        movb       $0, 22(%ecx) 
        movl       $0, 16(%ecx) 
endif__hla_3745:
        movl       %eax, %edx 
        pushl      $17 
        call       MEM_ALLOC1
        movb       $3, 8(%eax) 
        mov        %edx, 13(%eax) 
        mov        tknListTail__hla_3409, %ecx 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        mov        %eax, 4(%ecx) 
        mov        %eax, tknListTail__hla_3409 
        call       skipToEoln__hla_3418
        jmp        endif__hla_3664
false__hla_3744:
        lea        10(%ebx), %ecx 
        cmpl       end_source__hla_3414, %ecx 
        jna        false__hla_3750
        call       unknownStmt__hla_3465
        jmp        endif__hla_3750
false__hla_3750:
        cmpb       $106, %al 
        jne        false__hla_3751
        mov        1(%ebx), %eax 
        movl       %eax, %edx 
        bswap      %edx 
        cmpb       $32, %ah 
        jne        false__hla_3752
        cmpb       $97, %al 
        je         ja_instr__hla_3753
        cmpb       $98, %al 
        je         jb_instr__hla_3754
        cmpb       $99, %al 
        je         jc_instr__hla_3755
        cmpb       $101, %al 
        je         je_instr__hla_3756
        cmpb       $103, %al 
        je         jg_instr__hla_3757
        cmpb       $108, %al 
        je         jl_instr__hla_3758
        cmpb       $111, %al 
        je         jo_instr__hla_3759
        cmpb       $112, %al 
        je         jp_instr__hla_3760
        cmpb       $115, %al 
        je         js_instr__hla_3761
        cmpb       $122, %al 
        je         jz_instr__hla_3762
        call       unknownStmt__hla_3465
        jmp        Done__hla_3763

jnbe_instr__hla_3764:
        addl       $2, %ebx 

ja_instr__hla_3753:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3620
        movb       $16, 8(%eax) 
        movb       $119, 29(%eax) 
        movw       $34575, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3763

jnae_instr__hla_3765:
        addl       $2, %ebx 

jb_instr__hla_3754:

jc_instr__hla_3755:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3620
        movb       $16, 8(%eax) 
        movb       $114, 29(%eax) 
        movw       $33295, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3763

je_instr__hla_3756:

jz_instr__hla_3762:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3620
        movb       $16, 8(%eax) 
        movb       $116, 29(%eax) 
        movw       $33807, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3763

jnle_instr__hla_3766:
        addl       $2, %ebx 

jg_instr__hla_3757:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3620
        movb       $16, 8(%eax) 
        movb       $127, 29(%eax) 
        movw       $36623, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3763

jnge_instr__hla_3767:
        addl       $2, %ebx 

jl_instr__hla_3758:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3620
        movb       $16, 8(%eax) 
        movb       $124, 29(%eax) 
        movw       $35855, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3763

jo_instr__hla_3759:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3620
        movb       $16, 8(%eax) 
        movb       $112, 29(%eax) 
        movw       $32783, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3763

jpe_instr__hla_3768:
        addl       $1, %ebx 

jp_instr__hla_3760:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3620
        movb       $16, 8(%eax) 
        movb       $122, 29(%eax) 
        movw       $35343, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3763

js_instr__hla_3761:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3620
        movb       $16, 8(%eax) 
        movb       $120, 29(%eax) 
        movw       $34831, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3763
        jmp        endif__hla_3752
false__hla_3752:
        cmpb       $32, %dh 
        jne        false__hla_3769
        cmpw       $28781, %ax 
        je         jmp_instr__hla_3770
        cmpw       $25953, %ax 
        je         jae_instr__hla_3771
        cmpw       $25954, %ax 
        je         jbe_instr__hla_3772
        cmpw       $25959, %ax 
        je         jge_instr__hla_3773
        cmpw       $25964, %ax 
        je         jle_instr__hla_3774
        cmpw       $24942, %ax 
        je         jna_instr__hla_3775
        cmpw       $25198, %ax 
        je         jnb_instr__hla_3776
        cmpw       $25454, %ax 
        je         jnc_instr__hla_3777
        cmpw       $25966, %ax 
        je         jne_instr__hla_3778
        cmpw       $26478, %ax 
        je         jng_instr__hla_3779
        cmpw       $27758, %ax 
        je         jnl_instr__hla_3780
        cmpw       $28526, %ax 
        je         jno_instr__hla_3781
        cmpw       $28782, %ax 
        je         jnp_instr__hla_3782
        cmpw       $29550, %ax 
        je         jns_instr__hla_3783
        cmpw       $31342, %ax 
        je         jnz_instr__hla_3784
        cmpw       $25968, %ax 
        je         jpe_instr__hla_3768
        cmpw       $28528, %ax 
        je         jpo_instr__hla_3785
        call       unknownStmt__hla_3465
        jmp        Done__hla_3763

jmp_instr__hla_3770:
        pushl      $32 
        call       initStmt__hla_3620
        movb       $18, 8(%eax) 
        movb       $235, 29(%eax) 
        movb       $233, 30(%eax) 
        movb       $1, 31(%eax) 
        addl       $3, %ebx 
        call       getDisp__hla_3642
        jmp        Done__hla_3763

jnc_instr__hla_3777:

jnb_instr__hla_3776:

jae_instr__hla_3771:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3620
        movb       $16, 8(%eax) 
        movb       $115, 29(%eax) 
        movw       $33551, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3763

jna_instr__hla_3775:

jbe_instr__hla_3772:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3620
        movb       $16, 8(%eax) 
        movb       $118, 29(%eax) 
        movw       $34319, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3763

jnl_instr__hla_3780:

jge_instr__hla_3773:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3620
        movb       $16, 8(%eax) 
        movb       $125, 29(%eax) 
        movw       $36111, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3763

jng_instr__hla_3779:

jle_instr__hla_3774:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3620
        movb       $16, 8(%eax) 
        movb       $126, 29(%eax) 
        movw       $36367, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3763

jne_instr__hla_3778:

jnz_instr__hla_3784:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3620
        movb       $16, 8(%eax) 
        movb       $117, 29(%eax) 
        movw       $34063, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3763

jno_instr__hla_3781:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3620
        movb       $16, 8(%eax) 
        movb       $113, 29(%eax) 
        movw       $33039, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3763

jnp_instr__hla_3782:

jpo_instr__hla_3785:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3620
        movb       $16, 8(%eax) 
        movb       $123, 29(%eax) 
        movw       $35599, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3763

jns_instr__hla_3783:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3620
        movb       $16, 8(%eax) 
        movb       $121, 29(%eax) 
        movw       $35087, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3763
        jmp        endif__hla_3752
false__hla_3769:
        cmpb       $32, %dl 
        jne        false__hla_3786
        cmpl       $543514990, %eax 
        je         jnae_instr__hla_3765
        cmpl       $543515246, %eax 
        je         jnbe_instr__hla_3764
        cmpl       $543516526, %eax 
        je         jnge_instr__hla_3767
        cmpl       $543517806, %eax 
        je         jnle_instr__hla_3766
        cmpl       $544897123, %eax 
        je         jcxz_instr__hla_3787
        call       unknownStmt__hla_3465
        jmp        Done__hla_3763

jcxz_instr__hla_3787:
        addl       $4, %ebx 
        pushl      $31 
        call       initStmt__hla_3620
        movb       $15, 8(%eax) 
        movw       $58215, 29(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3763
        jmp        endif__hla_3752
false__hla_3786:
        cmpl       $2054710117, %eax 
        jne        false__hla_3788
        cmpb       $32, 5(%ebx) 
        jne        false__hla_3788
        addl       $5, %ebx 
        pushl      $30 
        call       initStmt__hla_3620
        movb       $14, 8(%eax) 
        movb       $227, 29(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3763
        jmp        endif__hla_3752
false__hla_3788:
        call       unknownStmt__hla_3465
endif__hla_3752:
        jmp        endif__hla_3750
false__hla_3751:
        cmpb       $108, %al 
        jne        false__hla_3790
        lea        7(%ebx), %ecx 
        cmpl       end_source__hla_3414, %ecx 
        jnb        false__hla_3790
        cmpb       $111, 1(%ebx) 
        jne        false__hla_3790
        cmpb       $111, 2(%ebx) 
        jne        false__hla_3790
        cmpb       $112, 3(%ebx) 
        jne        false__hla_3790
        mov        4(%ebx), %al 
        cmpb       $32, %al 
        je         L3796__hla_
        cmpb       $101, %al 
        jne        L3799__hla_
        cmpb       $32, 5(%ebx) 
        je         L3796__hla_
L3799__hla_:
        cmpb       $122, %al 
        jne        L3800__hla_
        cmpb       $32, 5(%ebx) 
        je         L3796__hla_
L3800__hla_:
        mov        5(%ebx), %ah 
        cmpb       $110, %al 
        jne        false__hla_3790
        cmpb       $101, %ah 
        jne        L3803__hla_
        cmpb       $32, 6(%ebx) 
        je         L3802__hla_
L3803__hla_:
        cmpb       $122, %ah 
        jne        false__hla_3790
        cmpb       $32, 6(%ebx) 
        jne        false__hla_3790
L3802__hla_:
L3796__hla_:
        cmpb       $32, %al 
        jne        false__hla_3805
        addl       $4, %ebx 
        pushl      $30 
        call       initStmt__hla_3620
        movb       $14, 8(%eax) 
        movb       $226, 29(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3763
        jmp        endif__hla_3805
false__hla_3805:
        cmpb       $101, %al 
        je         L3807__hla_
        cmpb       $122, %al 
        jne        false__hla_3806
L3807__hla_:
        addl       $5, %ebx 
        pushl      $30 
        call       initStmt__hla_3620
        movb       $14, 8(%eax) 
        movb       $225, 29(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3763
        jmp        endif__hla_3805
false__hla_3806:
        cmpb       $110, %al 
        jne        false__hla_3808
        cmpb       $101, %ah 
        je         L3810__hla_
        cmpb       $122, %ah 
        jne        false__hla_3808
L3810__hla_:
        addl       $6, %ebx 
        pushl      $30 
        call       initStmt__hla_3620
        movb       $14, 8(%eax) 
        movb       $224, 29(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3763
        jmp        endif__hla_3805
false__hla_3808:
        call       skipToEoln__hla_3418
endif__hla_3805:
        jmp        endif__hla_3750
false__hla_3790:
        cmpb       $99, %al 
        jne        false__hla_3811
        addl       $5, %ebx 
        cmpl       end_source__hla_3414, %ebx 
        jnb        false__hla_3811
        cmpb       $97, -4(%ebx) 
        jne        false__hla_3811
        cmpb       $108, -3(%ebx) 
        jne        false__hla_3811
        cmpb       $108, -2(%ebx) 
        jne        false__hla_3811
        cmpb       $32, -1(%ebx) 
        jne        false__hla_3811
        pushl      $30 
        call       initStmt__hla_3620
        movb       $17, 8(%eax) 
        movb       $232, 29(%eax) 
        call       getDisp__hla_3642
        jmp        endif__hla_3750
false__hla_3811:
        call       unknownStmt__hla_3465
endif__hla_3750:

Done__hla_3763:
endif__hla_3664:
        jmp        forever__hla_3659
exitloop__hla_3658:

        call       emitDummy__hla_3650
xlexer__hla_:
        pushl      %edi 
        pushl      %ecx 
        mov        16(%ebp), %edi 
        mov        -5136(%ebp), %ecx 
        mov        %ecx, (%edi) 
        mov        12(%ebp), %edi 
        mov        -5140(%ebp), %ecx 
        mov        %ecx, (%edi) 
        mov        8(%ebp), %edi 
        mov        -5144(%ebp), %ecx 
        mov        %ecx, (%edi) 
        popl       %ecx 
        popl       %edi 
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $20
addCOFFsym__hla_3822:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        cld
        pushl      numCOFFsyms__hla_3359 
        imul       $18, numCOFFsyms__hla_3359, %ebx 
        movzbl     12(%ebp), %eax 
        addl       $1, %eax 
        imul       $18, %eax, %eax 
        addl       %ebx, %eax 
        cmpl       coffSymSize__hla_3360, %eax 
        jna        false__hla_3825
        shll       $1, coffSymSize__hla_3360 
        pushl      COFFsyms__hla_3358 
        pushl      coffSymSize__hla_3360 
        call       MEM_REALLOC1
        mov        %eax, COFFsyms__hla_3358 
false__hla_3825:
        addl       COFFsyms__hla_3358, %ebx 
        mov        32(%ebp), %esi 
        pushl      %esi 
        call       STR_LENGTH
        movl       %eax, %ecx 
        cmpl       $8, %eax 
        jnbe       false__hla_3826
        movl       $0, (%ebx) 
        movl       $0, 4(%ebx) 
        lea        (%ebx), %edi 
        cld
        rep movsb
        jmp        endif__hla_3826
false__hla_3826:
        mov        strTblOffset__hla_3368, %edx 
        lea        1(%edx,%ecx,1), %eax 
        mov        %eax, strTblOffset__hla_3368 
        cmpl       strTblSize__hla_3369, %eax 
        jna        false__hla_3827
        pushl      %eax 
        shll       $1, strTblSize__hla_3369 
        pushl      stringTable__hla_3367 
        pushl      strTblSize__hla_3369 
        call       MEM_REALLOC1
        mov        %eax, stringTable__hla_3367 
        popl       %eax 
false__hla_3827:
        movl       %edx, %edi 
        addl       stringTable__hla_3367, %edi 
        cld
        rep movsb
        movb       $0, (%edi) 
        movl       $0, (%ebx) 
        mov        %edx, 4(%ebx) 
endif__hla_3826:
        mov        28(%ebp), %eax 
        mov        %eax, 8(%ebx) 
        mov        24(%ebp), %ax 
        mov        %ax, 12(%ebx) 
        mov        20(%ebp), %ax 
        mov        %ax, 14(%ebx) 
        mov        16(%ebp), %al 
        mov        %al, 16(%ebx) 
        movzbl     12(%ebp), %eax 
        mov        %al, 17(%ebx) 
        testb      %al, %al 
        je         false__hla_3828
        mov        8(%ebp), %esi 
        imul       $18, numCOFFsyms__hla_3359, %edi 
        addl       $18, %edi 
        addl       COFFsyms__hla_3358, %edi 
        imul       $18, %eax, %ecx 
        cld
        rep movsb
false__hla_3828:
        movzbl     12(%ebp), %eax 
        addl       $1, %eax 
        addl       %eax, numCOFFsyms__hla_3359 
        popl       %eax 
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
xaddCOFFsym__hla_3822__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $28
addELFsym__hla_3834:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        cld
        imul       $16, numELFsyms__hla_3362, %ebx 
        lea        16(%ebx), %eax 
        cmpl       elfSymSize__hla_3363, %eax 
        jna        false__hla_3837
        shll       $1, elfSymSize__hla_3363 
        pushl      ELFsyms__hla_3361 
        pushl      elfSymSize__hla_3363 
        call       MEM_REALLOC1
        mov        %eax, ELFsyms__hla_3361 
false__hla_3837:
        addl       ELFsyms__hla_3361, %ebx 
        xorl       %edx, %edx 
        mov        28(%ebp), %esi 
        cmpl       $0, %esi 
        je         false__hla_3838
        pushl      %esi 
        call       STR_LENGTH
        movl       %eax, %ecx 
        mov        strTblOffset__hla_3368, %edx 
        lea        1(%edx,%ecx,1), %eax 
        mov        %eax, strTblOffset__hla_3368 
        cmpl       strTblSize__hla_3369, %eax 
        jna        false__hla_3839
        shll       $1, strTblSize__hla_3369 
        pushl      stringTable__hla_3367 
        pushl      strTblSize__hla_3369 
        call       MEM_REALLOC1
        mov        %eax, stringTable__hla_3367 
false__hla_3839:
        movl       %edx, %edi 
        addl       stringTable__hla_3367, %edi 
        cld
        rep movsb
        movb       $0, (%edi) 
false__hla_3838:
        mov        %edx, (%ebx) 
        mov        24(%ebp), %eax 
        mov        %eax, 4(%ebx) 
        mov        20(%ebp), %eax 
        mov        %eax, 8(%ebx) 
        mov        16(%ebp), %al 
        mov        %al, 12(%ebx) 
        mov        8(%ebp), %al 
        andb       $3, %al 
        mov        %al, 13(%ebx) 
        mov        12(%ebp), %ax 
        mov        %ax, 14(%ebx) 
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
xaddELFsym__hla_3834__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $24
addMachoSym__hla_3845:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %eax 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        imul       $12, numMachoSyms__hla_3366, %ebx 
        lea        12(%ebx), %eax 
        cmpl       MachoSymSize__hla_3365, %eax 
        jna        false__hla_3848
        shll       $1, MachoSymSize__hla_3365 
        pushl      MachoSyms__hla_3364 
        pushl      MachoSymSize__hla_3365 
        call       MEM_REALLOC1
        mov        %eax, MachoSyms__hla_3364 
false__hla_3848:
        addl       MachoSyms__hla_3364, %ebx 
        mov        20(%ebp), %esi 
        cmpl       $0, %esi 
        jne        _0f09_skipAssertion___hla_3853
        pushl      _0f0a_msg___hla_3851 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0f09_skipAssertion___hla_3853:
        pushl      %esi 
        call       STR_LENGTH
        movl       %eax, %ecx 
        mov        strTblOffset__hla_3368, %edx 
        lea        1(%edx,%ecx,1), %eax 
        mov        %eax, strTblOffset__hla_3368 
        cmpl       strTblSize__hla_3369, %eax 
        jna        false__hla_3854
        shll       $1, strTblSize__hla_3369 
        pushl      stringTable__hla_3367 
        pushl      strTblSize__hla_3369 
        call       MEM_REALLOC1
        mov        %eax, stringTable__hla_3367 
false__hla_3854:
        movl       %edx, %edi 
        addl       stringTable__hla_3367, %edi 
        cld
        rep movsb
        movb       $0, (%edi) 
        mov        %edx, (%ebx) 
        mov        16(%ebp), %eax 
        mov        %eax, 8(%ebx) 
        mov        12(%ebp), %al 
        mov        %al, 4(%ebx) 
        mov        8(%ebp), %al 
        mov        %al, 5(%ebx) 
        movw       $0, 6(%ebx) 
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
        popl       %eax 
xaddMachoSym__hla_3845__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $16
buildRaw__hla_3860:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %edi 
        pushl      %esi 
        mov        24(%ebp), %esi 
        cmpb       $0, 8(%ebp) 
        jne        false__hla_3863
        mov        20(%ebp), %eax 
        cmpl       $65535, %eax 
        jnae       false__hla_3864
        mov        %eax, (%esi) 
        addl       $10, %esi 
false__hla_3864:
false__hla_3863:
        mov        32(%ebp), %ebx 
        mov        16(%ebp), %edi 
        jmp        continue__hla_3865
while__hla_3865:
        movzbl     8(%ebx), %eax 
        cmpl       $21, %eax 
        jg         default__hla_3867
        jmp *      jmpTbl__hla_3867(,%eax,4) 
case__hla_3868:
        jmp        endswitch__hla_3867
case__hla_3869:
        mov        9(%ebx), %ecx 
        movl       %ecx, %edx 
        mov        13(%ebx), %eax 
        subl       $1, %eax 
        addl       %eax, %ecx 
        notl       %eax 
        andl       %eax, %ecx 
        subl       %edx, %ecx 
        jz         false__hla_3870
        cmpb       $1, 12(%ebp) 
        jne        false__hla_3871
        jmp        continue__hla_3872
while__hla_3872:
        mov        $2401421, %eax 
        stosl
        mov        $0, %ax 
        stosw
        stosb
        subl       $7, %ecx 
continue__hla_3872:
        cmpl       $7, %ecx 
        jae        while__hla_3872
exitloop__hla_3872:

        cmpl       $6, %ecx 
        jne        false__hla_3874
        mov        $39821, %eax 
        stosl
        mov        $0, %ax 
        stosw
false__hla_3874:
        cmpl       $5, %ecx 
        jne        false__hla_3875
        mov        $2385037, %eax 
        stosl
        mov        $144, %al 
        stosb
false__hla_3875:
        cmpl       $4, %ecx 
        jne        false__hla_3876
        mov        $2385037, %eax 
        stosl
false__hla_3876:
        cmpl       $3, %ecx 
        jne        false__hla_3877
        mov        $18829, %ax 
        stosw
        mov        $0, %al 
        stosb
false__hla_3877:
        cmpl       $2, %ecx 
        jne        false__hla_3878
        mov        $65419, %ax 
        stosw
false__hla_3878:
        cmpl       $1, %ecx 
        jne        false__hla_3879
        mov        $144, %al 
        stosb
false__hla_3879:
        jmp        endif__hla_3871
false__hla_3871:
        xorl       %eax, %eax 
        cld
        rep stosb
endif__hla_3871:
false__hla_3870:
        jmp        endswitch__hla_3867
case__hla_3880:
        cmpb       $3, 12(%ebp) 
        je         false__hla_3881
        pushl      $str__hla_3882 
        call       STDERR_PUTS
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3881:
        jmp        endswitch__hla_3867
case__hla_3883:
        pushl      %esi 
        mov        13(%ebx), %ecx 
        testl      %ecx, %ecx 
        je         false__hla_3884
        lea        17(%ebx), %esi 
        cld
        rep movsb
false__hla_3884:
        popl       %esi 
        jmp        endswitch__hla_3867
case__hla_3885:
        cmpb       $1, 12(%ebp) 
        je         false__hla_3886
        pushl      $str__hla_3887 
        call       STDERR_PUTS
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3886:
        jmp        endswitch__hla_3867
case__hla_3888:
        cmpb       $2, 12(%ebp) 
        je         false__hla_3889
        pushl      $str__hla_3890 
        call       STDERR_PUTS
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3889:
        jmp        endswitch__hla_3867
case__hla_3891:
        mov        17(%ebx), %ecx 
        mov        21(%ebx), %eax 
        cmpl       $2, 13(%ebx) 
        jb         byteDup__hla_3892
        ja         dwordDup__hla_3893
        cld
        rep stosw
        jmp        done__hla_3894

byteDup__hla_3892:
        cld
        rep stosb
        jmp        done__hla_3894

dwordDup__hla_3893:
        cld
        rep stosl

done__hla_3894:
        jmp        endswitch__hla_3867
case__hla_3895:
        mov        29(%ebx), %al 
        stosb
        mov        13(%ebx), %eax 
        stosb
        jmp        endswitch__hla_3867
case__hla_3896:
        mov        29(%ebx), %ax 
        stosw
        mov        13(%ebx), %eax 
        stosb
        jmp        endswitch__hla_3867
case__hla_3897:
        cmpb       $1, 32(%ebx) 
        jne        false__hla_3898
        mov        29(%ebx), %al 
        stosb
        mov        13(%ebx), %eax 
        addl       21(%ebx), %eax 
        stosb
        jmp        endif__hla_3898
false__hla_3898:
        mov        30(%ebx), %ax 
        stosw
        mov        13(%ebx), %eax 
        addl       21(%ebx), %eax 
        stosl
        cmpl       $0, 17(%ebx) 
        je         false__hla_3899
        mov        17(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        20(%eax), %dl 
        testb      $1, 21(%eax) 
        jnz        L3901__hla_
        cmpb       12(%ebp), %dl 
        je         false__hla_3900
L3901__hla_:
        mov        8(%ebp), %dl 
        testb      %dl, %dl 
        jne        false__hla_3902
        mov        8(%eax), %eax 
        mov        %eax, 4(%esi) 
        mov        9(%ebx), %eax 
        addl       $2, %eax 
        mov        %eax, (%esi) 
        movw       $20, 8(%esi) 
        addl       $10, %esi 
        mov        21(%ebx), %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3902
false__hla_3902:
        cmpb       $1, %dl 
        jnae       false__hla_3903
        cmpb       $2, %dl 
        jnbe       false__hla_3903
        mov        9(%ebx), %edx 
        addl       $2, %edx 
        mov        %edx, (%esi) 
        mov        8(%eax), %eax 
        shll       $8, %eax 
        orl        $2, %eax 
        mov        %eax, 4(%esi) 
        addl       $8, %esi 
        mov        21(%ebx), %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3902
false__hla_3903:
        cmpb       $3, %dl 
        jne        false__hla_3905
        mov        9(%ebx), %edx 
        addl       $2, %edx 
        mov        %edx, (%esi) 
        mov        8(%eax), %eax 
        orl        $218103808, %eax 
        mov        %eax, 4(%esi) 
        addl       $8, %esi 
        mov        9(%ebx), %eax 
        addl       $6, %eax 
        negl       %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3902
false__hla_3905:
        pushl      $str__hla_3906 
        call       STDERR_PUTS
endif__hla_3902:
false__hla_3900:
false__hla_3899:
endif__hla_3898:
        jmp        endswitch__hla_3867
case__hla_3907:
        cmpb       $1, 31(%ebx) 
        jne        false__hla_3908
        mov        29(%ebx), %al 
        stosb
        mov        13(%ebx), %eax 
        addl       21(%ebx), %eax 
        stosb
        jmp        endif__hla_3908
false__hla_3908:
        mov        30(%ebx), %al 
        stosb
        mov        13(%ebx), %eax 
        addl       21(%ebx), %eax 
        stosl
        cmpl       $0, 17(%ebx) 
        je         false__hla_3909
        mov        17(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        20(%eax), %dl 
        mov        21(%eax), %dh 
        andb       $3, %dh 
        testb      $1, %dh 
        jnz        L3911__hla_
        cmpb       12(%ebp), %dl 
        jne        L3911__hla_
        testb      %dh, %dh 
        je         false__hla_3910
        cmpb       $1, 8(%ebp) 
        jnae       false__hla_3910
        cmpb       $2, 8(%ebp) 
        jnbe       false__hla_3910
L3911__hla_:
        mov        8(%ebp), %dl 
        testb      %dl, %dl 
        jne        false__hla_3915
        mov        8(%eax), %eax 
        mov        %eax, 4(%esi) 
        mov        9(%ebx), %eax 
        addl       $1, %eax 
        mov        %eax, (%esi) 
        movw       $20, 8(%esi) 
        addl       $10, %esi 
        mov        21(%ebx), %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3915
false__hla_3915:
        cmpb       $1, %dl 
        jnae       false__hla_3916
        cmpb       $2, %dl 
        jnbe       false__hla_3916
        mov        9(%ebx), %edx 
        addl       $1, %edx 
        mov        %edx, (%esi) 
        mov        8(%eax), %edx 
        shll       $8, %edx 
        orl        $2, %edx 
        mov        %edx, 4(%esi) 
        addl       $8, %esi 
        testb      $1, 21(%eax) 
        jz         false__hla_3918
        movl       $-4, -4(%edi) 
false__hla_3918:
        jmp        endif__hla_3915
false__hla_3916:
        cmpb       $3, %dl 
        jne        false__hla_3919
        mov        9(%ebx), %edx 
        addl       $1, %edx 
        mov        %edx, (%esi) 
        mov        8(%eax), %eax 
        orl        $218103808, %eax 
        mov        %eax, 4(%esi) 
        addl       $8, %esi 
        mov        9(%ebx), %eax 
        addl       $5, %eax 
        negl       %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3915
false__hla_3919:
        pushl      $str__hla_3906 
        call       STDERR_PUTS
endif__hla_3915:
false__hla_3910:
false__hla_3909:
endif__hla_3908:
        jmp        endswitch__hla_3867
case__hla_3920:
        mov        29(%ebx), %al 
        stosb
        mov        13(%ebx), %eax 
        addl       21(%ebx), %eax 
        stosl
        cmpl       $0, 17(%ebx) 
        je         false__hla_3921
        mov        17(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        20(%eax), %dl 
        mov        21(%eax), %dh 
        andb       $3, %dh 
        testb      $1, %dh 
        jnz        L3923__hla_
        cmpb       12(%ebp), %dl 
        jne        L3923__hla_
        testb      %dh, %dh 
        je         false__hla_3922
        cmpb       $1, 8(%ebp) 
        jnae       false__hla_3922
        cmpb       $2, 8(%ebp) 
        jnbe       false__hla_3922
L3923__hla_:
        mov        8(%ebp), %dl 
        testb      %dl, %dl 
        jne        false__hla_3927
        mov        8(%eax), %eax 
        mov        %eax, 4(%esi) 
        mov        9(%ebx), %eax 
        addl       $1, %eax 
        mov        %eax, (%esi) 
        movw       $20, 8(%esi) 
        addl       $10, %esi 
        mov        21(%ebx), %eax 
        addl       13(%ebx), %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3927
false__hla_3927:
        cmpb       $1, %dl 
        jnae       false__hla_3928
        cmpb       $2, %dl 
        jnbe       false__hla_3928
        mov        9(%ebx), %edx 
        addl       $1, %edx 
        mov        %edx, (%esi) 
        mov        21(%eax), %dl 
        mov        8(%eax), %eax 
        shll       $8, %eax 
        orl        $2, %eax 
        mov        %eax, 4(%esi) 
        addl       $8, %esi 
        movl       $-4, -4(%edi) 
        jmp        endif__hla_3927
false__hla_3928:
        cmpb       $3, %dl 
        jne        false__hla_3930
        mov        9(%ebx), %edx 
        addl       $1, %edx 
        mov        %edx, (%esi) 
        mov        8(%eax), %eax 
        orl        $218103808, %eax 
        mov        %eax, 4(%esi) 
        addl       $8, %esi 
        mov        9(%ebx), %eax 
        addl       $5, %eax 
        negl       %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3927
false__hla_3930:
        pushl      $str__hla_3906 
        call       STDERR_PUTS
endif__hla_3927:
false__hla_3922:
false__hla_3921:
        jmp        endswitch__hla_3867
case__hla_3931:
        cmpl       $0, 13(%ebx) 
        je         false__hla_3932
        mov        8(%ebp), %dl 
        testb      %dl, %dl 
        jne        false__hla_3933
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        8(%eax), %eax 
        mov        %eax, 4(%esi) 
        mov        9(%ebx), %eax 
        mov        %eax, (%esi) 
        movw       $6, 8(%esi) 
        addl       $10, %esi 
        mov        17(%ebx), %eax 
        stosl
        jmp        endif__hla_3933
false__hla_3933:
        cmpb       $1, %dl 
        jnae       false__hla_3934
        cmpb       $2, %dl 
        jnbe       false__hla_3934
        mov        9(%ebx), %edx 
        mov        %edx, (%esi) 
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        8(%eax), %edx 
        shll       $8, %edx 
        orl        $1, %edx 
        mov        %edx, 4(%esi) 
        addl       $8, %esi 
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        17(%ebx), %eax 
        stosl
        jmp        endif__hla_3933
false__hla_3934:
        cmpb       $3, %dl 
        jne        false__hla_3936
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        9(%ebx), %edx 
        subl       28(%ebp), %edx 
        testb      $1, 21(%eax) 
        jnz        L3938__hla_
        cmpl       $0, 17(%ebx) 
        jne        false__hla_3937
L3938__hla_:
        mov        %edx, (%esi) 
        testb      $1, 21(%eax) 
        jz         false__hla_3939
        mov        8(%eax), %eax 
        orl        $201326592, %eax 
        mov        %eax, 4(%esi) 
        addl       $8, %esi 
        mov        17(%ebx), %eax 
        stosl
        jmp        endif__hla_3939
false__hla_3939:
        movzbl     20(%eax), %eax 
        cmpb       $1, %al 
        jne        false__hla_3940
        mov        $1, %al 
        jmp        endif__hla_3940
false__hla_3940:
        cmpb       $2, %al 
        jne        false__hla_3941
        mov        $2, %al 
        jmp        endif__hla_3940
false__hla_3941:
        cmpb       $3, %al 
        jne        false__hla_3942
        mov        $3, %al 
        jmp        endif__hla_3940
false__hla_3942:
        pushl      $str__hla_3943 
        call       STDOUT_PUTS
        pushl      %eax 
        call       STDOUT_PUTU8
        call       STDOUT_NEWLN
        mov        $8, %eax 
        jmp        Raise__hla_
endif__hla_3940:
        orl        $67108864, %eax 
        mov        %eax, 4(%esi) 
        addl       $8, %esi 
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        12(%eax), %eax 
        stosl
endif__hla_3939:
        jmp        endif__hla_3937
false__hla_3937:
        mov        %edx, (%esi) 
        orl        $-1610612736, (%esi) 
        mov        12(%eax), %eax 
        mov        %eax, 4(%esi) 
        addl       17(%ebx), %eax 
        stosl
        addl       $8, %esi 
endif__hla_3937:
        jmp        endif__hla_3933
false__hla_3936:
        pushl      $str__hla_3906 
        call       STDERR_PUTS
endif__hla_3933:
false__hla_3932:
        jmp        endswitch__hla_3867
case__hla_3944:
        mov        13(%ebx), %ecx 
        testl      %ecx, %ecx 
        je         false__hla_3945
        xorl       %eax, %eax 
        cld
        rep stosb
false__hla_3945:
        jmp        endswitch__hla_3867
default__hla_3867:
        pushl      $str__hla_3946 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTU8
        call       STDERR_NEWLN
endswitch__hla_3867:
        mov        4(%ebx), %ebx 
continue__hla_3865:
        cmpl       $0, %ebx 
        jne        while__hla_3865
exitloop__hla_3865:

        popl       %esi 
        popl       %edi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
xbuildRaw__hla_3860__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $28
sectionPass__hla_3957:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        mov        8(%ebp), %ecx 
        mov        16(%ebp), %ebx 
        jmp        continue__hla_3960
while__hla_3960:
        mov        %ecx, 9(%ebx) 
        movzbl     8(%ebx), %eax 
        cmpl       $21, %eax 
        jg         default__hla_3962
        jmp *      jmpTbl__hla_3962(,%eax,4) 
case__hla_3963:
        jmp        endswitch__hla_3962
case__hla_3964:
        movb       $1, currentSection 
        jmp        endswitch__hla_3962
case__hla_3965:
        movb       $2, currentSection 
        jmp        endswitch__hla_3962
case__hla_3966:
        movb       $3, currentSection 
        jmp        endswitch__hla_3962
case__hla_3967:
        mov        13(%ebx), %eax 
        subl       $1, %eax 
        addl       %eax, %ecx 
        notl       %eax 
        andl       %eax, %ecx 
        jmp        endswitch__hla_3962
case__hla_3968:
        addl       13(%ebx), %ecx 
        jmp        endswitch__hla_3962
case__hla_3969:
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        %ecx, 12(%eax) 
        mov        currentSection, %dl 
        mov        %dl, 20(%eax) 
        jmp        endswitch__hla_3962
case__hla_3970:
        addl       13(%ebx), %ecx 
        jmp        endswitch__hla_3962
case__hla_3971:
        mov        13(%ebx), %eax 
        imull      17(%ebx), %eax 
        addl       %eax, %ecx 
        jmp        endswitch__hla_3962
case__hla_3972:
        addl       $2, %ecx 
        mov        17(%ebx), %eax 
        cmpl       $0, %eax 
        je         false__hla_3973
        mov        4(%eax), %edx 
        cmpl       $0, %edx 
        je         false__hla_3974
        mov        21(%edx), %dl 
        testb      $1, %dl 
        jz         false__hla_3975
        pushl      $str__hla_3976 
        call       STDERR_PUTS
        pushl      8(%eax) 
        call       STDERR_PUTS
        pushl      $str__hla_3977 
        call       STDERR_PUTS
        call       printLineNumberChain
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_3975:
false__hla_3974:
false__hla_3973:
        jmp        endswitch__hla_3962
case__hla_3978:
        addl       $1, %ecx 
        mov        12(%ebp), %eax 
        addl       %eax, %ecx 
        mov        %al, 32(%ebx) 
        cmpb       $1, %al 
        jna        false__hla_3979
        addl       $1, %ecx 
false__hla_3979:
        jmp        endswitch__hla_3962
case__hla_3980:
        mov        12(%ebp), %eax 
        lea        1(%ecx,%eax,1), %ecx 
        mov        %al, 31(%ebx) 
        jmp        endswitch__hla_3962
case__hla_3981:
        addl       $3, %ecx 
        jmp        endswitch__hla_3962
case__hla_3982:
        addl       $5, %ecx 
        jmp        endswitch__hla_3962
case__hla_3983:
        addl       $4, %ecx 
        jmp        endswitch__hla_3962
default__hla_3962:
        pushl      $str__hla_3946 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTU8
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
endswitch__hla_3962:
        mov        4(%ebx), %ebx 
continue__hla_3960:
        cmpl       $0, %ebx 
        jne        while__hla_3960
exitloop__hla_3960:

        movl       %ecx, %eax 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
xsectionPass__hla_3957__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $12
firstPass__hla_3954:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $8, %esp 
        movb       $1, currentSection 
        movl       $0, codeStart__hla_3370 
        pushl      24(%ebp) 
        pushl      12(%ebp) 
        pushl      codeStart__hla_3370 
        call       sectionPass__hla_3957
        mov        %eax, codeEnd__hla_3371 
        cmpb       $3, 8(%ebp) 
        jne        false__hla_3989
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, dataStart__hla_3372 
        jmp        endif__hla_3989
false__hla_3989:
        movl       $0, dataStart__hla_3372 
endif__hla_3989:
        movb       $2, currentSection 
        pushl      20(%ebp) 
        pushl      12(%ebp) 
        pushl      dataStart__hla_3372 
        call       sectionPass__hla_3957
        mov        %eax, dataEnd__hla_3373 
        cmpb       $3, 8(%ebp) 
        jne        false__hla_3990
        addl       $15, %eax 
        andl       $-16, %eax 
        jmp        endif__hla_3990
false__hla_3990:
        xorl       %eax, %eax 
endif__hla_3990:
        mov        %eax, bssStart__hla_3374 
        movb       $3, currentSection 
        pushl      16(%ebp) 
        pushl      12(%ebp) 
        pushl      %eax 
        call       sectionPass__hla_3957
        mov        %eax, bssEnd__hla_3375 
xfirstPass__hla_3954__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $20
computeDisplacement__hla_3999:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        mov        12(%ebp), %ecx 
        mov        8(%ebp), %ebx 
        mov        17(%ebx), %eax 
        mov        4(%eax), %edx 
        testb      $9, 21(%edx) 
        jnz        false__hla_4002
        pushl      $str__hla_4003 
        call       STDERR_PUTS
        pushl      8(%eax) 
        call       STDERR_PUTS
        call       STDERR_NEWLN
        call       printLineNumberChain
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_4002:
        mov        20(%edx), %al 
        mov        21(%edx), %ah 
        andb       $3, %ah 
        testb      %al, %al 
        jne        false__hla_4004
        mov        $1, %eax 
        jmp        endif__hla_4004
false__hla_4004:
        cmpb       $1, %ah 
        jne        false__hla_4005
        mov        $4, %eax 
        jmp        endif__hla_4004
false__hla_4005:
        cmpb       currentSection, %al 
        je         false__hla_4006
        mov        $4, %eax 
        jmp        endif__hla_4004
false__hla_4006:
        mov        12(%edx), %eax 
        subl       %ecx, %eax 
        mov        %eax, 13(%ebx) 
        cmpl       $-128, %eax 
        jnge       false__hla_4007
        cmpl       $127, %eax 
        jnle       false__hla_4007
        mov        $1, %eax 
        jmp        endif__hla_4007
false__hla_4007:
        mov        $4, %eax 
endif__hla_4007:
endif__hla_4004:
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
xcomputeDisplacement__hla_3999__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $8
doPhase__hla_4014:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $4, %esp 
        mov        8(%ebp), %ecx 
        mov        20(%ebp), %ebx 
        jmp        continue__hla_4017
while__hla_4017:
        mov        9(%ebx), %eax 
        mov        %eax, -4(%ebp) 
        mov        %ecx, 9(%ebx) 
        movzbl     8(%ebx), %eax 
        cmpl       $21, %eax 
        jg         default__hla_4019
        jmp *      jmpTbl__hla_4019(,%eax,4) 
case__hla_4020:
        jmp        endswitch__hla_4019
case__hla_4021:
        movb       $1, currentSection 
        jmp        endswitch__hla_4019
case__hla_4022:
        movb       $2, currentSection 
        jmp        endswitch__hla_4019
case__hla_4023:
        movb       $3, currentSection 
        jmp        endswitch__hla_4019
case__hla_4024:
        mov        -4(%ebp), %eax 
        cmpl       9(%ebx), %eax 
        je         false__hla_4025
        mov        16(%ebp), %eax 
        movb       $1, (%eax) 
false__hla_4025:
        jmp        endswitch__hla_4019
case__hla_4026:
        mov        13(%ebx), %eax 
        subl       $1, %eax 
        addl       %eax, %ecx 
        notl       %eax 
        andl       %eax, %ecx 
        mov        4(%ebx), %eax 
        cmpl       9(%eax), %ecx 
        je         false__hla_4027
        mov        16(%ebp), %edx 
        movb       $1, (%edx) 
false__hla_4027:
        jmp        endswitch__hla_4019
case__hla_4028:
        addl       13(%ebx), %ecx 
        jmp        endswitch__hla_4019
case__hla_4029:
        addl       13(%ebx), %ecx 
        jmp        endswitch__hla_4019
case__hla_4030:
        mov        13(%ebx), %eax 
        imull      17(%ebx), %eax 
        addl       %eax, %ecx 
        jmp        endswitch__hla_4019
case__hla_4031:
        addl       $2, %ecx 
        mov        -4(%ebp), %eax 
        addl       $2, %eax 
        pushl      %eax 
        pushl      %ebx 
        call       computeDisplacement__hla_3999
        jmp        endswitch__hla_4019
case__hla_4032:
        mov        $2, %eax 
        mov        $1, %edx 
        cmpb       $4, 32(%ebx) 
        jne        false__hla_4033
        addl       $3, %edx 
        addl       $4, %eax 
false__hla_4033:
        addl       %eax, %ecx 
        addl       -4(%ebp), %eax 
        pushl      %eax 
        pushl      %ebx 
        call       computeDisplacement__hla_3999
        cmpb       %dl, %al 
        je         false__hla_4034
        cmpb       12(%ebp), %al 
        jne        false__hla_4034
        mov        %al, 32(%ebx) 
        mov        16(%ebp), %edx 
        movb       $1, (%edx) 
false__hla_4034:
        jmp        endswitch__hla_4019
case__hla_4036:
        addl       $1, %ecx 
        movzbl     31(%ebx), %edx 
        addl       %edx, %ecx 
        mov        -4(%ebp), %eax 
        addl       $1, %eax 
        addl       %edx, %eax 
        pushl      %eax 
        pushl      %ebx 
        call       computeDisplacement__hla_3999
        cmpb       %dl, %al 
        je         false__hla_4037
        cmpb       12(%ebp), %al 
        jne        false__hla_4037
        mov        12(%ebp), %al 
        mov        %al, 31(%ebx) 
        mov        16(%ebp), %edx 
        movb       $1, (%edx) 
false__hla_4037:
        jmp        endswitch__hla_4019
case__hla_4039:
        addl       $3, %ecx 
        mov        -4(%ebp), %eax 
        addl       $3, %eax 
        pushl      %eax 
        pushl      %ebx 
        call       computeDisplacement__hla_3999
        jmp        endswitch__hla_4019
case__hla_4040:
        addl       $5, %ecx 
        mov        -4(%ebp), %eax 
        addl       $5, %eax 
        pushl      %eax 
        pushl      %ebx 
        call       computeDisplacement__hla_3999
        jmp        endswitch__hla_4019
case__hla_4041:
        addl       $4, %ecx 
        jmp        endswitch__hla_4019
default__hla_4019:
        pushl      $str__hla_3946 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTU8
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
endswitch__hla_4019:
        mov        4(%ebx), %ebx 
continue__hla_4017:
        cmpl       $0, %ebx 
        jne        while__hla_4017
exitloop__hla_4017:

        mov        20(%ebp), %ebx 
        jmp        continue__hla_4042
while__hla_4042:
        cmpb       $3, 8(%ebx) 
        jne        false__hla_4044
        mov        9(%ebx), %edx 
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        cmpl       12(%eax), %edx 
        je         false__hla_4045
        mov        %edx, 12(%eax) 
        mov        16(%ebp), %edx 
        movb       $1, (%edx) 
false__hla_4045:
false__hla_4044:
        mov        4(%ebx), %ebx 
continue__hla_4042:
        cmpl       $0, %ebx 
        jne        while__hla_4042
exitloop__hla_4042:

xdoPhase__hla_4014__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $16
dispPhase__hla_3996:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $20, %esp 
        mov        %ebx, -4(%ebp) 
        mov        %ecx, -8(%ebp) 
        mov        %edx, -12(%ebp) 
        movl       $0, -16(%ebp) 
false__hla_4051:
repeat__hla_4051:
        movb       $0, -17(%ebp) 
        movl       $0, codeStart__hla_3370 
        pushl      24(%ebp) 
        pushl      %ebp 
        addl       $-17, (%esp) 
        pushl      12(%ebp) 
        pushl      codeStart__hla_3370 
        call       doPhase__hla_4014
        mov        %ecx, codeEnd__hla_3371 
        cmpb       $3, 8(%ebp) 
        jne        false__hla_4052
        addl       $15, %ecx 
        andl       $-16, %ecx 
        jmp        endif__hla_4052
false__hla_4052:
        xorl       %ecx, %ecx 
endif__hla_4052:
        mov        %ecx, dataStart__hla_3372 
        pushl      20(%ebp) 
        pushl      %ebp 
        addl       $-17, (%esp) 
        pushl      12(%ebp) 
        pushl      %ecx 
        call       doPhase__hla_4014
        mov        %ecx, dataEnd__hla_3373 
        cmpb       $3, 8(%ebp) 
        jne        false__hla_4053
        addl       $15, %ecx 
        andl       $-16, %ecx 
        mov        %ecx, bssStart__hla_3374 
        pushl      16(%ebp) 
        pushl      %ebp 
        addl       $-17, (%esp) 
        pushl      12(%ebp) 
        pushl      %ecx 
        call       doPhase__hla_4014
        mov        %ecx, bssEnd__hla_3375 
false__hla_4053:
        addl       $1, -16(%ebp) 
        cmpl       $16384, -16(%ebp) 
        ja         exitloop__hla_4051
continue__hla_4051:
        cmpb       $0, -17(%ebp) 
        jne        repeat__hla_4051
exitloop__hla_4051:

        mov        -16(%ebp), %eax 
        mov        -4(%ebp), %ebx 
        mov        -8(%ebp), %ecx 
        mov        -12(%ebp), %edx 
xdispPhase__hla_3996__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $20
cleanupPass__hla_4063:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %esi 
        mov        16(%ebp), %ebx 
        xorl       %esi, %esi 
        jmp        continue__hla_4066
while__hla_4066:
        mov        9(%ebx), %ecx 
        movzbl     8(%ebx), %eax 
        cmpl       $21, %eax 
        jg         default__hla_4068
        jmp *      jmpTbl__hla_4068(,%eax,4) 
case__hla_4069:
        jmp        endswitch__hla_4068
case__hla_4070:
        mov        13(%ebx), %edx 
        mov        4(%edx), %eax 
        movb       $1, 22(%eax) 
        movl       %ecx, %edx 
        subl       12(%eax), %edx 
        mov        %edx, 16(%eax) 
        jmp        endswitch__hla_4068
case__hla_4071:
        mov        13(%ebx), %edx 
        mov        4(%edx), %eax 
        mov        %ecx, 12(%eax) 
        testb      $9, 21(%eax) 
        jnz        false__hla_4072
        pushl      $str__hla_4073 
        call       STDERR_PUTS
        pushl      8(%edx) 
        call       STDERR_PUTS
        pushl      $str__hla_4074 
        call       STDERR_PUTS
        call       printLineNumberChain
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_4072:
        jmp        endswitch__hla_4068
case__hla_4075:
        mov        13(%ebx), %eax 
        cmpl       $-128, %eax 
        jl         L4077__hla_
        cmpl       $127, %eax 
        jng        false__hla_4076
L4077__hla_:
        pushl      $str__hla_4078 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTI32
        pushl      $str__hla_4079 
        call       STDERR_PUTS
        call       printLineNumberChain
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_4076:
        jmp        endswitch__hla_4068
case__hla_4080:
        mov        13(%ebx), %eax 
        cmpl       $-128, %eax 
        jl         L4082__hla_
        cmpl       $127, %eax 
        jng        false__hla_4081
L4082__hla_:
        pushl      $str__hla_4078 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTI32
        pushl      $str__hla_4079 
        call       STDERR_PUTS
        call       printLineNumberChain
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_4081:
        jmp        endswitch__hla_4068
case__hla_4083:
        cmpb       $4, 32(%ebx) 
        jne        false__hla_4084
        cmpl       $0, 17(%ebx) 
        je         false__hla_4085
        mov        17(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        20(%eax), %dl 
        mov        21(%eax), %dh 
        andb       $3, %dh 
        cmpb       $1, %dh 
        je         L4087__hla_
        cmpb       12(%ebp), %dl 
        je         false__hla_4086
L4087__hla_:
        addl       $1, %esi 
false__hla_4086:
false__hla_4085:
false__hla_4084:
        jmp        endswitch__hla_4068
case__hla_4088:
        cmpb       $4, 31(%ebx) 
        jne        false__hla_4089
        cmpl       $0, 17(%ebx) 
        je         false__hla_4090
        mov        17(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        20(%eax), %dl 
        mov        21(%eax), %dh 
        andb       $3, %dh 
        cmpb       $1, %dh 
        je         L4092__hla_
        cmpb       12(%ebp), %dl 
        jne        L4092__hla_
        testb      %dh, %dh 
        je         false__hla_4091
        cmpb       $1, 8(%ebp) 
        jnae       false__hla_4091
        cmpb       $2, 8(%ebp) 
        jnbe       false__hla_4091
L4092__hla_:
        addl       $1, %esi 
false__hla_4091:
false__hla_4090:
false__hla_4089:
        jmp        endswitch__hla_4068
case__hla_4096:
        cmpl       $0, 17(%ebx) 
        je         false__hla_4097
        mov        17(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        20(%eax), %dl 
        mov        21(%eax), %dh 
        andb       $3, %dh 
        testb      $1, %dh 
        jnz        L4099__hla_
        cmpb       12(%ebp), %dl 
        jne        L4099__hla_
        testb      %dh, %dh 
        je         false__hla_4098
        cmpb       $1, 8(%ebp) 
        jnae       false__hla_4098
        cmpb       $2, 8(%ebp) 
        jnbe       false__hla_4098
L4099__hla_:
        addl       $1, %esi 
false__hla_4098:
false__hla_4097:
        jmp        endswitch__hla_4068
case__hla_4103:
        addl       $1, %esi 
        jmp        endswitch__hla_4068
default__hla_4068:
        pushl      $str__hla_3946 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTU8
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
endswitch__hla_4068:
        mov        4(%ebx), %ebx 
continue__hla_4066:
        cmpl       $0, %ebx 
        jne        while__hla_4066
exitloop__hla_4066:

        movl       %ecx, %eax 
        movl       %esi, %edx 
        popl       %esi 
        popl       %ecx 
        popl       %ebx 
xcleanupPass__hla_4063__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $12
finalPass__hla_4060:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $8, %esp 
        pushl      %eax 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      20(%ebp) 
        pushl      $1 
        pushl      8(%ebp) 
        call       cleanupPass__hla_4063
        mov        %eax, codeEnd__hla_3371 
        mov        %edx, numCodeRelocs 
        pushl      16(%ebp) 
        pushl      $2 
        pushl      8(%ebp) 
        call       cleanupPass__hla_4063
        mov        %eax, dataEnd__hla_3373 
        mov        %edx, numDataRelocs 
        pushl      12(%ebp) 
        pushl      $3 
        pushl      8(%ebp) 
        call       cleanupPass__hla_4063
        mov        %eax, bssEnd__hla_3375 
        testl      %edx, %edx 
        je         false__hla_4109
        pushl      $str__hla_4110 
        call       STDERR_PUTS
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_4109:
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4111 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        mov        4(%eax), %ebx 
        cmpl       $0, %ebx 
        jne        _1010_skipAssertion___hla_4116
        pushl      _1011_msg___hla_4114 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_1010_skipAssertion___hla_4116:
        mov        21(%ebx), %cl 
        andb       $13, %cl 
        cmpb       $4, %cl 
        jne        false__hla_4117
        pushl      $str__hla_4118 
        call       STDERR_PUTS
        pushl      8(%eax) 
        call       STDERR_PUTS
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_4117:
continue__hla_4111:
        popl       %ebp 
        ret        $4
exitfor__hla_4111:

        popl       %edx 
        popl       %ecx 
        popl       %ebx 
        popl       %eax 
xfinalPass__hla_4060__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $16
optimizeDisps:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $12, %esp 
        cmpb       $0, verboseDebug__hla_3376 
        je         false__hla_4124
        pushl      $str__hla_4125 
        call       STDOUT_PUTS
false__hla_4124:
        pushl      24(%ebp) 
        pushl      20(%ebp) 
        pushl      16(%ebp) 
        pushl      $1 
        pushl      8(%ebp) 
        call       firstPass__hla_3954
        pushl      24(%ebp) 
        pushl      20(%ebp) 
        pushl      16(%ebp) 
        pushl      $4 
        pushl      8(%ebp) 
        call       dispPhase__hla_3996
        mov        %eax, -4(%ebp) 
        cmpl       $16384, %eax 
        jna        false__hla_4126
        pushl      $str__hla_4127 
        call       STDOUT_PUTS
        pushl      24(%ebp) 
        pushl      20(%ebp) 
        pushl      16(%ebp) 
        pushl      $4 
        pushl      8(%ebp) 
        call       firstPass__hla_3954
        mov        %eax, -8(%ebp) 
        mov        %edx, -12(%ebp) 
        pushl      24(%ebp) 
        pushl      20(%ebp) 
        pushl      16(%ebp) 
        pushl      $1 
        pushl      8(%ebp) 
        call       dispPhase__hla_3996
        mov        %eax, -4(%ebp) 
        pushl      24(%ebp) 
        pushl      20(%ebp) 
        pushl      16(%ebp) 
        pushl      8(%ebp) 
        call       finalPass__hla_4060
        cmpb       $0, 12(%ebp) 
        je         false__hla_4128
        pushl      $str__hla_4129 
        call       STDOUT_PUTS
        pushl      -4(%ebp) 
        call       STDOUT_PUTU32
        pushl      $str__hla_4130 
        call       STDOUT_PUTS
false__hla_4128:
        jmp        endif__hla_4126
false__hla_4126:
        pushl      24(%ebp) 
        pushl      20(%ebp) 
        pushl      16(%ebp) 
        pushl      8(%ebp) 
        call       finalPass__hla_4060
        cmpb       $0, 12(%ebp) 
        je         false__hla_4131
        pushl      $str__hla_4129 
        call       STDOUT_PUTS
        pushl      -4(%ebp) 
        call       STDOUT_PUTU32
        pushl      $str__hla_4132 
        call       STDOUT_PUTS
false__hla_4131:
endif__hla_4126:
        mov        codeEnd__hla_3371, %eax 
        subl       codeStart__hla_3370, %eax 
        mov        %eax, codeSize 
        mov        dataEnd__hla_3373, %eax 
        subl       dataStart__hla_3372, %eax 
        mov        %eax, dataSize 
        mov        bssEnd__hla_3375, %eax 
        subl       bssStart__hla_3374, %eax 
        mov        %eax, bssSize 
xoptimizeDisps__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $20
getSymbol__hla_4144:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %eax 
        pushl      %ebx 
        imul       $18, 12(%ebp), %ebx 
        addl       COFFsyms__hla_3358, %ebx 
        mov        (%ebx), %eax 
        testl      %eax, %eax 
        je         false__hla_4147
        pushl      8(%ebx) 
        movl       $0, 8(%ebx) 
        lea        (%ebx), %eax 
        pushl      %eax 
        pushl      8(%ebp) 
        call       STR_CPYZ
        popl       8(%ebx) 
        jmp        endif__hla_4147
false__hla_4147:
        mov        4(%ebx), %eax 
        addl       stringTable__hla_3367, %eax 
        pushl      %eax 
        pushl      8(%ebp) 
        call       STR_CPYZ
endif__hla_4147:
        popl       %ebx 
        popl       %eax 
xgetSymbol__hla_4144__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $8
dumpRelocs__hla_4153:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $1028, %esp 
        pushl      %eax 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %ebp 
        addl       $-1028, (%esp) 
        pushl      $1024 
        call       STR_INIT
        mov        %eax, -4(%ebp) 
        call       STDOUT_NEWLN
        pushl      16(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4156 
        call       STDOUT_PUTS
        mov        12(%ebp), %ebx 
        mov        $0, %ecx 

        jmp        StartFor__hla_4157
for__hla_4157:
        pushl      4(%ebx) 
        pushl      -4(%ebp) 
        call       getSymbol__hla_4144
        pushl      %ecx 
        call       STDOUT_PUTU32
        pushl      $str__hla_4158 
        call       STDOUT_PUTS
        pushl      (%ebx) 
        call       STDOUT_PUTD
        pushl      $str__hla_4159 
        call       STDOUT_PUTS
        pushl      -4(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4160 
        call       STDOUT_PUTS
        movzwl     8(%ebx), %eax 
        cmpl       $20, %eax 
        jg         default__hla_4161
        jmp *      jmpTbl__hla_4161(,%eax,4) 
case__hla_4162:
        pushl      $str__hla_4163 
        call       STDOUT_PUTS
        jmp        endswitch__hla_4161
case__hla_4164:
        pushl      $str__hla_4165 
        call       STDOUT_PUTS
        jmp        endswitch__hla_4161
case__hla_4166:
        pushl      $str__hla_4167 
        call       STDOUT_PUTS
        jmp        endswitch__hla_4161
case__hla_4168:
        pushl      $str__hla_4169 
        call       STDOUT_PUTS
        jmp        endswitch__hla_4161
default__hla_4161:
        pushl      $str__hla_4170 
        call       STDOUT_PUTS
        pushl      %eax 
        call       STDOUT_PUTD
endswitch__hla_4161:
        call       STDOUT_NEWLN
        addl       $10, %ebx 
continue__hla_4157:
        incl       %ecx 

StartFor__hla_4157:
        cmpl       8(%ebp), %ecx 
        jb         for__hla_4157
exitloop__hla_4157:

        popl       %ecx 
        popl       %ebx 
        popl       %eax 
xdumpRelocs__hla_4153__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $12
generateCOFF__hla_4138:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $192, %esp 
        pushl      %eax 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        cmpb       $0, verboseDebug__hla_3376 
        je         false__hla_4176
        pushl      $str__hla_4177 
        call       STDOUT_PUTS
        pushl      24(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4178 
        call       STDOUT_PUTS
        pushl      20(%ebp) 
        call       STDOUT_PUTS
        call       STDOUT_NEWLN
false__hla_4176:
        movl       $65536, strTblSize__hla_3369 
        pushl      $65536 
        call       MEM_ALLOC1
        mov        %eax, stringTable__hla_3367 
        movl       $4, strTblOffset__hla_3368 
        pushl      $73728 
        call       MEM_ALLOC1
        mov        %eax, COFFsyms__hla_3358 
        movl       %eax, %ebx 
        movl       $73728, coffSymSize__hla_3360 
        movl       $0, numCOFFsyms__hla_3359 
        movb       $46, (%ebx) 
        movb       $102, 1(%ebx) 
        movb       $105, 2(%ebx) 
        movb       $108, 3(%ebx) 
        movb       $101, 4(%ebx) 
        movb       $0, 5(%ebx) 
        movb       $0, 6(%ebx) 
        movb       $0, 7(%ebx) 
        movl       $0, 8(%ebx) 
        movw       $2, 12(%ebx) 
        movw       $0, 14(%ebx) 
        movb       $103, 16(%ebx) 
        pushl      24(%ebp) 
        call       STR_LENGTH
        addl       $18, %eax 
        xorl       %edx, %edx 
        divl       divisor__hla_4179 
        mov        %al, 17(%ebx) 
        addl       $1, %eax 
        mov        %eax, numCOFFsyms__hla_3359 
        lea        18(%ebx), %eax 
        pushl      24(%ebp) 
        pushl      %eax 
        call       ZSTR_CPY
        mov        numCodeRelocs, %eax 
        cmpl       $65535, %eax 
        jnae       false__hla_4180
        mov        $65535, %ax 
        addl       $1, numCodeRelocs 
false__hla_4180:
        mov        %ax, CodeAuxSection__hla_4139+4 
        mov        codeSize, %eax 
        mov        %eax, CodeAuxSection__hla_4139 
        pushl      $str__hla_4181 
        pushl      $0 
        pushl      $1 
        pushl      $0 
        pushl      $3 
        pushl      $1 
        pushl      $CodeAuxSection__hla_4139 
        call       addCOFFsym__hla_3822
        addl       COFFsyms__hla_3358, %eax 
        mov        %eax, -172(%ebp) 
        mov        numDataRelocs, %eax 
        cmpl       $65535, %eax 
        jnae       false__hla_4182
        mov        $65535, %ax 
        addl       $1, numDataRelocs 
false__hla_4182:
        mov        %ax, DataAuxSection__hla_4140+4 
        mov        dataSize, %eax 
        mov        %eax, DataAuxSection__hla_4140 
        pushl      $str__hla_4183 
        pushl      $0 
        pushl      $2 
        pushl      $0 
        pushl      $3 
        pushl      $1 
        pushl      $DataAuxSection__hla_4140 
        call       addCOFFsym__hla_3822
        addl       COFFsyms__hla_3358, %eax 
        mov        %eax, -176(%ebp) 
        mov        bssSize, %eax 
        mov        %eax, BssAuxSection__hla_4141 
        pushl      $str__hla_4184 
        pushl      $0 
        pushl      $3 
        pushl      $0 
        pushl      $3 
        pushl      $1 
        pushl      $BssAuxSection__hla_4141 
        call       addCOFFsym__hla_3822
        addl       COFFsyms__hla_3358, %eax 
        mov        %eax, -180(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4185 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        mov        4(%edx), %ebx 
        movzbw     20(%ebx), %cx 
        mov        12(%ebx), %edi 
        testb      $1, 21(%ebx) 
        jz         false__hla_4186
        mov        $2, %al 
        mov        $0, %cx 
        xorl       %edi, %edi 
        jmp        endif__hla_4186
false__hla_4186:
        testb      $2, 21(%ebx) 
        jz         false__hla_4187
        mov        $2, %al 
        jmp        endif__hla_4187
false__hla_4187:
        mov        $3, %al 
endif__hla_4187:
endif__hla_4186:
        pushl      8(%edx) 
        pushl      12(%ebx) 
        pushl      %ecx 
        pushl      $0 
        pushl      %eax 
        pushl      $0 
        pushl      $0 
        call       addCOFFsym__hla_3822
        mov        %eax, 8(%ebx) 
continue__hla_4185:
        popl       %ebp 
        ret        $4
exitfor__hla_4185:

        movw       $332, -32(%ebp) 
        movw       $3, -30(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        call       TIME_UTCDATETIME
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        call       TIME_TOUNIXTIME
        mov        %eax, -28(%ebp) 
        movl       $0, -24(%ebp) 
        movl       $0, -20(%ebp) 
        movw       $0, -16(%ebp) 
        movw       $256, -14(%ebp) 
        movb       $46, -72(%ebp) 
        movb       $116, -71(%ebp) 
        movb       $101, -70(%ebp) 
        movb       $120, -69(%ebp) 
        movb       $116, -68(%ebp) 
        movb       $0, -67(%ebp) 
        movb       $0, -66(%ebp) 
        movb       $0, -65(%ebp) 
        mov        codeSize, %eax 
        mov        %eax, -64(%ebp) 
        mov        %eax, -56(%ebp) 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -164(%ebp) 
        mov        numCodeRelocs, %edx 
        cmpl       $65535, %edx 
        jnb        false__hla_4188
        mov        %dx, -40(%ebp) 
        movzwl     %dx, %eax 
        imul       $10, %eax, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -156(%ebp) 
        movl       $1615855648, -36(%ebp) 
        jmp        endif__hla_4188
false__hla_4188:
        movw       $65535, -40(%ebp) 
        imul       $10, %edx, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -156(%ebp) 
        mov        %edx, (%eax) 
        movl       $0, 4(%eax) 
        movw       $0, 8(%eax) 
        movl       $1632632864, -36(%ebp) 
endif__hla_4188:
        movl       $0, -60(%ebp) 
        movl       $0, -52(%ebp) 
        movl       $0, -48(%ebp) 
        movl       $0, -44(%ebp) 
        movw       $0, -38(%ebp) 
        pushl      16(%ebp) 
        pushl      codeStart__hla_3370 
        pushl      -156(%ebp) 
        pushl      numCodeRelocs 
        pushl      -164(%ebp) 
        pushl      $1 
        pushl      $0 
        call       buildRaw__hla_3860
        movb       $46, -112(%ebp) 
        movb       $100, -111(%ebp) 
        movb       $97, -110(%ebp) 
        movb       $116, -109(%ebp) 
        movb       $97, -108(%ebp) 
        movb       $0, -107(%ebp) 
        movb       $0, -106(%ebp) 
        movb       $0, -105(%ebp) 
        mov        dataSize, %eax 
        mov        %eax, -104(%ebp) 
        mov        %eax, -96(%ebp) 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -168(%ebp) 
        mov        numDataRelocs, %edx 
        cmpl       $65535, %edx 
        jnb        false__hla_4189
        mov        %dx, -80(%ebp) 
        movzwl     %dx, %eax 
        imul       $10, %eax, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -160(%ebp) 
        movl       $-1068498880, -76(%ebp) 
        jmp        endif__hla_4189
false__hla_4189:
        movw       $65535, -80(%ebp) 
        imul       $10, %edx, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -160(%ebp) 
        mov        %edx, (%eax) 
        movl       $0, 4(%eax) 
        movw       $0, 8(%eax) 
        movl       $-1051721664, -76(%ebp) 
endif__hla_4189:
        movl       $0, -100(%ebp) 
        movl       $0, -92(%ebp) 
        movl       $0, -88(%ebp) 
        movl       $0, -84(%ebp) 
        movw       $0, -78(%ebp) 
        pushl      12(%ebp) 
        pushl      dataStart__hla_3372 
        pushl      -160(%ebp) 
        pushl      numDataRelocs 
        pushl      -168(%ebp) 
        pushl      $2 
        pushl      $0 
        call       buildRaw__hla_3860
        movb       $46, -152(%ebp) 
        movb       $98, -151(%ebp) 
        movb       $115, -150(%ebp) 
        movb       $115, -149(%ebp) 
        movl       $0, -148(%ebp) 
        mov        bssSize, %eax 
        mov        %eax, -136(%ebp) 
        movl       $0, -144(%ebp) 
        movw       $0, -120(%ebp) 
        movl       $0, -140(%ebp) 
        movl       $0, -132(%ebp) 
        movl       $0, -128(%ebp) 
        movl       $0, -124(%ebp) 
        movw       $0, -118(%ebp) 
        movl       $-1068498816, -116(%ebp) 
        mov        $140, %ecx 
        mov        %ecx, -52(%ebp) 
        addl       codeSize, %ecx 
        addl       $3, %ecx 
        andl       $-4, %ecx 
        mov        %ecx, -48(%ebp) 
        imul       $10, numCodeRelocs, %eax 
        addl       %eax, %ecx 
        addl       $3, %ecx 
        andl       $-4, %ecx 
        mov        %ecx, -92(%ebp) 
        addl       dataSize, %ecx 
        addl       $3, %ecx 
        andl       $-4, %ecx 
        mov        %ecx, -88(%ebp) 
        imul       $10, numDataRelocs, %eax 
        addl       %eax, %ecx 
        mov        %ecx, -24(%ebp) 
        mov        numCOFFsyms__hla_3359, %eax 
        mov        %eax, -20(%ebp) 
        imul       $18, %eax, %eax 
        addl       %eax, %ecx 
        addl       strTblOffset__hla_3368, %ecx 
        mov        %ecx, -188(%ebp) 
        pushl      %ecx 
        call       MEM_ZALLOC
        mov        %eax, -184(%ebp) 
        mov        -184(%ebp), %edi 
        lea        -32(%ebp), %esi 
        mov        $20, %ecx 
        cld
        rep movsb
        lea        -72(%ebp), %esi 
        mov        $40, %ecx 
        rep movsb
        lea        -112(%ebp), %esi 
        mov        $40, %ecx 
        rep movsb
        lea        -152(%ebp), %esi 
        mov        $40, %ecx 
        rep movsb
        mov        -164(%ebp), %esi 
        mov        codeSize, %ecx 
        rep movsb
        addl       $3, %edi 
        andl       $-4, %edi 
        mov        -156(%ebp), %esi 
        imul       $10, numCodeRelocs, %ecx 
        rep movsb
        addl       $3, %edi 
        andl       $-4, %edi 
        mov        -168(%ebp), %esi 
        mov        dataSize, %ecx 
        rep movsb
        addl       $3, %edi 
        andl       $-4, %edi 
        mov        -160(%ebp), %esi 
        imul       $10, numDataRelocs, %ecx 
        rep movsb
        mov        COFFsyms__hla_3358, %esi 
        imul       $18, numCOFFsyms__hla_3359, %ecx 
        rep movsb
        mov        stringTable__hla_3367, %esi 
        mov        strTblOffset__hla_3368, %eax 
        stosl
        addl       $4, %esi 
        lea        -4(%eax), %ecx 
        rep movsb
        pushl      20(%ebp) 
        call       FILEIO_OPENNEW
        mov        %eax, -192(%ebp) 
        pushl      -192(%ebp) 
        pushl      -184(%ebp) 
        pushl      -188(%ebp) 
        call       FILEIO_WRITE
        pushl      -192(%ebp) 
        call       FILEIO_CLOSE
        cmpb       $0, verboseDebug__hla_3376 
        je         false__hla_4190
        pushl      $str__hla_4191 
        call       STDOUT_PUTS
        pushl      numCOFFsyms__hla_3359 
        call       STDOUT_PUTU32
        pushl      $str__hla_4192 
        call       STDOUT_PUTS
        mov        COFFsyms__hla_3358, %ebx 
        xorl       %ecx, %ecx 
        jmp        continue__hla_4193
while__hla_4193:
        pushl      %ecx 
        call       STDOUT_PUTU32
        pushl      $str__hla_4158 
        call       STDOUT_PUTS
        mov        (%ebx), %eax 
        testl      %eax, %eax 
        jne        false__hla_4195
        mov        4(%ebx), %eax 
        addl       stringTable__hla_3367, %eax 
        pushl      %eax 
        call       STDOUT_PUTZS
        jmp        endif__hla_4195
false__hla_4195:
        pushl      8(%ebx) 
        movl       $0, 8(%ebx) 
        pushl      %ebx 
        call       STDOUT_PUTZS
        popl       8(%ebx) 
endif__hla_4195:
        pushl      $str__hla_4196 
        call       STDOUT_PUTS
        cmpb       $103, 16(%ebx) 
        jne        false__hla_4197
        lea        18(%ebx), %eax 
        pushl      %eax 
        call       STDOUT_PUTZS
        jmp        endif__hla_4197
false__hla_4197:
        cmpb       $3, 16(%ebx) 
        jne        false__hla_4198
        pushl      $str__hla_4199 
        call       STDOUT_PUTS
        jmp        endif__hla_4197
false__hla_4198:
        cmpb       $2, 16(%ebx) 
        jne        false__hla_4200
        cmpw       $0, 12(%ebx) 
        jne        false__hla_4201
        pushl      $str__hla_4202 
        call       STDOUT_PUTS
        jmp        endif__hla_4201
false__hla_4201:
        pushl      $str__hla_4203 
        call       STDOUT_PUTS
endif__hla_4201:
        jmp        endif__hla_4197
false__hla_4200:
        pushl      $str__hla_4204 
        call       STDOUT_PUTS
endif__hla_4197:
        call       STDOUT_NEWLN
        movzbl     17(%ebx), %eax 
        addl       $1, %eax 
        addl       %eax, %ecx 
        imul       $18, %eax, %eax 
        addl       %eax, %ebx 
continue__hla_4193:
        cmpl       numCOFFsyms__hla_3359, %ecx 
        jb         while__hla_4193
exitloop__hla_4193:

        pushl      $str__hla_4205 
        pushl      -156(%ebp) 
        pushl      numCodeRelocs 
        call       dumpRelocs__hla_4153
        pushl      $str__hla_4206 
        pushl      -160(%ebp) 
        pushl      numDataRelocs 
        call       dumpRelocs__hla_4153
false__hla_4190:
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
        popl       %eax 
xgenerateCOFF__hla_4138__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $20
generateELF__hla_4212:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $148, %esp 
        pushl      %eax 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        cmpb       $0, verboseDebug__hla_3376 
        je         false__hla_4224
        pushl      $str__hla_4225 
        call       STDOUT_PUTS
        pushl      28(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4178 
        call       STDOUT_PUTS
        pushl      24(%ebp) 
        call       STDOUT_PUTS
        call       STDOUT_NEWLN
false__hla_4224:
        pushl      $64 
        call       MEM_ZALLOC
        mov        %eax, -8(%ebp) 
        movl       $4, -140(%ebp) 
        movl       $5, -144(%ebp) 
        movl       $6, -148(%ebp) 
        lea        1(%eax), %edi 
        movl       $1, shstrtabSection__hla_4214 
        pushl      $str__hla_4226 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        movl       $11, symtabSection__hla_4215 
        pushl      $str__hla_4227 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        movl       $19, strtabSection__hla_4216 
        pushl      $str__hla_4228 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        mov        $27, %ebx 
        mov        %ebx, textSection__hla_4217 
        addl       $6, %ebx 
        pushl      $str__hla_4181 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        mov        %ebx, dataSection__hla_4218 
        addl       $6, %ebx 
        pushl      $str__hla_4183 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        mov        %ebx, bssSection__hla_4219 
        addl       $5, %ebx 
        pushl      $str__hla_4184 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        mov        %ebx, relTextSection__hla_4220 
        addl       $10, %ebx 
        pushl      $str__hla_4229 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        mov        %ebx, relDataSection__hla_4221 
        addl       $10, %ebx 
        pushl      $str__hla_4230 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        mov        %ebx, -104(%ebp) 
        movl       $7, -4(%ebp) 
        cmpl       $0, numCodeRelocs 
        je         false__hla_4231
        addl       $1, -4(%ebp) 
false__hla_4231:
        cmpl       $0, numDataRelocs 
        je         false__hla_4232
        addl       $1, -4(%ebp) 
false__hla_4232:
        imul       $40, -4(%ebp), %eax 
        mov        %eax, -96(%ebp) 
        movl       $262144, strTblSize__hla_3369 
        pushl      $262144 
        call       MEM_ZALLOC
        mov        %eax, stringTable__hla_3367 
        movl       $1, strTblOffset__hla_3368 
        pushl      $1048576 
        call       MEM_ZALLOC
        mov        %eax, ELFsyms__hla_3361 
        movl       %eax, %ebx 
        movl       $1048576, elfSymSize__hla_3363 
        movl       $1, numELFsyms__hla_3362 
        pushl      $0 
        pushl      $0 
        pushl      $0 
        pushl      $3 
        pushw      $0 
        pushw      -140(%ebp) 
        pushl      $0 
        call       addELFsym__hla_3834
        addl       $1, numELFsyms__hla_3362 
        pushl      $0 
        pushl      $0 
        pushl      $0 
        pushl      $3 
        pushw      $0 
        pushw      -144(%ebp) 
        pushl      $0 
        call       addELFsym__hla_3834
        addl       $1, numELFsyms__hla_3362 
        pushl      $0 
        pushl      $0 
        pushl      $0 
        pushl      $3 
        pushw      $0 
        pushw      -148(%ebp) 
        pushl      $0 
        call       addELFsym__hla_3834
        addl       $1, numELFsyms__hla_3362 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4233 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        mov        4(%eax), %ebx 
        movzbl     20(%ebx), %ecx 
        cmpl       $1, %ecx 
        jne        false__hla_4234
        mov        -140(%ebp), %ecx 
        jmp        endif__hla_4234
false__hla_4234:
        cmpl       $2, %ecx 
        jne        false__hla_4235
        mov        -144(%ebp), %ecx 
        jmp        endif__hla_4234
false__hla_4235:
        cmpl       $3, %ecx 
        jne        false__hla_4236
        mov        -148(%ebp), %ecx 
        jmp        endif__hla_4234
false__hla_4236:
        xorl       %ecx, %ecx 
endif__hla_4234:
        mov        12(%ebx), %edi 
        testb      $1, 21(%ebx) 
        jnz        false__hla_4237
        testb      $2, 21(%ebx) 
        jnz        false__hla_4238
        cmpb       $0, 22(%ebx) 
        je         false__hla_4239
        pushl      8(%edx) 
        pushl      %edi 
        pushl      16(%ebx) 
        pushl      $2 
        pushl      %ecx 
        pushl      $0 
        call       addELFsym__hla_3834
        jmp        endif__hla_4239
false__hla_4239:
        pushl      8(%edx) 
        pushl      %edi 
        pushl      $0 
        pushl      $0 
        pushl      %ecx 
        pushl      $0 
        call       addELFsym__hla_3834
endif__hla_4239:
        mov        numELFsyms__hla_3362, %eax 
        mov        %eax, 8(%ebx) 
        addl       $1, numELFsyms__hla_3362 
false__hla_4238:
false__hla_4237:
continue__hla_4233:
        popl       %ebp 
        ret        $4
exitfor__hla_4233:

        mov        numELFsyms__hla_3362, %eax 
        mov        %eax, symtabSection__hla_4215+28 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4240 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        mov        4(%eax), %ebx 
        movzbl     20(%ebx), %ecx 
        cmpl       $1, %ecx 
        jne        false__hla_4241
        mov        -140(%ebp), %ecx 
        jmp        endif__hla_4241
false__hla_4241:
        cmpl       $2, %ecx 
        jne        false__hla_4242
        mov        -144(%ebp), %ecx 
        jmp        endif__hla_4241
false__hla_4242:
        cmpl       $3, %ecx 
        jne        false__hla_4243
        mov        -148(%ebp), %ecx 
        jmp        endif__hla_4241
false__hla_4243:
        xorl       %ecx, %ecx 
endif__hla_4241:
        mov        12(%ebx), %edi 
        testb      $1, 21(%ebx) 
        jz         false__hla_4244
        cmpb       $0, 22(%ebx) 
        je         false__hla_4245
        mov        $18, %al 
        jmp        endif__hla_4245
false__hla_4245:
        mov        $16, %al 
endif__hla_4245:
        xorl       %ecx, %ecx 
        xorl       %edi, %edi 
        jmp        endif__hla_4244
false__hla_4244:
        testb      $2, 21(%ebx) 
        jz         false__hla_4246
        cmpb       $0, 22(%ebx) 
        je         false__hla_4247
        mov        $18, %al 
        jmp        endif__hla_4247
false__hla_4247:
        mov        $16, %al 
endif__hla_4247:
        jmp        endif__hla_4246
false__hla_4246:
        jmp        continue__hla_4240
endif__hla_4246:
endif__hla_4244:
        pushl      8(%edx) 
        pushl      %edi 
        pushl      16(%ebx) 
        pushl      %eax 
        pushl      %ecx 
        pushl      $0 
        call       addELFsym__hla_3834
        mov        numELFsyms__hla_3362, %eax 
        mov        %eax, 8(%ebx) 
        addl       $1, numELFsyms__hla_3362 
continue__hla_4240:
        popl       %ebp 
        ret        $4
exitfor__hla_4240:

        mov        codeSize, %eax 
        testl      %eax, %eax 
        je         false__hla_4248
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -84(%ebp) 
        imul       $8, numCodeRelocs, %eax 
        addl       $8, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -76(%ebp) 
        pushl      20(%ebp) 
        pushl      codeStart__hla_3370 
        pushl      -76(%ebp) 
        pushl      numCodeRelocs 
        pushl      -84(%ebp) 
        pushl      $1 
        pushl      8(%ebp) 
        call       buildRaw__hla_3860
false__hla_4248:
        mov        dataSize, %eax 
        testl      %eax, %eax 
        je         false__hla_4249
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -88(%ebp) 
        imul       $8, numDataRelocs, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -80(%ebp) 
        pushl      16(%ebp) 
        pushl      dataStart__hla_3372 
        pushl      -80(%ebp) 
        pushl      numDataRelocs 
        pushl      -88(%ebp) 
        pushl      $2 
        pushl      8(%ebp) 
        call       buildRaw__hla_3860
false__hla_4249:
        mov        $64, %eax 
        mov        %eax, -92(%ebp) 
        addl       -96(%ebp), %eax 
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, -100(%ebp) 
        addl       -104(%ebp), %eax 
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, -108(%ebp) 
        imul       $16, numELFsyms__hla_3362, %edx 
        addl       %edx, %eax 
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, -116(%ebp) 
        addl       strTblOffset__hla_3368, %eax 
        movl       %eax, %edx 
        addl       $15, %edx 
        andl       $-16, %edx 
        cmpl       $0, codeSize 
        je         false__hla_4250
        mov        %edx, -120(%ebp) 
        addl       codeSize, %edx 
        addl       $15, %edx 
        andl       $-16, %edx 
        jmp        endif__hla_4250
false__hla_4250:
        mov        -100(%ebp), %eax 
        mov        %eax, -120(%ebp) 
endif__hla_4250:
        cmpl       $0, dataSize 
        je         false__hla_4251
        mov        %edx, -128(%ebp) 
        addl       dataSize, %edx 
        addl       $15, %edx 
        andl       $-16, %edx 
        jmp        endif__hla_4251
false__hla_4251:
        mov        -100(%ebp), %eax 
        mov        %eax, -128(%ebp) 
endif__hla_4251:
        cmpl       $0, numCodeRelocs 
        je         false__hla_4252
        mov        %edx, -124(%ebp) 
        imul       $8, numCodeRelocs, %eax 
        addl       %eax, %edx 
        addl       $15, %edx 
        andl       $-16, %edx 
false__hla_4252:
        cmpl       $0, numDataRelocs 
        je         false__hla_4253
        mov        %edx, -132(%ebp) 
        imul       $8, numDataRelocs, %eax 
        addl       %eax, %edx 
false__hla_4253:
        mov        %edx, -16(%ebp) 
        pushl      %edx 
        call       MEM_ZALLOC
        mov        %eax, -12(%ebp) 
        pushl      -100(%ebp) 
        popl       -136(%ebp) 
        cld
        lea        -72(%ebp), %edi 
        mov        $52, %ecx 
        mov        $0, %al 
        rep stosb
        movw       $1, -56(%ebp) 
        movw       $3, -54(%ebp) 
        movl       $1, -52(%ebp) 
        movl       $0, -48(%ebp) 
        movl       $0, -44(%ebp) 
        mov        -92(%ebp), %eax 
        mov        %eax, -40(%ebp) 
        movl       $0, -36(%ebp) 
        movw       $52, -32(%ebp) 
        movw       $0, -30(%ebp) 
        movw       $0, -28(%ebp) 
        movw       $40, -26(%ebp) 
        mov        -4(%ebp), %eax 
        mov        %ax, -24(%ebp) 
        movw       $1, -22(%ebp) 
        lea        -72(%ebp), %ebx 
        movb       $127, (%ebx) 
        movb       $69, 1(%ebx) 
        movb       $76, 2(%ebx) 
        movb       $70, 3(%ebx) 
        movb       $1, 4(%ebx) 
        movb       $1, 5(%ebx) 
        movb       $1, 6(%ebx) 
        cmpb       $1, 8(%ebp) 
        jne        false__hla_4254
        movb       $0, 7(%ebx) 
        jmp        endif__hla_4254
false__hla_4254:
        cmpb       $2, 8(%ebp) 
        jne        false__hla_4255
        movb       $9, 7(%ebx) 
        jmp        endif__hla_4254
false__hla_4255:
        pushl      $str__hla_4256 
        call       STDERR_PUTS
        movb       $0, 7(%ebx) 
endif__hla_4254:
        mov        -100(%ebp), %eax 
        mov        %eax, shstrtabSection__hla_4214+16 
        mov        -104(%ebp), %eax 
        mov        %eax, shstrtabSection__hla_4214+20 
        mov        -108(%ebp), %eax 
        mov        %eax, symtabSection__hla_4215+16 
        imul       $16, numELFsyms__hla_3362, %eax 
        mov        %eax, symtabSection__hla_4215+20 
        mov        %eax, -112(%ebp) 
        mov        -116(%ebp), %eax 
        mov        %eax, strtabSection__hla_4216+16 
        mov        strTblOffset__hla_3368, %eax 
        mov        %eax, strtabSection__hla_4216+20 
        mov        -120(%ebp), %eax 
        mov        %eax, textSection__hla_4217+16 
        mov        codeSize, %eax 
        mov        %eax, textSection__hla_4217+20 
        mov        -128(%ebp), %eax 
        mov        %eax, dataSection__hla_4218+16 
        mov        dataSize, %eax 
        mov        %eax, dataSection__hla_4218+20 
        mov        bssSize, %eax 
        mov        %eax, bssSection__hla_4219+20 
        mov        -136(%ebp), %eax 
        mov        %eax, bssSection__hla_4219+16 
        cmpl       $0, numCodeRelocs 
        je         false__hla_4257
        mov        -124(%ebp), %eax 
        mov        %eax, relTextSection__hla_4220+16 
        imul       $8, numCodeRelocs, %eax 
        mov        %eax, relTextSection__hla_4220+20 
        mov        -140(%ebp), %eax 
        mov        %eax, relTextSection__hla_4220+28 
false__hla_4257:
        cmpl       $0, numDataRelocs 
        je         false__hla_4258
        mov        -132(%ebp), %eax 
        mov        %eax, relDataSection__hla_4221+16 
        imul       $8, numDataRelocs, %eax 
        mov        %eax, relDataSection__hla_4221+20 
        mov        -144(%ebp), %eax 
        mov        %eax, relDataSection__hla_4221+28 
false__hla_4258:
        cld
        mov        -12(%ebp), %edi 
        lea        -72(%ebp), %esi 
        mov        $52, %ecx 
        rep movsb
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        lea        NULLsection__hla_4213, %esi 
        mov        $40, %ecx 
        rep movsb
        lea        shstrtabSection__hla_4214, %esi 
        mov        $40, %ecx 
        rep movsb
        lea        symtabSection__hla_4215, %esi 
        mov        $40, %ecx 
        rep movsb
        lea        strtabSection__hla_4216, %esi 
        mov        $40, %ecx 
        rep movsb
        lea        textSection__hla_4217, %esi 
        mov        $40, %ecx 
        rep movsb
        lea        dataSection__hla_4218, %esi 
        mov        $40, %ecx 
        rep movsb
        lea        bssSection__hla_4219, %esi 
        mov        $40, %ecx 
        rep movsb
        cmpl       $0, numCodeRelocs 
        je         false__hla_4259
        lea        relTextSection__hla_4220, %esi 
        mov        $40, %ecx 
        rep movsb
false__hla_4259:
        cmpl       $0, numDataRelocs 
        je         false__hla_4260
        lea        relDataSection__hla_4221, %esi 
        mov        $40, %ecx 
        rep movsb
false__hla_4260:
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        -8(%ebp), %esi 
        mov        -104(%ebp), %ecx 
        cld
        rep movsb
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        ELFsyms__hla_3361, %esi 
        imul       $16, numELFsyms__hla_3362, %ecx 
        rep movsb
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        stringTable__hla_3367, %esi 
        mov        strTblOffset__hla_3368, %ecx 
        rep movsb
        cmpl       $0, codeSize 
        je         false__hla_4261
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        -84(%ebp), %esi 
        mov        codeSize, %ecx 
        rep movsb
false__hla_4261:
        cmpl       $0, dataSize 
        je         false__hla_4262
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        -88(%ebp), %esi 
        mov        dataSize, %ecx 
        rep movsb
false__hla_4262:
        cmpl       $0, numCodeRelocs 
        je         false__hla_4263
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        -76(%ebp), %esi 
        imul       $8, numCodeRelocs, %ecx 
        rep movsb
false__hla_4263:
        cmpl       $0, numDataRelocs 
        je         false__hla_4264
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        -80(%ebp), %esi 
        imul       $8, numDataRelocs, %ecx 
        rep movsb
false__hla_4264:
        pushl      24(%ebp) 
        call       FILEIO_OPENNEW
        mov        %eax, -20(%ebp) 
        pushl      -20(%ebp) 
        pushl      -12(%ebp) 
        pushl      -16(%ebp) 
        call       FILEIO_WRITE
        pushl      -20(%ebp) 
        call       FILEIO_CLOSE
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
        popl       %eax 
xgenerateELF__hla_4212__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $24
generateMacho__hla_4270:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $440, %esp 
        pushl      %eax 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        cmpb       $0, verboseDebug__hla_3376 
        je         false__hla_4273
        pushl      $str__hla_4274 
        call       STDOUT_PUTS
        pushl      24(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4178 
        call       STDOUT_PUTS
        pushl      20(%ebp) 
        call       STDOUT_PUTS
        call       STDOUT_NEWLN
false__hla_4273:
        movl       $262144, strTblSize__hla_3369 
        pushl      $262144 
        call       MEM_ZALLOC
        mov        %eax, stringTable__hla_3367 
        movl       $1, strTblOffset__hla_3368 
        pushl      $786432 
        call       MEM_ZALLOC
        mov        %eax, MachoSyms__hla_3364 
        movl       %eax, %ebx 
        movl       $786432, MachoSymSize__hla_3365 
        movl       $0, numMachoSyms__hla_3366 
        movl       $0, -20(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4275 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        mov        4(%eax), %ebx 
        movzbl     20(%ebx), %ecx 
        cmpl       $1, %ecx 
        jne        false__hla_4276
        mov        $1, %ecx 
        jmp        endif__hla_4276
false__hla_4276:
        cmpl       $2, %ecx 
        jne        false__hla_4277
        mov        $2, %ecx 
        jmp        endif__hla_4276
false__hla_4277:
        cmpl       $3, %ecx 
        jne        false__hla_4278
        mov        $3, %ecx 
        jmp        endif__hla_4276
false__hla_4278:
        xorl       %ecx, %ecx 
endif__hla_4276:
        mov        12(%ebx), %edi 
        testb      $3, 21(%ebx) 
        jnz        false__hla_4279
        pushl      8(%edx) 
        pushl      %edi 
        pushl      $14 
        pushl      %ecx 
        call       addMachoSym__hla_3845
        addl       $1, -20(%ebp) 
        mov        numMachoSyms__hla_3366, %eax 
        mov        %eax, 8(%ebx) 
        addl       $1, %eax 
        mov        %eax, numMachoSyms__hla_3366 
false__hla_4279:
continue__hla_4275:
        popl       %ebp 
        ret        $4
exitfor__hla_4275:

        movl       $0, -24(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4280 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        mov        4(%eax), %ebx 
        movzbl     20(%ebx), %ecx 
        cmpl       $1, %ecx 
        jne        false__hla_4281
        mov        $1, %ecx 
        jmp        endif__hla_4281
false__hla_4281:
        cmpl       $2, %ecx 
        jne        false__hla_4282
        mov        $2, %ecx 
        jmp        endif__hla_4281
false__hla_4282:
        cmpl       $3, %ecx 
        jne        false__hla_4283
        mov        $3, %ecx 
        jmp        endif__hla_4281
false__hla_4283:
        xorl       %ecx, %ecx 
endif__hla_4281:
        mov        12(%ebx), %edi 
        testb      $2, 21(%ebx) 
        jz         false__hla_4284
        pushl      8(%edx) 
        pushl      %edi 
        pushl      $15 
        pushl      %ecx 
        call       addMachoSym__hla_3845
        addl       $1, -24(%ebp) 
        mov        numMachoSyms__hla_3366, %eax 
        mov        %eax, 8(%ebx) 
        addl       $1, %eax 
        mov        %eax, numMachoSyms__hla_3366 
false__hla_4284:
continue__hla_4280:
        popl       %ebp 
        ret        $4
exitfor__hla_4280:

        movl       $0, -28(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4285 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        mov        4(%eax), %ebx 
        movzbl     20(%ebx), %ecx 
        cmpl       $1, %ecx 
        jne        false__hla_4286
        mov        $1, %ecx 
        jmp        endif__hla_4286
false__hla_4286:
        cmpl       $2, %ecx 
        jne        false__hla_4287
        mov        $2, %ecx 
        jmp        endif__hla_4286
false__hla_4287:
        cmpl       $3, %ecx 
        jne        false__hla_4288
        mov        $3, %ecx 
        jmp        endif__hla_4286
false__hla_4288:
        xorl       %ecx, %ecx 
endif__hla_4286:
        mov        12(%ebx), %edi 
        testb      $1, 21(%ebx) 
        jz         false__hla_4289
        pushl      8(%edx) 
        pushl      %edi 
        pushl      $1 
        pushl      %ecx 
        call       addMachoSym__hla_3845
        addl       $1, -28(%ebp) 
        mov        numMachoSyms__hla_3366, %eax 
        mov        %eax, 8(%ebx) 
        addl       $1, %eax 
        mov        %eax, numMachoSyms__hla_3366 
false__hla_4289:
continue__hla_4285:
        popl       %ebp 
        ret        $4
exitfor__hla_4285:

        mov        codeSize, %eax 
        testl      %eax, %eax 
        je         false__hla_4290
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, codeSize 
        pushl      %eax 
        call       MEM_ZALLOC
        mov        %eax, -12(%ebp) 
        imul       $8, numCodeRelocs, %eax 
        addl       $8, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -4(%ebp) 
        pushl      16(%ebp) 
        pushl      codeStart__hla_3370 
        pushl      -4(%ebp) 
        pushl      numCodeRelocs 
        pushl      -12(%ebp) 
        pushl      $1 
        pushl      $3 
        call       buildRaw__hla_3860
false__hla_4290:
        mov        dataSize, %eax 
        testl      %eax, %eax 
        je         false__hla_4291
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, dataSize 
        pushl      %eax 
        call       MEM_ZALLOC
        mov        %eax, -16(%ebp) 
        imul       $8, numDataRelocs, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -8(%ebp) 
        pushl      12(%ebp) 
        pushl      dataStart__hla_3372 
        pushl      -8(%ebp) 
        pushl      numDataRelocs 
        pushl      -16(%ebp) 
        pushl      $2 
        pushl      $3 
        call       buildRaw__hla_3860
false__hla_4291:
        addl       $15, bssSize 
        andl       $-16, bssSize 
        movl       $-17958194, -440(%ebp) 
        movl       $7, -436(%ebp) 
        movl       $3, -432(%ebp) 
        movl       $1, -428(%ebp) 
        movl       $3, -424(%ebp) 
        movl       $364, -420(%ebp) 
        movl       $0, -416(%ebp) 
        movl       $1, -412(%ebp) 
        movl       $260, -408(%ebp) 
        movl       $0, -404(%ebp) 
        movl       $0, -400(%ebp) 
        movl       $0, -396(%ebp) 
        movl       $0, -392(%ebp) 
        movl       $0, -388(%ebp) 
        mov        codeSize, %eax 
        addl       dataSize, %eax 
        mov        %eax, -376(%ebp) 
        addl       bssSize, %eax 
        mov        %eax, -384(%ebp) 
        movl       $392, -380(%ebp) 
        movl       $7, -372(%ebp) 
        movl       $7, -368(%ebp) 
        movl       $3, -364(%ebp) 
        movl       $0, -360(%ebp) 
        movl       $1702125407, -356(%ebp) 
        movl       $29816, -352(%ebp) 
        movl       $0, -348(%ebp) 
        movl       $0, -344(%ebp) 
        movl       $1163157343, -340(%ebp) 
        movl       $21592, -336(%ebp) 
        movl       $0, -332(%ebp) 
        movl       $0, -328(%ebp) 
        movl       $0, -324(%ebp) 
        mov        codeSize, %eax 
        mov        %eax, -320(%ebp) 
        movl       $392, -316(%ebp) 
        movl       $4, -312(%ebp) 
        mov        codeSize, %eax 
        addl       dataSize, %eax 
        addl       $392, %eax 
        mov        %eax, -308(%ebp) 
        mov        numCodeRelocs, %eax 
        mov        %eax, -304(%ebp) 
        movl       $1024, -300(%ebp) 
        movl       $0, -296(%ebp) 
        movl       $0, -292(%ebp) 
        movl       $1633967967, -288(%ebp) 
        movl       $24948, -284(%ebp) 
        movl       $0, -280(%ebp) 
        movl       $0, -276(%ebp) 
        movl       $1094999903, -272(%ebp) 
        movl       $16724, -268(%ebp) 
        movl       $0, -264(%ebp) 
        movl       $0, -260(%ebp) 
        mov        dataStart__hla_3372, %eax 
        mov        %eax, -256(%ebp) 
        mov        dataSize, %eax 
        mov        %eax, -252(%ebp) 
        mov        -316(%ebp), %eax 
        addl       codeSize, %eax 
        mov        %eax, -248(%ebp) 
        movl       $4, -244(%ebp) 
        imul       $8, numCodeRelocs, %eax 
        addl       -308(%ebp), %eax 
        mov        %eax, -240(%ebp) 
        mov        numDataRelocs, %eax 
        mov        %eax, -236(%ebp) 
        movl       $0, -232(%ebp) 
        movl       $0, -228(%ebp) 
        movl       $0, -224(%ebp) 
        movl       $1935826783, -220(%ebp) 
        movl       $115, -216(%ebp) 
        movl       $0, -212(%ebp) 
        movl       $0, -208(%ebp) 
        movl       $1094999903, -204(%ebp) 
        movl       $16724, -200(%ebp) 
        movl       $0, -196(%ebp) 
        movl       $0, -192(%ebp) 
        mov        bssStart__hla_3374, %eax 
        mov        %eax, -188(%ebp) 
        mov        bssSize, %eax 
        mov        %eax, -184(%ebp) 
        movl       $0, -180(%ebp) 
        movl       $4, -176(%ebp) 
        movl       $0, -172(%ebp) 
        movl       $0, -168(%ebp) 
        movl       $1, -164(%ebp) 
        movl       $0, -160(%ebp) 
        movl       $0, -156(%ebp) 
        movl       $2, -152(%ebp) 
        movl       $24, -148(%ebp) 
        movl       $0, -144(%ebp) 
        mov        numMachoSyms__hla_3366, %eax 
        mov        %eax, -140(%ebp) 
        movl       $0, -136(%ebp) 
        mov        strTblOffset__hla_3368, %eax 
        mov        %eax, -132(%ebp) 
        movl       $11, -128(%ebp) 
        movl       $80, -124(%ebp) 
        mov        -20(%ebp), %eax 
        movl       $0, -120(%ebp) 
        mov        %eax, -116(%ebp) 
        cmpl       $0, -24(%ebp) 
        je         false__hla_4306
        mov        -20(%ebp), %eax 
        mov        %eax, -112(%ebp) 
        jmp        endif__hla_4306
false__hla_4306:
        movl       $0, -112(%ebp) 
endif__hla_4306:
        mov        -24(%ebp), %eax 
        mov        %eax, -108(%ebp) 
        cmpl       $0, -28(%ebp) 
        je         false__hla_4307
        mov        -20(%ebp), %eax 
        addl       -24(%ebp), %eax 
        mov        %eax, -104(%ebp) 
        jmp        endif__hla_4307
false__hla_4307:
        movl       $0, -104(%ebp) 
endif__hla_4307:
        mov        -28(%ebp), %eax 
        mov        %eax, -100(%ebp) 
        xorl       %eax, %eax 
        mov        %eax, -96(%ebp) 
        mov        %eax, -92(%ebp) 
        mov        %eax, -88(%ebp) 
        mov        %eax, -84(%ebp) 
        mov        %eax, -80(%ebp) 
        mov        %eax, -76(%ebp) 
        mov        %eax, -72(%ebp) 
        mov        %eax, -68(%ebp) 
        mov        %eax, -64(%ebp) 
        mov        %eax, -60(%ebp) 
        mov        %eax, -56(%ebp) 
        mov        %eax, -52(%ebp) 
        mov        $392, %eax 
        addl       codeSize, %eax 
        addl       dataSize, %eax 
        imul       $8, numCodeRelocs, %edx 
        addl       %edx, %eax 
        imul       $8, numDataRelocs, %edx 
        addl       %edx, %eax 
        mov        %eax, -144(%ebp) 
        imul       $12, numMachoSyms__hla_3366, %edx 
        addl       %edx, %eax 
        mov        %eax, -136(%ebp) 
        addl       strTblOffset__hla_3368, %eax 
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, -36(%ebp) 
        pushl      %eax 
        call       MEM_ZALLOC
        mov        %eax, -32(%ebp) 
        cld
        movl       %eax, %edi 
        lea        -440(%ebp), %esi 
        mov        $392, %ecx 
        rep movsb
        mov        -12(%ebp), %esi 
        mov        codeSize, %ecx 
        rep movsb
        mov        -16(%ebp), %esi 
        mov        dataSize, %ecx 
        rep movsb
        mov        -4(%ebp), %esi 
        imul       $8, numCodeRelocs, %ecx 
        rep movsb
        mov        -8(%ebp), %esi 
        imul       $8, numDataRelocs, %ecx 
        rep movsb
        mov        MachoSyms__hla_3364, %esi 
        imul       $12, numMachoSyms__hla_3366, %ecx 
        rep movsb
        mov        stringTable__hla_3367, %esi 
        mov        strTblOffset__hla_3368, %ecx 
        rep movsb
        pushl      20(%ebp) 
        call       FILEIO_OPENNEW
        mov        %eax, -44(%ebp) 
        pushl      -44(%ebp) 
        pushl      -32(%ebp) 
        pushl      -36(%ebp) 
        call       FILEIO_WRITE
        pushl      -44(%ebp) 
        call       FILEIO_CLOSE
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
        popl       %eax 
xgenerateMacho__hla_4270__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $20
compileCOFF:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $36, %esp 
        pushl      %ebx 
        mov        16(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -4(%ebp) 
        mov        12(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -8(%ebp) 
        mov        8(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -12(%ebp) 
        pushl      28(%ebp) 
        pushl      24(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       lexer
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        pushl      -12(%ebp) 
        pushl      20(%ebp) 
        pushl      $0 
        call       optimizeDisps
        pushl      36(%ebp) 
        pushl      32(%ebp) 
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        pushl      -12(%ebp) 
        call       generateCOFF__hla_4138
        mov        16(%ebp), %ebx 
        mov        -4(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        12(%ebp), %ebx 
        mov        -8(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        8(%ebp), %ebx 
        mov        -12(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        $1, %eax 
xcompileCOFF__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $32
compileELF:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $36, %esp 
        pushl      %ebx 
        mov        16(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -4(%ebp) 
        mov        12(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -8(%ebp) 
        mov        8(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -12(%ebp) 
        pushl      32(%ebp) 
        pushl      28(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       lexer
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        pushl      -12(%ebp) 
        pushl      20(%ebp) 
        pushl      24(%ebp) 
        call       optimizeDisps
        pushl      40(%ebp) 
        pushl      36(%ebp) 
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        pushl      -12(%ebp) 
        pushl      24(%ebp) 
        call       generateELF__hla_4212
        mov        16(%ebp), %ebx 
        mov        -4(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        12(%ebp), %ebx 
        mov        -8(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        8(%ebp), %ebx 
        mov        -12(%ebp), %eax 
        mov        %eax, (%ebx) 
        xorl       %eax, %eax 
xcompileELF__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $36
compileMACHO:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $36, %esp 
        pushl      %ebx 
        mov        16(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -4(%ebp) 
        mov        12(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -8(%ebp) 
        mov        8(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -12(%ebp) 
        pushl      28(%ebp) 
        pushl      24(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       lexer
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        pushl      -12(%ebp) 
        pushl      20(%ebp) 
        pushl      $3 
        call       optimizeDisps
        pushl      36(%ebp) 
        pushl      32(%ebp) 
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        pushl      -12(%ebp) 
        call       generateMacho__hla_4270
        mov        16(%ebp), %ebx 
        mov        -4(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        12(%ebp), %ebx 
        mov        -8(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        8(%ebp), %ebx 
        mov        -12(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        $1, %eax 
xcompileMACHO__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $32
compile__hla_4330:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $28, %esp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        mov        %esp, saveESP__hla_3390 
        mov        ExceptionPtr__hla_, %eax 
        mov        %eax, SaveSEHPointer__hla_3389 
        call       BuildExcepts__hla_
        pushl      %ebp 
        addl       $-28, (%esp) 
        call       CONV_GETDELIMITERS
        pushl      $0 
        pushl      $0 
        pushl      $11008 
        pushl      $0 
        pushl      %ebp 
        addl       $-28, (%esp) 
        call       CSET_SETUNION
        pushl      -16(%ebp) 
        pushl      -20(%ebp) 
        pushl      -24(%ebp) 
        pushl      -28(%ebp) 
        call       CONV_SETDELIMITERS
        cmpb       $0, 8(%ebp) 
        je         false__hla_4333
        pushl      $str__hla_4334 
        call       STDOUT_PUTS
        pushl      40(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4335 
        call       STDOUT_PUTS
        pushl      36(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4336 
        call       STDOUT_PUTS
false__hla_4333:
        pushl      $exception__hla_4338 
        pushl      %ebp 
        mov        ExceptionPtr__hla_, %ebp 
        pushl      8(%ebp) 
        mov        4(%esp), %ebp 
        pushl      $244115826 
        pushl      ExceptionPtr__hla_ 
        mov        %esp, ExceptionPtr__hla_ 
        pushl      $65536 
        movl       $symbolTable, %esi 
        call       TABLE_CREATE
        pushl      $8192 
        movl       $equatesTable, %esi 
        call       TABLE_CREATE
        movzbl     24(%ebp), %eax 
        cmpl       $3, %eax 
        jg         default__hla_4339
        jmp *      jmpTbl__hla_4339(,%eax,4) 
case__hla_4340:
        pushl      40(%ebp) 
        pushl      36(%ebp) 
        pushl      32(%ebp) 
        pushl      28(%ebp) 
        pushl      8(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       compileCOFF
        jmp        endswitch__hla_4339
case__hla_4341:
        pushl      40(%ebp) 
        pushl      36(%ebp) 
        pushl      32(%ebp) 
        pushl      28(%ebp) 
        pushl      $1 
        pushl      8(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       compileELF
        jmp        endswitch__hla_4339
case__hla_4342:
        pushl      40(%ebp) 
        pushl      36(%ebp) 
        pushl      32(%ebp) 
        pushl      28(%ebp) 
        pushl      $2 
        pushl      8(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       compileELF
        jmp        endswitch__hla_4339
case__hla_4343:
        pushl      40(%ebp) 
        pushl      36(%ebp) 
        pushl      32(%ebp) 
        pushl      28(%ebp) 
        pushl      8(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       compileMACHO
        jmp        endswitch__hla_4339
default__hla_4339:
        pushl      $str__hla_4344 
        call       STDERR_PUTS
        mov        $1, %eax 
endswitch__hla_4339:
        mov        ExceptionPtr__hla_, %esp 
        popl       ExceptionPtr__hla_ 
        addl       $8, %esp 
        popl       %ebp 
        addl       $4, %esp 
        jmp        endtry__hla_4337
exception__hla_4338:
        call       EX_PRINTEXCEPTIONERROR
        mov        $0, %eax 
endtry__hla_4337:
        cmpb       $0, verboseDebug__hla_3376 
        je         false__hla_4345
        call       STDOUT_NEWLN
        pushl      $str__hla_4346 
        call       STDOUT_PUTS
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4347 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        pushl      8(%edx) 
        pushl      $-24 
        pushl      $32 
        call       STDOUT_PUTSSIZE
        pushl      $str__hla_4158 
        call       STDOUT_PUTS
        mov        4(%edx), %edx 
        mov        21(%edx), %ah 
        testb      $1, %ah 
        mov        $32, %al 
        jz         false__hla_4348
        mov        $88, %al 
false__hla_4348:
        pushl      %eax 
        call       STDOUT_PUTC
        testb      $2, %ah 
        mov        $32, %al 
        jz         false__hla_4349
        mov        $80, %al 
false__hla_4349:
        pushl      %eax 
        call       STDOUT_PUTC
        testb      $4, %ah 
        mov        $32, %al 
        jz         false__hla_4350
        mov        $82, %al 
false__hla_4350:
        pushl      %eax 
        call       STDOUT_PUTC
        testb      $8, %ah 
        mov        $32, %al 
        jz         false__hla_4351
        mov        $68, %al 
false__hla_4351:
        pushl      %eax 
        call       STDOUT_PUTC
        pushl      $str__hla_4352 
        call       STDOUT_PUTS
        pushl      12(%edx) 
        call       STDOUT_PUTD
        pushl      $str__hla_4353 
        call       STDOUT_PUTS
        pushl      $0 
        pushl      %eax 
        mov        20(%edx), %al 
        mov        %al, 4(%esp) 
        popl       %eax 
        call       STDOUT_PUTU8
        pushl      $str__hla_4354 
        call       STDOUT_PUTS
        pushl      $0 
        pushl      %eax 
        mov        8(%edx), %al 
        mov        %al, 4(%esp) 
        popl       %eax 
        call       STDOUT_PUTU8
        call       STDOUT_NEWLN
continue__hla_4347:
        popl       %ebp 
        ret        $4
exitfor__hla_4347:

        call       STDOUT_NEWLN
false__hla_4345:
        jmp        Exit_compile_hlabe__hla_4355

QuitMain__hla_:
        mov        $1, %eax 

Exit_compile_hlabe__hla_4355:
        mov        saveESP__hla_3390, %esp 
        pushl      %eax 
        mov        SaveSEHPointer__hla_3389, %eax 
        mov        %eax, ExceptionPtr__hla_ 
        mov        20(%ebp), %ecx 
        mov        -4(%ebp), %edx 
        mov        %edx, (%ecx) 
        mov        16(%ebp), %ecx 
        mov        -8(%ebp), %edx 
        mov        %edx, (%ecx) 
        mov        12(%ebp), %ecx 
        mov        -12(%ebp), %edx 
        mov        %edx, (%ecx) 
        popl       %eax 
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
xcompile__hla_4330__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $36
_hlabe_compile:
hlabe_compile:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $2088, %esp 
        mov        %ebx, -4(%ebp) 
        mov        %ecx, -8(%ebp) 
        mov        %edx, -12(%ebp) 
        mov        %esi, -16(%ebp) 
        mov        %edi, -20(%ebp) 
        pushl      %ebp 
        addl       $-1064, (%esp) 
        pushl      $1024 
        call       STR_INIT
        mov        %eax, -24(%ebp) 
        pushl      %ebp 
        addl       $-2088, (%esp) 
        pushl      $1024 
        call       STR_INIT
        mov        %eax, -28(%ebp) 
        pushl      8(%ebp) 
        pushl      -24(%ebp) 
        call       STR_CPYZ
        pushl      12(%ebp) 
        pushl      -28(%ebp) 
        call       STR_CPYZ
        pushl      -24(%ebp) 
        pushl      -28(%ebp) 
        pushl      16(%ebp) 
        pushl      20(%ebp) 
        pushl      24(%ebp) 
        pushl      %ebp 
        addl       $-32, (%esp) 
        pushl      %ebp 
        addl       $-36, (%esp) 
        pushl      %ebp 
        addl       $-40, (%esp) 
        pushl      28(%ebp) 
        call       compile__hla_4330
        mov        -4(%ebp), %ebx 
        mov        -8(%ebp), %ecx 
        mov        -12(%ebp), %edx 
        mov        -16(%ebp), %esi 
        mov        -20(%ebp), %edi 
xhlabe_compile__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret








  .text


        .align (2)
len__hla_3402 :.long      0x2
        .long      0x2
str__hla_3402:

 .ascii ", "
 .byte 0

 .byte 0

        .align (2)
len__hla_3444 :.long      0x2e
        .long      0x2e
str__hla_3444:

 .ascii "Attempted to scan beyond the end of the file"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0

        .align (2)
len__hla_3468 :.long      0x13
        .long      0x13
str__hla_3468:

 .ascii "Unknown statement: "
 .byte 0


        .align (2)
len__hla_3490 :.long      0x23
        .long      0x23
str__hla_3490:

 .ascii "Expected ')' in expression at line "
 .byte 0


        .align (2)
len__hla_3491 :.long      0x25
        .long      0x25
str__hla_3491:

 .ascii "Unexpected character in expression: '"
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_3492 :.long      0xa
        .long      0xa
str__hla_3492:

 .ascii "' at line "
 .byte 0

 .byte 0
jmpTbl__hla_3483:
        .long      (case__hla_3484+0)
        .long      (default__hla_3483+0)
        .long      (default__hla_3483+0)
        .long      (default__hla_3483+0)
        .long      (case__hla_3488+0)
        .long      (default__hla_3483+0)
        .long      (default__hla_3483+0)
        .long      (default__hla_3483+0)
        .long      (default__hla_3483+0)
        .long      (default__hla_3483+0)
        .long      (default__hla_3483+0)
        .long      (default__hla_3483+0)
        .long      (case__hla_3485+0)
        .long      (case__hla_3485+0)
        .long      (case__hla_3485+0)
        .long      (case__hla_3485+0)
        .long      (case__hla_3485+0)
        .long      (case__hla_3485+0)
        .long      (case__hla_3485+0)
        .long      (case__hla_3485+0)
        .long      (case__hla_3485+0)
        .long      (case__hla_3485+0)
        .long      (default__hla_3483+0)
        .long      (default__hla_3483+0)
        .long      (default__hla_3483+0)
        .long      (default__hla_3483+0)
        .long      (default__hla_3483+0)
        .long      (default__hla_3483+0)
        .long      (default__hla_3483+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (default__hla_3483+0)
        .long      (default__hla_3483+0)
        .long      (default__hla_3483+0)
        .long      (default__hla_3483+0)
        .long      (case__hla_3486+0)
        .long      (default__hla_3483+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)

        .align (2)
len__hla_3503 :.long      0x23
        .long      0x23
str__hla_3503:

 .ascii "Illegal relocatable object at line "
 .byte 0


        .align (2)
len__hla_3515 :.long      0x34
        .long      0x34
str__hla_3515:

 .ascii "Expression cannot contain relocatable items at line "
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_3529 :.long      0x19
        .long      0x19
str__hla_3529:

 .ascii ".b operand out of range"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_3540 :.long      0x19
        .long      0x19
str__hla_3540:

 .ascii ".w operand out of range"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_3582 :.long      0x1a
        .long      0x1a
str__hla_3582:

 .ascii "TByte value out of range"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0

        .align (2)
len__hla_3635 :.long      0x1a
        .long      0x1a
str__hla_3635:

 .ascii "Filename too long at line "
 .byte 0

 .byte 0

        .align (2)
len__hla_3671 :.long      0x1c
        .long      0x1c
str__hla_3671:

 .ascii "ecx <> NULL hlabe.hla (1977)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_3680 :.long      0x1c
        .long      0x1c
str__hla_3680:

 .ascii "ecx <> NULL hlabe.hla (2044)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_3686 :.long      0x15
        .long      0x15
str__hla_3686:

 .ascii "Syntax error at line "
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_3687 :.long      0x13
        .long      0x13
str__hla_3687:

 .ascii ", expected at ','"
 .byte 0xd
 .byte 0xa
 .byte 0


        .align (2)
len__hla_3688 :.long      0x2e
        .long      0x2e
str__hla_3688:

 .ascii "Equate attempted to redefine a symbol at line "
 .byte 0

 .byte 0

        .align (2)
len__hla_3691 :.long      0x2f
        .long      0x2f
str__hla_3691:

 .ascii "End Function symbol must be predefined at line "
 .byte 0


        .align (2)
len__hla_3696 :.long      0x1c
        .long      0x1c
str__hla_3696:

 .ascii "ecx <> NULL hlabe.hla (2168)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_3702 :.long      0x2c
        .long      0x2c
str__hla_3702:

 .ascii "Public symbol cannot also be extern at line "
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_3707 :.long      0x1c
        .long      0x1c
str__hla_3707:

 .ascii "ecx <> NULL hlabe.hla (2259)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_3716 :.long      0x1c
        .long      0x1c
str__hla_3716:

 .ascii "ecx <> NULL hlabe.hla (2351)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_3722 :.long      0x2a
        .long      0x2a
str__hla_3722:

 .ascii ".ub expected a ',' -- Syntax error at line"
 .byte 0

 .byte 0

        .align (2)
len__hla_3725 :.long      0x2b
        .long      0x2b
str__hla_3725:

 .ascii ".uw expected a ',' -- Syntax error at line "
 .byte 0


        .align (2)
len__hla_3728 :.long      0x2b
        .long      0x2b
str__hla_3728:

 .ascii ".ud expected a ',' -- Syntax error at line "
 .byte 0


        .align (2)
len__hla_3734 :.long      0x1c
        .long      0x1c
str__hla_3734:

 .ascii "ecx <> NULL hlabe.hla (2542)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_3740 :.long      0x11
        .long      0x11
str__hla_3740:

 .ascii "External symbol '"
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_3741 :.long      0x32
        .long      0x32
str__hla_3741:

 .ascii "' is already defined. Error in HLABE code at line "
 .byte 0

 .byte 0
jmpTbl__hla_3665:
        .long      (case__hla_3666+0)
        .long      (case__hla_3667+0)
        .long      (case__hla_3674+0)
        .long      (case__hla_3675+0)
        .long      (case__hla_3683+0)
        .long      (case__hla_3689+0)
        .long      (default__hla_3665+0)
        .long      (default__hla_3665+0)
        .long      (default__hla_3665+0)
        .long      (default__hla_3665+0)
        .long      (default__hla_3665+0)
        .long      (case__hla_3692+0)
        .long      (default__hla_3665+0)
        .long      (default__hla_3665+0)
        .long      (default__hla_3665+0)
        .long      (case__hla_3699+0)
        .long      (case__hla_3703+0)
        .long      (case__hla_3710+0)
        .long      (case__hla_3711+0)
        .long      (case__hla_3712+0)
        .long      (case__hla_3719+0)
        .long      (case__hla_3729+0)
        .long      (case__hla_3730+0)
        .long      (case__hla_3737+0)
        .long      (case__hla_3674+0)
        .long      (case__hla_3743+0)

        .align (2)
len__hla_3747 :.long      0x7
        .long      0x7
str__hla_3747:

 .ascii "Symbol "
 .byte 0


        .align (2)
len__hla_3748 :.long      0x23
        .long      0x23
str__hla_3748:

 .ascii " is already defined. Error at line "
 .byte 0


        .align (2)
len__hla_3852 :.long      0x1c
        .long      0x1c
str__hla_3852:

 .ascii "esi <> NULL hlabe.hla (3528)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_3882 :.long      0x40
        .long      0x40
str__hla_3882:

 .ascii "Error: Unexpected bss directive encountered in non-bss section"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_3887 :.long      0x42
        .long      0x42
str__hla_3887:

 .ascii "Error: Unexpected code directive encountered in non-code section"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0

        .align (2)
len__hla_3890 :.long      0x42
        .long      0x42
str__hla_3890:

 .ascii "Error: Unexpected data directive encountered in non-data section"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0

        .align (2)
len__hla_3906 :.long      0x23
        .long      0x23
str__hla_3906:

 .ascii "Object code type is not supported"
 .byte 0xd
 .byte 0xa
 .byte 0


        .align (2)
len__hla_3943 :.long      0x23
        .long      0x23
str__hla_3943:

 .ascii "HLABE Internal error (Bad section):"
 .byte 0


        .align (2)
len__hla_3946 :.long      0x24
        .long      0x24
str__hla_3946:

 .ascii "Internal error: illegal token value:"
 .byte 0

 .byte 0
 .byte 0
 .byte 0
jmpTbl__hla_3867:
        .long      (case__hla_3868+0)
        .long      (case__hla_3869+0)
        .long      (case__hla_3883+0)
        .long      (case__hla_3868+0)
        .long      (case__hla_3868+0)
        .long      (case__hla_3931+0)
        .long      (case__hla_3944+0)
        .long      (case__hla_3891+0)
        .long      (case__hla_3891+0)
        .long      (case__hla_3891+0)
        .long      (case__hla_3885+0)
        .long      (default__hla_3867+0)
        .long      (case__hla_3888+0)
        .long      (case__hla_3880+0)
        .long      (case__hla_3895+0)
        .long      (case__hla_3896+0)
        .long      (case__hla_3897+0)
        .long      (case__hla_3920+0)
        .long      (case__hla_3907+0)
        .long      (case__hla_3868+0)
        .long      (case__hla_3868+0)
        .long      (case__hla_3868+0)

        .align (2)
len__hla_3976 :.long      0x31
        .long      0x31
str__hla_3976:

 .ascii "Instruction cannot reference an external symbol ("
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_3977 :.long      0x3
        .long      0x3
str__hla_3977:

 .ascii ")"
 .byte 0xd
 .byte 0xa
 .byte 0

jmpTbl__hla_3962:
        .long      (case__hla_3963+0)
        .long      (case__hla_3967+0)
        .long      (case__hla_3968+0)
        .long      (case__hla_3969+0)
        .long      (case__hla_3963+0)
        .long      (case__hla_3983+0)
        .long      (case__hla_3970+0)
        .long      (case__hla_3971+0)
        .long      (case__hla_3971+0)
        .long      (case__hla_3971+0)
        .long      (case__hla_3964+0)
        .long      (default__hla_3962+0)
        .long      (case__hla_3965+0)
        .long      (case__hla_3966+0)
        .long      (case__hla_3972+0)
        .long      (case__hla_3981+0)
        .long      (case__hla_3978+0)
        .long      (case__hla_3982+0)
        .long      (case__hla_3980+0)
        .long      (case__hla_3963+0)
        .long      (case__hla_3963+0)
        .long      (case__hla_3963+0)

        .align (2)
len__hla_4003 :.long      0x11
        .long      0x11
str__hla_4003:

 .ascii "Undefined symbol:"
 .byte 0

 .byte 0
 .byte 0
jmpTbl__hla_4019:
        .long      (case__hla_4020+0)
        .long      (case__hla_4026+0)
        .long      (case__hla_4028+0)
        .long      (case__hla_4020+0)
        .long      (case__hla_4020+0)
        .long      (case__hla_4041+0)
        .long      (case__hla_4029+0)
        .long      (case__hla_4030+0)
        .long      (case__hla_4030+0)
        .long      (case__hla_4030+0)
        .long      (case__hla_4021+0)
        .long      (default__hla_4019+0)
        .long      (case__hla_4022+0)
        .long      (case__hla_4023+0)
        .long      (case__hla_4031+0)
        .long      (case__hla_4039+0)
        .long      (case__hla_4032+0)
        .long      (case__hla_4040+0)
        .long      (case__hla_4036+0)
        .long      (case__hla_4020+0)
        .long      (case__hla_4020+0)
        .long      (case__hla_4024+0)

        .align (2)
len__hla_4073 :.long      0x8
        .long      0x8
str__hla_4073:

 .ascii "Symbol '"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4074 :.long      0x10
        .long      0x10
str__hla_4074:

 .ascii "' is undefined"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4078 :.long      0x2f
        .long      0x2f
str__hla_4078:

 .ascii "Branch target is out of range. "
 .byte 0xd
 .byte 0xa

 .ascii "(displacement="
 .byte 0


        .align (2)
len__hla_4079 :.long      0x28
        .long      0x28
str__hla_4079:

 .ascii " and must be in the range -128..+127)."
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0
jmpTbl__hla_4068:
        .long      (case__hla_4069+0)
        .long      (case__hla_4069+0)
        .long      (case__hla_4069+0)
        .long      (case__hla_4071+0)
        .long      (case__hla_4070+0)
        .long      (case__hla_4103+0)
        .long      (case__hla_4069+0)
        .long      (case__hla_4069+0)
        .long      (case__hla_4069+0)
        .long      (case__hla_4069+0)
        .long      (case__hla_4069+0)
        .long      (default__hla_4068+0)
        .long      (case__hla_4069+0)
        .long      (case__hla_4069+0)
        .long      (case__hla_4075+0)
        .long      (case__hla_4080+0)
        .long      (case__hla_4083+0)
        .long      (case__hla_4096+0)
        .long      (case__hla_4088+0)
        .long      (case__hla_4069+0)
        .long      (case__hla_4069+0)
        .long      (case__hla_4069+0)

        .align (2)
len__hla_4110 :.long      0x2d
        .long      0x2d
str__hla_4110:

 .ascii "Internal error (relocations in BSS section)"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_4115 :.long      0x1c
        .long      0x1c
str__hla_4115:

 .ascii "ebx <> NULL hlabe.hla (5565)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4118 :.long      0x12
        .long      0x12
str__hla_4118:

 .ascii "Undefined symbol: "
 .byte 0

 .byte 0

        .align (2)
len__hla_4125 :.long      0x10
        .long      0x10
str__hla_4125:

 .ascii "optimizeDisps:"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4127 :.long      0x5e
        .long      0x5e
str__hla_4127:

 .ascii "Could not optimize (small->large) in 16,384 passes."
 .byte 0xd
 .byte 0xa

 .ascii "Reverting to large->small optimization."
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0

        .align (2)
len__hla_4129 :.long      0x15
        .long      0x15
str__hla_4129:

 .ascii "Optimization passes: "
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_4130 :.long      0x8
        .long      0x8
str__hla_4130:

 .ascii "+16386"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4132 :.long      0x4
        .long      0x4
str__hla_4132:

 .ascii "+2"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4156 :.long      0x4
        .long      0x4
str__hla_4156:
 .byte 0xd
 .byte 0xa
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4158 :.long      0x2
        .long      0x2
str__hla_4158:

 .ascii ": "
 .byte 0

 .byte 0

        .align (2)
len__hla_4159 :.long      0x3
        .long      0x3
str__hla_4159:

 .ascii ", '"
 .byte 0


        .align (2)
len__hla_4160 :.long      0x3
        .long      0x3
str__hla_4160:

 .ascii "', "
 .byte 0


        .align (2)
len__hla_4163 :.long      0x17
        .long      0x17
str__hla_4163:

 .ascii "IMAGE_REL_I386_ABSOLUTE"
 .byte 0


        .align (2)
len__hla_4165 :.long      0x14
        .long      0x14
str__hla_4165:

 .ascii "IMAGE_REL_I386_DIR32"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4167 :.long      0x16
        .long      0x16
str__hla_4167:

 .ascii "IMAGE_REL_I386_DIR32NB"
 .byte 0

 .byte 0

        .align (2)
len__hla_4169 :.long      0x14
        .long      0x14
str__hla_4169:

 .ascii "IMAGE_REL_I386_REL32"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4170 :.long      0x18
        .long      0x18
str__hla_4170:

 .ascii "???? relocation type = $"
 .byte 0

 .byte 0
 .byte 0
 .byte 0
jmpTbl__hla_4161:
        .long      (case__hla_4162+0)
        .long      (default__hla_4161+0)
        .long      (default__hla_4161+0)
        .long      (default__hla_4161+0)
        .long      (default__hla_4161+0)
        .long      (default__hla_4161+0)
        .long      (case__hla_4164+0)
        .long      (case__hla_4166+0)
        .long      (default__hla_4161+0)
        .long      (default__hla_4161+0)
        .long      (default__hla_4161+0)
        .long      (default__hla_4161+0)
        .long      (default__hla_4161+0)
        .long      (default__hla_4161+0)
        .long      (default__hla_4161+0)
        .long      (default__hla_4161+0)
        .long      (default__hla_4161+0)
        .long      (default__hla_4161+0)
        .long      (default__hla_4161+0)
        .long      (default__hla_4161+0)
        .long      (case__hla_4168+0)

        .align (2)
len__hla_4177 :.long      0x20
        .long      0x20
str__hla_4177:

 .ascii "generateCOFF:"
 .byte 0xd
 .byte 0xa

 .ascii "Input filename:  "
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4178 :.long      0x13
        .long      0x13
str__hla_4178:
 .byte 0xd
 .byte 0xa

 .ascii "Output filename: "
 .byte 0

divisor__hla_4179: .long 18

        .align (2)
len__hla_4181 :.long      0x5
        .long      0x5
str__hla_4181:

 .ascii ".text"
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_4183 :.long      0x5
        .long      0x5
str__hla_4183:

 .ascii ".data"
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_4184 :.long      0x4
        .long      0x4
str__hla_4184:

 .ascii ".bss"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4191 :.long      0x1c
        .long      0x1c
str__hla_4191:
 .byte 0xd
 .byte 0xa

 .ascii "COFF Symbol table (#syms: "
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4192 :.long      0x5
        .long      0x5
str__hla_4192:

 .ascii ")"
 .byte 0xd
 .byte 0xa
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_4196 :.long      0x2
        .long      0x2
str__hla_4196:

 .ascii " :"
 .byte 0

 .byte 0

        .align (2)
len__hla_4199 :.long      0x6
        .long      0x6
str__hla_4199:

 .ascii "static"
 .byte 0

 .byte 0

        .align (2)
len__hla_4202 :.long      0x8
        .long      0x8
str__hla_4202:

 .ascii "external"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4203 :.long      0x6
        .long      0x6
str__hla_4203:

 .ascii "public"
 .byte 0

 .byte 0

        .align (2)
len__hla_4204 :.long      0x4
        .long      0x4
str__hla_4204:

 .ascii "????"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4205 :.long      0x19
        .long      0x19
str__hla_4205:

 .ascii "Code Section Relocations:"
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_4206 :.long      0x19
        .long      0x19
str__hla_4206:

 .ascii "Data Section Relocations:"
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_4225 :.long      0x1f
        .long      0x1f
str__hla_4225:

 .ascii "generateELF:"
 .byte 0xd
 .byte 0xa

 .ascii "Input filename:  "
 .byte 0


        .align (2)
len__hla_4226 :.long      0x9
        .long      0x9
str__hla_4226:

 .ascii ".shstrtab"
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_4227 :.long      0x7
        .long      0x7
str__hla_4227:

 .ascii ".symtab"
 .byte 0


        .align (2)
len__hla_4228 :.long      0x7
        .long      0x7
str__hla_4228:

 .ascii ".strtab"
 .byte 0


        .align (2)
len__hla_4229 :.long      0x9
        .long      0x9
str__hla_4229:

 .ascii ".rel.text"
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_4230 :.long      0x9
        .long      0x9
str__hla_4230:

 .ascii ".rel.data"
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_4256 :.long      0x1f
        .long      0x1f
str__hla_4256:

 .ascii "Unknown ELF format specified!"
 .byte 0xd
 .byte 0xa
 .byte 0


        .align (2)
len__hla_4274 :.long      0x21
        .long      0x21
str__hla_4274:

 .ascii "generateMacho:"
 .byte 0xd
 .byte 0xa

 .ascii "Input filename:  "
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_4334 :.long      0x48
        .long      0x48
str__hla_4334:

 .ascii "------------"
 .byte 0xd
 .byte 0xa

 .ascii "HLA Back Engine Object code formatter"
 .byte 0xd
 .byte 0xa
 .byte 0xd
 .byte 0xa

 .ascii "HLABE compiling '"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4335 :.long      0x6
        .long      0x6
str__hla_4335:

 .ascii "' to '"
 .byte 0

 .byte 0

        .align (2)
len__hla_4336 :.long      0x3
        .long      0x3
str__hla_4336:

 .ascii "'"
 .byte 0xd
 .byte 0xa
 .byte 0


        .align (2)
len__hla_4344 :.long      0x38
        .long      0x38
str__hla_4344:

 .ascii "Illegal object-code format specified -- compile failed"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0
jmpTbl__hla_4339:
        .long      (case__hla_4340+0)
        .long      (case__hla_4341+0)
        .long      (case__hla_4342+0)
        .long      (case__hla_4343+0)

        .align (2)
len__hla_4346 :.long      0x12
        .long      0x12
str__hla_4346:

 .ascii "Symbol table: "
 .byte 0xd
 .byte 0xa
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0

        .align (2)
len__hla_4352 :.long      0x3
        .long      0x3
str__hla_4352:

 .ascii "  $"
 .byte 0


        .align (2)
len__hla_4353 :.long      0x6
        .long      0x6
str__hla_4353:

 .ascii ", sec:"
 .byte 0

 .byte 0

        .align (2)
len__hla_4354 :.long      0x8
        .long      0x8
str__hla_4354:

 .ascii ", index:"
 .byte 0

 .byte 0
 .byte 0
 .byte 0
idSet__hla_3451 :.byte  0x0,0x0,0x0,0x0,0x10,0x40,0xff,0x83,0xff,0xff,0xff,0x87,0xfe,0xff,0xff,0x7
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
filenameDelims__hla_3629 :.byte  0xff,0xff,0xff,0xff,0x1,0x10,0x0,0x8,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
_0e55_msg___hla_3670 :.long  str__hla_3671
_0e5e_msg___hla_3679 :.long  str__hla_3680
_0e6e_msg___hla_3695 :.long  str__hla_3696
_0e79_msg___hla_3706 :.long  str__hla_3707
_0e82_msg___hla_3715 :.long  str__hla_3716
_0e94_msg___hla_3733 :.long  str__hla_3734
_0f0a_msg___hla_3851 :.long  str__hla_3852
_1011_msg___hla_4114 :.long  str__hla_4115




  .data

        .globl    ExceptionPtr__hla_
        .globl    _VMT_table_t___hla_
        .globl    AssertionStr
        .align (2)
        .align (2)
COFFsyms__hla_3358 :.space     4
numCOFFsyms__hla_3359 :.space     4
coffSymSize__hla_3360 :.space     4
ELFsyms__hla_3361 :.space     4
numELFsyms__hla_3362 :.space     4
elfSymSize__hla_3363 :.space     4
MachoSyms__hla_3364 :.space     4
MachoSymSize__hla_3365 :.space     4
numMachoSyms__hla_3366 :.space     4
stringTable__hla_3367 :.space     4
strTblOffset__hla_3368 :.space     4
strTblSize__hla_3369 :.space     4
codeSize :.space     4
codeStart__hla_3370 :.space     4
codeEnd__hla_3371 :.space     4
numCodeRelocs :.space     4
dataSize :.space     4
dataStart__hla_3372 :.space     4
dataEnd__hla_3373 :.space     4
numDataRelocs :.space     4
bssSize :.space     4
bssStart__hla_3374 :.space     4
bssEnd__hla_3375 :.space     4
symbolTable :.space     160
equatesTable :.space     160
currentSection :.byte  0x1
verboseDebug__hla_3376 :.byte  0x0
        .align (2)
MainPgmVMT__hla_3387 :.long      QuitMain__hla_
MainPgmCoroutine__hla_3388:
        .long      MainPgmVMT__hla_3387
        .long      0x0
        .long      0x0
SaveSEHPointer__hla_3389 :.long  0x0
        .long      0x0
        .long      0x0
saveESP__hla_3390 :.space     4
lineNumber__hla_3408 :.long  0x1
tknListTail__hla_3409 :.space     4
lastTailPtr__hla_3410 :.space     4
codeListTail__hla_3411 :.space     4
dataListTail__hla_3412 :.space     4
bssListTail__hla_3413 :.space     4
end_source__hla_3414 :.space     4
start_stmt__hla_3415 :.space     4
CodeAuxSection__hla_4139:
        .long      0x0
        .word      0x0
        .word      0x0
        .long      0x0
        .long      0x1
        .byte      0x0
DataAuxSection__hla_4140:
        .long      0x0
        .word      0x0
        .word      0x0
        .long      0x0
        .long      0x2
        .byte      0x0
BssAuxSection__hla_4141:
        .long      0x0
        .word      0x0
        .word      0x0
        .long      0x0
        .long      0x3
        .byte      0x0
NULLsection__hla_4213:
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
shstrtabSection__hla_4214:
        .long      0x1
        .long      0x3
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x1
        .long      0x0
symtabSection__hla_4215:
        .long      0x0
        .long      0x2
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x3
        .long      0x0
        .long      0x4
        .long      0x10
strtabSection__hla_4216:
        .long      0x0
        .long      0x3
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x1
        .long      0x0
textSection__hla_4217:
        .long      0x0
        .long      0x1
        .long      0x6
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x4
        .long      0x0
dataSection__hla_4218:
        .long      0x0
        .long      0x1
        .long      0x3
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x4
        .long      0x0
bssSection__hla_4219:
        .long      0x0
        .long      0x8
        .long      0x3
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x4
        .long      0x0
relTextSection__hla_4220:
        .long      0x0
        .long      0x9
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x2
        .long      0x4
        .long      0x4
        .long      0x8
relDataSection__hla_4221:
        .long      0x0
        .long      0x9
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x2
        .long      0x5
        .long      0x4
        .long      0x8





