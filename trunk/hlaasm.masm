; Assembly code emitted by HLA compiler
; Version 1.102 build 18984 (prototype)
; HLA compiler written by Randall Hyde
; MASM compatible output

  if @Version lt 612
  .586p
  else
  .686p
  .mmx
  .xmm
  endif
  .model flat, syscall
  option noscoped
  option casemap:none


offset32 equ <offset flat:>

  assume fs:nothing
ExceptionPtr__hla_ equ <(dword ptr fs:[0])>







  .code


        public     _f80int
        public     _bigminInt
        public     _bigmaxInt
        public     _e80Str
        public     _bigmaxUns
        public     _bigminUns
        public     _real80to64
        public     _real80to32
        public     _BinStrToInt
        public     _strcpylc
        public     _IntToStr
        public     _lowercase
        public     _SearchHash
        public     _SearchNext
        public     _DecStrToInt
        public     _subval
        public     _sqrt80
        public     _UnsGE
        public     _UnsLT
        public     _UnsGT
        public     _UnsLE
        public     _IntLE
        public     _IntGT
        public     _IntLT
        public     _IntGE
        public     _shlval
        public     _shrval
        public     _unsf80
        public     _log1080
        public     _MakeCompAsm
        public     _negval
        public     _notval
        public     _fsub80
        public     _tan80
        public     _sin80
        public     _modval
        public     _fneg80
        public     _HexStrToInt
        public     _divval
        public     _mulval
        public     _cos80
        public     _fne80
        public     _feq80
        public     _fgt80
        public     _fle80
        public     _InRange
        public     _ceil80
        public     _atold
        public     _fmin80
        public     _fge80
        public     _flt80
        public     _fmax80
        public     _log80
        public     _fabs80
        public     _UnsToStr
        public     _fmul80
        public     _floor80
        public     _fdiv80
        public     _compactType
        public     _fadd80
        public     _addval
        public     _exp80
        externdef  _HLAmalloc:near32
        externdef  HWexcept__hla_:near32
        externdef  _HLAerror:near32
        externdef  abstract__hla_:near32
        externdef  Raise__hla_:near32
        externdef  shortDfltExcept__hla_:near32






  .data

        externdef  _int128_ste:byte
        externdef  _real32_ste:byte
        externdef  _uns8_ste:byte
        externdef  _real64_ste:byte
        externdef  _real80_ste:byte
        externdef  _zstring_ste:byte
        externdef  _lword_ste:byte
        externdef  _dword_ste:byte
        externdef  _cset_ste:byte
        externdef  _wchar_ste:byte
        externdef  _parmLookup:byte
        externdef  _int64_ste:byte
        externdef  _byte_ste:byte
        externdef  _uns128_ste:byte
        externdef  _int32_ste:byte
        externdef  _int16_ste:byte
        externdef  _char_ste:byte
        externdef  __imp__MessageBoxA@16:dword
        externdef  _qword_ste:byte
        externdef  _word_ste:byte
        externdef  _ProcGlobal:dword
        externdef  _wstring_ste:byte
        externdef  __imp__ExitProcess@4:dword
        externdef  _string_ste:byte
        externdef  _uns32_ste:byte
        externdef  _uns16_ste:byte
        externdef  _tbyte_ste:byte
        externdef  _int8_ste:byte
        externdef  _uns64_ste:byte
        externdef  _real128_ste:byte
        externdef  _boolean_ste:byte
saveESP__hla_31 dd         1 dup (?)
typeTable__hla_32 label dword
        dd         offset32 _boolean_ste
        dd         offset32 _boolean_ste
        dd         offset32 _uns8_ste
        dd         offset32 _uns16_ste
        dd         offset32 _uns32_ste
        dd         offset32 _uns64_ste
        dd         offset32 _uns128_ste
        dd         offset32 _byte_ste
        dd         offset32 _word_ste
        dd         offset32 _dword_ste
        dd         offset32 _qword_ste
        dd         offset32 _tbyte_ste
        dd         offset32 _lword_ste
        dd         offset32 _int8_ste
        dd         offset32 _int16_ste
        dd         offset32 _int32_ste
        dd         offset32 _int64_ste
        dd         offset32 _int128_ste
        dd         offset32 _char_ste
        dd         offset32 _wchar_ste
        dd         offset32 _real32_ste
        dd         offset32 _real64_ste
        dd         offset32 _real80_ste
        dd         offset32 _real128_ste
        dd         offset32 _string_ste
        dd         offset32 _zstring_ste
        dd         offset32 _wstring_ste
        dd         offset32 _cset_ste
tJmpTbl__hla_201 label dword
        dd         offset32 isBoolean__hla_173
        dd         offset32 isEnum__hla_174
        dd         offset32 isUns8__hla_175
        dd         offset32 isUns16__hla_176
        dd         offset32 isUns32__hla_177
        dd         offset32 isUns64__hla_178
        dd         offset32 isUns128__hla_179
        dd         offset32 isByte__hla_180
        dd         offset32 isWord__hla_181
        dd         offset32 isDWord__hla_182
        dd         offset32 isQWord__hla_183
        dd         offset32 isTByte__hla_184
        dd         offset32 isLWord__hla_185
        dd         offset32 isInt8__hla_186
        dd         offset32 isInt16__hla_187
        dd         offset32 isInt32__hla_188
        dd         offset32 isInt64__hla_189
        dd         offset32 isInt128__hla_190
        dd         offset32 isChar__hla_191
        dd         offset32 isWChar__hla_192
        dd         offset32 isReal32__hla_193
        dd         offset32 isReal64__hla_194
        dd         offset32 isReal80__hla_195
        dd         offset32 Failure__hla_196
        dd         offset32 isString__hla_197
        dd         offset32 isZString__hla_198
        dd         offset32 isWString__hla_199
        dd         offset32 isCset__hla_200
jmpTbl__hla_502 label dword
        dd         offset32 s__hla_250
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 s__hla_250
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 s__hla_250
        dd         offset32 Uns8Uns16__hla_252
        dd         offset32 Uns8Uns32__hla_253
        dd         offset32 Uns8Uns64__hla_254
        dd         offset32 Uns8Uns128__hla_255
        dd         offset32 Uns8Byte__hla_256
        dd         offset32 Uns8Word__hla_257
        dd         offset32 Uns8DWord__hla_258
        dd         offset32 Uns8QWord__hla_259
        dd         offset32 Uns8TByte__hla_260
        dd         offset32 Uns8LWord__hla_261
        dd         offset32 Uns8Int8__hla_262
        dd         offset32 Uns8Int16__hla_263
        dd         offset32 Uns8Int32__hla_264
        dd         offset32 Uns8Int64__hla_265
        dd         offset32 Uns8Int128__hla_266
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 UnsReal32__hla_267
        dd         offset32 UnsReal64__hla_268
        dd         offset32 UnsReal80__hla_269
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 Uns16Uns8__hla_270
        dd         offset32 s__hla_250
        dd         offset32 Uns16Uns32__hla_271
        dd         offset32 Uns16Uns64__hla_272
        dd         offset32 Uns16Uns128__hla_273
        dd         offset32 Uns16Byte__hla_274
        dd         offset32 Uns16Word__hla_275
        dd         offset32 Uns16DWord__hla_276
        dd         offset32 Uns16QWord__hla_277
        dd         offset32 Uns16TByte__hla_278
        dd         offset32 Uns16LWord__hla_279
        dd         offset32 Uns16Int8__hla_280
        dd         offset32 Uns16Int16__hla_281
        dd         offset32 Uns16Int32__hla_282
        dd         offset32 Uns16Int64__hla_283
        dd         offset32 Uns16Int128__hla_284
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 UnsReal32__hla_267
        dd         offset32 UnsReal64__hla_268
        dd         offset32 UnsReal80__hla_269
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 Uns32Uns8__hla_285
        dd         offset32 Uns32Uns16__hla_286
        dd         offset32 s__hla_250
        dd         offset32 Uns32Uns64__hla_287
        dd         offset32 Uns32Uns128__hla_288
        dd         offset32 Uns32Byte__hla_289
        dd         offset32 Uns32Word__hla_290
        dd         offset32 Uns32DWord__hla_291
        dd         offset32 Uns32QWord__hla_292
        dd         offset32 Uns32TByte__hla_293
        dd         offset32 Uns32LWord__hla_294
        dd         offset32 Uns32Int8__hla_295
        dd         offset32 Uns32Int16__hla_296
        dd         offset32 Uns32Int32__hla_297
        dd         offset32 Uns32Int64__hla_298
        dd         offset32 Uns32Int128__hla_299
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 UnsReal32__hla_267
        dd         offset32 UnsReal64__hla_268
        dd         offset32 UnsReal80__hla_269
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 Uns64Uns8__hla_300
        dd         offset32 Uns64Uns16__hla_301
        dd         offset32 Uns64Uns32__hla_302
        dd         offset32 s__hla_250
        dd         offset32 Uns64Uns128__hla_303
        dd         offset32 Uns64Byte__hla_304
        dd         offset32 Uns64Word__hla_305
        dd         offset32 Uns64DWord__hla_306
        dd         offset32 Uns64QWord__hla_307
        dd         offset32 Uns64TByte__hla_308
        dd         offset32 Uns64LWord__hla_309
        dd         offset32 Uns64Int8__hla_310
        dd         offset32 Uns64Int16__hla_311
        dd         offset32 Uns64Int32__hla_312
        dd         offset32 Uns64Int64__hla_313
        dd         offset32 Uns64Int128__hla_314
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 UnsReal32__hla_267
        dd         offset32 UnsReal64__hla_268
        dd         offset32 UnsReal80__hla_269
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 Uns128Uns8__hla_315
        dd         offset32 Uns128Uns16__hla_316
        dd         offset32 Uns128Uns32__hla_317
        dd         offset32 Uns128Uns64__hla_318
        dd         offset32 s__hla_250
        dd         offset32 Uns64Byte__hla_304
        dd         offset32 Uns64Word__hla_305
        dd         offset32 Uns64DWord__hla_306
        dd         offset32 Uns64QWord__hla_307
        dd         offset32 Uns64TByte__hla_308
        dd         offset32 Uns64LWord__hla_309
        dd         offset32 Uns64Int8__hla_310
        dd         offset32 Uns64Int16__hla_311
        dd         offset32 Uns64Int32__hla_312
        dd         offset32 Uns64Int64__hla_313
        dd         offset32 Uns64Int128__hla_314
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 UnsReal32__hla_267
        dd         offset32 UnsReal64__hla_268
        dd         offset32 UnsReal80__hla_269
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 ByteUns8__hla_319
        dd         offset32 ByteUns16__hla_320
        dd         offset32 ByteUns32__hla_321
        dd         offset32 ByteUns64__hla_322
        dd         offset32 ByteUns128__hla_323
        dd         offset32 s__hla_250
        dd         offset32 ByteWord__hla_324
        dd         offset32 ByteDWord__hla_325
        dd         offset32 ByteQWord__hla_326
        dd         offset32 ByteTByte__hla_327
        dd         offset32 ByteLWord__hla_328
        dd         offset32 ByteInt8__hla_329
        dd         offset32 ByteInt16__hla_330
        dd         offset32 ByteInt32__hla_331
        dd         offset32 ByteInt64__hla_332
        dd         offset32 ByteInt128__hla_333
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 UnsReal32__hla_267
        dd         offset32 UnsReal64__hla_268
        dd         offset32 UnsReal80__hla_269
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 WordUns8__hla_334
        dd         offset32 WordUns16__hla_335
        dd         offset32 WordUns32__hla_336
        dd         offset32 WordUns64__hla_337
        dd         offset32 WordUns128__hla_338
        dd         offset32 WordByte__hla_339
        dd         offset32 s__hla_250
        dd         offset32 WordDWord__hla_340
        dd         offset32 WordQWord__hla_341
        dd         offset32 WordTByte__hla_342
        dd         offset32 WordLWord__hla_343
        dd         offset32 WordInt8__hla_344
        dd         offset32 WordInt16__hla_345
        dd         offset32 WordInt32__hla_346
        dd         offset32 WordInt64__hla_347
        dd         offset32 WordInt128__hla_348
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 UnsReal32__hla_267
        dd         offset32 UnsReal64__hla_268
        dd         offset32 UnsReal80__hla_269
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 DWordUns8__hla_349
        dd         offset32 DWordUns16__hla_350
        dd         offset32 DWordUns32__hla_351
        dd         offset32 DWordUns64__hla_352
        dd         offset32 DWordUns128__hla_353
        dd         offset32 DWordByte__hla_354
        dd         offset32 DWordWord__hla_355
        dd         offset32 s__hla_250
        dd         offset32 DWordQWord__hla_356
        dd         offset32 DWordTByte__hla_357
        dd         offset32 DWordLWord__hla_358
        dd         offset32 DWordInt8__hla_359
        dd         offset32 DWordInt16__hla_360
        dd         offset32 DWordInt32__hla_361
        dd         offset32 DWordInt64__hla_362
        dd         offset32 DWordInt128__hla_363
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 UnsReal32__hla_267
        dd         offset32 UnsReal64__hla_268
        dd         offset32 UnsReal80__hla_269
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 QWordUns8__hla_364
        dd         offset32 QWordUns16__hla_365
        dd         offset32 QWordUns32__hla_366
        dd         offset32 QWordUns64__hla_367
        dd         offset32 QWordUns128__hla_368
        dd         offset32 QWordByte__hla_369
        dd         offset32 QWordWord__hla_370
        dd         offset32 QWordDWord__hla_371
        dd         offset32 s__hla_250
        dd         offset32 QWordTByte__hla_372
        dd         offset32 QWordLWord__hla_373
        dd         offset32 QWordInt8__hla_374
        dd         offset32 QWordInt16__hla_375
        dd         offset32 QWordInt32__hla_376
        dd         offset32 QWordInt64__hla_377
        dd         offset32 QWordInt128__hla_378
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 UnsReal32__hla_267
        dd         offset32 UnsReal64__hla_268
        dd         offset32 UnsReal80__hla_269
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 TByteUns8__hla_379
        dd         offset32 TByteUns16__hla_380
        dd         offset32 TByteUns32__hla_381
        dd         offset32 TByteUns64__hla_382
        dd         offset32 TByteUns128__hla_383
        dd         offset32 TByteByte__hla_384
        dd         offset32 TByteWord__hla_385
        dd         offset32 TByteDWord__hla_386
        dd         offset32 TByteQWord__hla_387
        dd         offset32 s__hla_250
        dd         offset32 TByteLWord__hla_388
        dd         offset32 TByteInt8__hla_389
        dd         offset32 TByteInt16__hla_390
        dd         offset32 TByteInt32__hla_391
        dd         offset32 TByteInt64__hla_392
        dd         offset32 TByteInt128__hla_393
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 UnsReal32__hla_267
        dd         offset32 UnsReal64__hla_268
        dd         offset32 UnsReal80__hla_269
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 LWordUns8__hla_394
        dd         offset32 LWordUns16__hla_395
        dd         offset32 LWordUns32__hla_396
        dd         offset32 LWordUns64__hla_397
        dd         offset32 LWordUns128__hla_398
        dd         offset32 LWordByte__hla_399
        dd         offset32 LWordWord__hla_400
        dd         offset32 LWordDWord__hla_401
        dd         offset32 LWordQWord__hla_402
        dd         offset32 LWordTByte__hla_403
        dd         offset32 s__hla_250
        dd         offset32 LWordInt8__hla_404
        dd         offset32 LWordInt16__hla_405
        dd         offset32 LWordInt32__hla_406
        dd         offset32 LWordInt64__hla_407
        dd         offset32 LWordInt128__hla_408
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 UnsReal32__hla_267
        dd         offset32 UnsReal64__hla_268
        dd         offset32 UnsReal80__hla_269
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 Int8Uns8__hla_409
        dd         offset32 Int8Uns16__hla_410
        dd         offset32 Int8Uns32__hla_411
        dd         offset32 Int8Uns64__hla_412
        dd         offset32 Int8Uns128__hla_413
        dd         offset32 Int8Byte__hla_414
        dd         offset32 Int8Word__hla_415
        dd         offset32 Int8DWord__hla_416
        dd         offset32 Int8QWord__hla_417
        dd         offset32 Int8TByte__hla_418
        dd         offset32 Int8LWord__hla_419
        dd         offset32 s__hla_250
        dd         offset32 Int8Int16__hla_420
        dd         offset32 Int8Int32__hla_421
        dd         offset32 Int8Int64__hla_422
        dd         offset32 Int8Int128__hla_423
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 IntReal32__hla_424
        dd         offset32 IntReal64__hla_425
        dd         offset32 IntReal80__hla_426
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 Int16Uns8__hla_427
        dd         offset32 Int16Uns16__hla_428
        dd         offset32 Int16Uns32__hla_429
        dd         offset32 Int16Uns64__hla_430
        dd         offset32 Int16Uns128__hla_431
        dd         offset32 Int16Byte__hla_432
        dd         offset32 Int16Word__hla_433
        dd         offset32 Int16DWord__hla_434
        dd         offset32 Int16QWord__hla_435
        dd         offset32 Int16TByte__hla_436
        dd         offset32 Int16LWord__hla_437
        dd         offset32 Int16Int8__hla_438
        dd         offset32 s__hla_250
        dd         offset32 Int16Int32__hla_439
        dd         offset32 Int16Int64__hla_440
        dd         offset32 Int16Int128__hla_441
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 IntReal32__hla_424
        dd         offset32 IntReal64__hla_425
        dd         offset32 IntReal80__hla_426
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 Int32Uns8__hla_442
        dd         offset32 Int32Uns16__hla_443
        dd         offset32 Int32Uns32__hla_444
        dd         offset32 Int32Uns64__hla_445
        dd         offset32 Int32Uns128__hla_446
        dd         offset32 Int32Byte__hla_447
        dd         offset32 Int32Word__hla_448
        dd         offset32 Int32DWord__hla_449
        dd         offset32 Int32QWord__hla_450
        dd         offset32 Int32TByte__hla_451
        dd         offset32 Int32LWord__hla_452
        dd         offset32 Int32Int8__hla_453
        dd         offset32 Int32Int16__hla_454
        dd         offset32 s__hla_250
        dd         offset32 Int32Int64__hla_455
        dd         offset32 Int32Int128__hla_456
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 IntReal32__hla_424
        dd         offset32 IntReal64__hla_425
        dd         offset32 IntReal80__hla_426
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 Int64Uns8__hla_457
        dd         offset32 Int64Uns16__hla_458
        dd         offset32 Int64Uns32__hla_459
        dd         offset32 Int64Uns64__hla_460
        dd         offset32 Int64Uns128__hla_461
        dd         offset32 Int64Byte__hla_462
        dd         offset32 Int64Word__hla_463
        dd         offset32 Int64DWord__hla_464
        dd         offset32 Int64QWord__hla_465
        dd         offset32 Int64TByte__hla_466
        dd         offset32 Int64LWord__hla_467
        dd         offset32 Int64Int8__hla_468
        dd         offset32 Int64Int16__hla_469
        dd         offset32 Int64Int32__hla_470
        dd         offset32 s__hla_250
        dd         offset32 Int64Int128__hla_471
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 IntReal32__hla_424
        dd         offset32 IntReal64__hla_425
        dd         offset32 IntReal80__hla_426
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 Int128Uns8__hla_472
        dd         offset32 Int128Uns16__hla_473
        dd         offset32 Int128Uns32__hla_474
        dd         offset32 Int128Uns64__hla_475
        dd         offset32 Int128Uns128__hla_476
        dd         offset32 Int128Byte__hla_477
        dd         offset32 Int128Word__hla_478
        dd         offset32 Int128DWord__hla_479
        dd         offset32 Int128QWord__hla_480
        dd         offset32 Int128TByte__hla_481
        dd         offset32 Int128LWord__hla_482
        dd         offset32 Int128Int8__hla_483
        dd         offset32 Int128Int16__hla_484
        dd         offset32 Int128Int32__hla_485
        dd         offset32 Int128Int64__hla_486
        dd         offset32 s__hla_250
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 IntReal32__hla_424
        dd         offset32 IntReal64__hla_425
        dd         offset32 IntReal80__hla_426
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 s__hla_250
        dd         offset32 CharWChar__hla_487
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 CharString__hla_488
        dd         offset32 CharString__hla_488
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 WCharChar__hla_489
        dd         offset32 s__hla_250
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 Real32Uns__hla_490
        dd         offset32 Real32Uns__hla_490
        dd         offset32 Real32Uns__hla_490
        dd         offset32 Real32Uns__hla_490
        dd         offset32 Real32Uns__hla_490
        dd         offset32 Real32Uns__hla_490
        dd         offset32 Real32Uns__hla_490
        dd         offset32 Real32Uns__hla_490
        dd         offset32 Real32Uns__hla_490
        dd         offset32 Real32Uns__hla_490
        dd         offset32 Real32Uns__hla_490
        dd         offset32 Real32Int__hla_491
        dd         offset32 Real32Int__hla_491
        dd         offset32 Real32Int__hla_491
        dd         offset32 Real32Int__hla_491
        dd         offset32 Real32Int__hla_491
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 s__hla_250
        dd         offset32 Real3264__hla_492
        dd         offset32 Real3280__hla_493
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 Real64Uns__hla_494
        dd         offset32 Real64Uns__hla_494
        dd         offset32 Real64Uns__hla_494
        dd         offset32 Real64Uns__hla_494
        dd         offset32 Real64Uns__hla_494
        dd         offset32 Real64Uns__hla_494
        dd         offset32 Real64Uns__hla_494
        dd         offset32 Real64Uns__hla_494
        dd         offset32 Real64Uns__hla_494
        dd         offset32 Real64Uns__hla_494
        dd         offset32 Real64Uns__hla_494
        dd         offset32 Real64Int__hla_495
        dd         offset32 Real64Int__hla_495
        dd         offset32 Real64Int__hla_495
        dd         offset32 Real64Int__hla_495
        dd         offset32 Real64Int__hla_495
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 Real6432__hla_496
        dd         offset32 s__hla_250
        dd         offset32 Real6480__hla_497
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 Real80Uns__hla_498
        dd         offset32 Real80Uns__hla_498
        dd         offset32 Real80Uns__hla_498
        dd         offset32 Real80Uns__hla_498
        dd         offset32 Real80Uns__hla_498
        dd         offset32 Real80Uns__hla_498
        dd         offset32 Real80Uns__hla_498
        dd         offset32 Real80Uns__hla_498
        dd         offset32 Real80Uns__hla_498
        dd         offset32 Real80Uns__hla_498
        dd         offset32 Real80Uns__hla_498
        dd         offset32 Real80Int__hla_499
        dd         offset32 Real80Int__hla_499
        dd         offset32 Real80Int__hla_499
        dd         offset32 Real80Int__hla_499
        dd         offset32 Real80Int__hla_499
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 Real8032__hla_500
        dd         offset32 Real6432__hla_496
        dd         offset32 s__hla_250
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 s__hla_250
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 StringChar__hla_501
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 s__hla_250
        dd         offset32 s__hla_250
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 StringChar__hla_501
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 x__hla_251
        dd         offset32 s__hla_250
        dd         offset32 s__hla_250
ten__hla_805 dd     0ah
fcw__hla_826 dw     0fffh
fcwSave__hla_829 dw         1 dup (?)
fcw__hla_830 dw         1 dup (?)
fcwSave__hla_837 dw         1 dup (?)
fcw__hla_838 dw         1 dup (?)
SaveCW__hla_842 dw         1 dup (?)
MaskedCW__hla_843 dw         1 dup (?)
PotTbl__hla_844 label tbyte
        dt         07525c46052028a20979bh
        dt         05a929e8b3b5dc53d5de5h
        dt         04d48c976758681750c17h
        dt         046a3e319a0aea60e91c7h
        dt         04351aa7eebfb9df9de8eh
        dt         041a893ba47c980e98ce0h
        dt         040d3c2781f49ffcfa6d5h
        dt         040699dc5ada82b70b59eh
        dt         040348e1bc9bf04000000h
        dt         04019bebc200000000000h
        dt         0400c9c40000000000000h
        dt         04005c800000000000000h
        dt         04002a000000000000000h
        dt         03fff8000000000000000h
Delimiters__hla_845 db     01h,026h,00h,00h,01h,010h,00h,0ch,00h,00h,00h,00h,00h,00h,00h,00h
TenTo17__hla_898 label tbyte
        dt         04037b1a2bc2ec5000000h
TenTo16__hla_899 label tbyte
        dt         040348e1bc9bf04000000h
OneE10__hla_900 label tbyte
        dt         040209502f90000000000h
OneEm10__hla_901 label tbyte
        dt         03fdddbe6fecebdedd5bfh
Ten__hla_902 label tbyte
        dt         04002a000000000000000h
FiveEm18__hla_903 label tbyte
        dt         03fc5b877aa3236a4b464h
temp__hla_904 dq         1 dup (?)
Digits__hla_923 db         32 dup (?)
Exponent__hla_924 dd         1 dup (?)
Sign__hla_925 db         1 dup (?)




  .code


        align      (4)
len__hla_515 dd         038h
        dd         038h
str__hla_515 label byte
 db "Unsigned value is out of range, cannot convert to real32"
 db 0

 db 0
 db 0
 db 0

        align      (4)
len__hla_516 dd         0ah
        dd         0ah
str__hla_516 label byte
 db "hlaasm.hla"
 db 0

 db 0

        align      (4)
len__hla_522 dd         038h
        dd         038h
str__hla_522 label byte
 db "Unsigned value is out of range, cannot convert to real64"
 db 0

 db 0
 db 0
 db 0

        align      (4)
len__hla_535 dd         038h
        dd         038h
str__hla_535 label byte
 db "Unsigned value is out of range, cannot convert to real80"
 db 0

 db 0
 db 0
 db 0

        align      (4)
len__hla_617 dd         029h
        dd         029h
str__hla_617 label byte
 db "'-' operand must be numeric or cset value"
 db 0

 db 0
 db 0
jmpTbl__hla_592 label dword
        dword      offset32 (case__hla_604+0)
        dword      offset32 (case__hla_606+0)
        dword      offset32 (case__hla_608+0)
        dword      offset32 (case__hla_610+0)
        dword      offset32 (case__hla_612+0)
        dword      offset32 (case__hla_594+0)
        dword      offset32 (case__hla_596+0)
        dword      offset32 (case__hla_598+0)
        dword      offset32 (case__hla_600+0)
        dword      offset32 (case__hla_601+0)
        dword      offset32 (case__hla_603+0)
        dword      offset32 (case__hla_593+0)
        dword      offset32 (case__hla_595+0)
        dword      offset32 (case__hla_597+0)
        dword      offset32 (case__hla_599+0)
        dword      offset32 (case__hla_602+0)
        dword      offset32 (default__hla_592+0)
        dword      offset32 (default__hla_592+0)
        dword      offset32 (case__hla_613+0)
        dword      offset32 (case__hla_614+0)
        dword      offset32 (case__hla_615+0)
        dword      offset32 (default__hla_592+0)
        dword      offset32 (default__hla_592+0)
        dword      offset32 (default__hla_592+0)
        dword      offset32 (default__hla_592+0)
        dword      offset32 (case__hla_616+0)

        align      (4)
len__hla_636 dd         02ch
        dd         02ch
str__hla_636 label byte
 db "'!' operand must be boolean or integer value"
 db 0

 db 0
 db 0
 db 0
jmpTbl__hla_619 label dword
        dword      offset32 (case__hla_620+0)
        dword      offset32 (default__hla_619+0)
        dword      offset32 (case__hla_623+0)
        dword      offset32 (case__hla_626+0)
        dword      offset32 (case__hla_627+0)
        dword      offset32 (case__hla_630+0)
        dword      offset32 (case__hla_635+0)
        dword      offset32 (case__hla_621+0)
        dword      offset32 (case__hla_624+0)
        dword      offset32 (case__hla_628+0)
        dword      offset32 (case__hla_631+0)
        dword      offset32 (case__hla_633+0)
        dword      offset32 (case__hla_635+0)
        dword      offset32 (case__hla_621+0)
        dword      offset32 (case__hla_624+0)
        dword      offset32 (case__hla_628+0)
        dword      offset32 (case__hla_631+0)
        dword      offset32 (case__hla_635+0)
jmpTbl__hla_637 label dword
        dword      offset32 (case__hla_638+0)
        dword      offset32 (case__hla_644+0)
        dword      offset32 (case__hla_651+0)
        dword      offset32 (case__hla_656+0)
        dword      offset32 (case__hla_663+0)
        dword      offset32 (case__hla_642+0)
        dword      offset32 (case__hla_648+0)
        dword      offset32 (case__hla_654+0)
        dword      offset32 (case__hla_659+0)
        dword      offset32 (case__hla_661+0)
        dword      offset32 (case__hla_664+0)
        dword      offset32 (case__hla_640+0)
        dword      offset32 (case__hla_647+0)
        dword      offset32 (case__hla_653+0)
        dword      offset32 (case__hla_658+0)
        dword      offset32 (case__hla_665+0)
        dword      offset32 (default__hla_637+0)
        dword      offset32 (default__hla_637+0)
        dword      offset32 (case__hla_666+0)
        dword      offset32 (case__hla_667+0)
        dword      offset32 (case__hla_668+0)
        dword      offset32 (default__hla_637+0)
        dword      offset32 (default__hla_637+0)
        dword      offset32 (default__hla_637+0)
        dword      offset32 (default__hla_637+0)
        dword      offset32 (case__hla_669+0)
jmpTbl__hla_670 label dword
        dword      offset32 (case__hla_671+0)
        dword      offset32 (case__hla_675+0)
        dword      offset32 (case__hla_679+0)
        dword      offset32 (case__hla_683+0)
        dword      offset32 (case__hla_688+0)
        dword      offset32 (case__hla_674+0)
        dword      offset32 (case__hla_678+0)
        dword      offset32 (case__hla_682+0)
        dword      offset32 (case__hla_686+0)
        dword      offset32 (case__hla_687+0)
        dword      offset32 (case__hla_689+0)
        dword      offset32 (case__hla_673+0)
        dword      offset32 (case__hla_677+0)
        dword      offset32 (case__hla_681+0)
        dword      offset32 (case__hla_685+0)
        dword      offset32 (case__hla_690+0)
        dword      offset32 (default__hla_670+0)
        dword      offset32 (default__hla_670+0)
        dword      offset32 (case__hla_691+0)
        dword      offset32 (case__hla_692+0)
        dword      offset32 (case__hla_693+0)
        dword      offset32 (default__hla_670+0)
        dword      offset32 (default__hla_670+0)
        dword      offset32 (default__hla_670+0)
        dword      offset32 (default__hla_670+0)
        dword      offset32 (case__hla_694+0)
jmpTbl__hla_696 label dword
        dword      offset32 (case__hla_697+0)
        dword      offset32 (case__hla_697+0)
        dword      offset32 (case__hla_697+0)
        dword      offset32 (case__hla_697+0)
        dword      offset32 (case__hla_697+0)
        dword      offset32 (case__hla_703+0)
        dword      offset32 (case__hla_703+0)
        dword      offset32 (case__hla_703+0)
        dword      offset32 (case__hla_703+0)
        dword      offset32 (case__hla_703+0)
        dword      offset32 (case__hla_703+0)
        dword      offset32 (case__hla_710+0)
        dword      offset32 (case__hla_710+0)
        dword      offset32 (case__hla_710+0)
        dword      offset32 (case__hla_710+0)
        dword      offset32 (case__hla_710+0)
        dword      offset32 (default__hla_696+0)
        dword      offset32 (default__hla_696+0)
        dword      offset32 (case__hla_719+0)
        dword      offset32 (case__hla_720+0)
        dword      offset32 (case__hla_721+0)
        dword      offset32 (default__hla_696+0)
        dword      offset32 (default__hla_696+0)
        dword      offset32 (default__hla_696+0)
        dword      offset32 (default__hla_696+0)
        dword      offset32 (case__hla_722+0)

        align      (4)
len__hla_729 dd         01ah
        dd         01ah
str__hla_729 label byte
 db "Attempted division by zero"
 db 0

 db 0
jmpTbl__hla_726 label dword
        dword      offset32 (case__hla_727+0)
        dword      offset32 (case__hla_727+0)
        dword      offset32 (case__hla_727+0)
        dword      offset32 (case__hla_727+0)
        dword      offset32 (case__hla_727+0)
        dword      offset32 (case__hla_735+0)
        dword      offset32 (case__hla_735+0)
        dword      offset32 (case__hla_735+0)
        dword      offset32 (case__hla_735+0)
        dword      offset32 (case__hla_735+0)
        dword      offset32 (case__hla_735+0)
        dword      offset32 (case__hla_743+0)
        dword      offset32 (case__hla_743+0)
        dword      offset32 (case__hla_743+0)
        dword      offset32 (case__hla_743+0)
        dword      offset32 (case__hla_743+0)
        dword      offset32 (default__hla_726+0)
        dword      offset32 (default__hla_726+0)
        dword      offset32 (case__hla_753+0)
        dword      offset32 (case__hla_755+0)
        dword      offset32 (case__hla_758+0)
jmpTbl__hla_762 label dword
        dword      offset32 (case__hla_763+0)
        dword      offset32 (case__hla_763+0)
        dword      offset32 (case__hla_763+0)
        dword      offset32 (case__hla_763+0)
        dword      offset32 (case__hla_763+0)
        dword      offset32 (case__hla_770+0)
        dword      offset32 (case__hla_770+0)
        dword      offset32 (case__hla_770+0)
        dword      offset32 (case__hla_770+0)
        dword      offset32 (case__hla_770+0)
        dword      offset32 (case__hla_770+0)
        dword      offset32 (case__hla_778+0)
        dword      offset32 (case__hla_778+0)
        dword      offset32 (case__hla_778+0)
        dword      offset32 (case__hla_778+0)
        dword      offset32 (case__hla_778+0)

        align      (4)
len__hla_811 dd         025h
        dd         025h
str__hla_811 label byte
 db "Decimal integer constant is too large"
 db 0

 db 0
 db 0

        align      (4)
len__hla_817 dd         01ch
        dd         01ch
str__hla_817 label byte
 db "Binary constant is too large"
 db 0

 db 0
 db 0
 db 0

        align      (4)
len__hla_824 dd         021h
        dd         021h
str__hla_824 label byte
 db "Hexadecimal constant is too large"
 db 0

 db 0
 db 0
jmpTbl__hla_109 label byte
        dd         offset32 NextInList__hla_110
        dd         offset32 ecx1__hla_111
        dd         offset32 ecx2__hla_112
        dd         offset32 ecx3__hla_113
        dd         offset32 ecx4__hla_114
        dd         offset32 ecx5__hla_115
        dd         offset32 ecx6__hla_116
        dd         offset32 ecx7__hla_117
        dd         offset32 ecx8__hla_118
        dd         offset32 ecx9__hla_119
        dd         offset32 ecx10__hla_120
        dd         offset32 ecx11__hla_121
        dd         offset32 ecx12__hla_122
        dd         offset32 ecx13__hla_123
        dd         offset32 ecx14__hla_124
        dd         offset32 ecx15__hla_125
        dd         offset32 ecx16__hla_126
        dd         offset32 ecx17__hla_127
        dd         offset32 ecx18__hla_128
        dd         offset32 ecx19__hla_129
        dd         offset32 ecx20__hla_130
        dd         offset32 ecx21__hla_131
        dd         offset32 ecx22__hla_132
        dd         offset32 ecx23__hla_133
        dd         offset32 ecx24__hla_134
        dd         offset32 ecx25__hla_135
        dd         offset32 ecx26__hla_136
        dd         offset32 ecx27__hla_137
        dd         offset32 ecx28__hla_138
_lowercase proc near32
        mov        edx, [esp+4] 
        mov        al, 32 

lcLoop__hla_100:
        inc        edx
        or         [edx-1], al 
        cmp        al, [edx-1] 
        jne        lcLoop__hla_100
        mov        byte ptr [edx-1], 0 
        mov        eax, [esp+4] 
        ret
x_lowercase:
_lowercase endp

_SearchHash proc near32
        push        ebx
        push        esi
        mov        ebx, [esp+12] 
        test       ebx, ebx 
        jz         failure__hla_101
        mov        edx, [esp+16] 

whileLp__hla_102:
        mov        ecx, [esp+20] 
        cmp        ecx, dword ptr [ebx+16] 
        jne        NextInHashList__hla_103
        mov        esi, dword ptr [ebx+8] 
        jmp        continue__hla_104
while__hla_104:
        sub        ecx, 4 
        mov        eax, [ecx+edx*1] 
        cmp        eax, [ecx+esi*1] 
        jne        NextInHashList__hla_103
continue__hla_104:
        cmp        ecx, 4 
        jae        while__hla_104
exitloop__hla_104:

        cmp        ecx, 2 
        jb         oneOrZero__hla_106
        ja         three__hla_107
        mov        ax, [edx] 
        cmp        ax, [esi] 
        jne        NextInHashList__hla_103
        mov        eax, ebx 
        pop        esi
        pop        ebx
        ret

three__hla_107:
        mov        ax, [edx] 
        cmp        ax, [esi] 
        jne        NextInHashList__hla_103
        mov        al, [edx+2] 
        cmp        al, [esi+2] 
        jne        NextInHashList__hla_103

success__hla_108:
        mov        eax, ebx 
        pop        esi
        pop        ebx
        ret

oneOrZero__hla_106:
        test       ecx, ecx 
        jz         success__hla_108
        mov        al, [edx] 
        cmp        al, [esi] 
        jne        NextInHashList__hla_103
        mov        eax, ebx 
        pop        esi
        pop        ebx
        ret

NextInHashList__hla_103:
        mov        ebx, dword ptr [ebx+4] 
        test       ebx, ebx 
        jnz        whileLp__hla_102

failure__hla_101:
        pop        esi
        pop        ebx
        xor        eax, eax 
        ret
x_SearchHash:
_SearchHash endp

_SearchNext proc near32
        push        ebx
        push        esi
        mov        ebx, [esp+12] 
        test       ebx, ebx 
        jz         failure__hla_139
        mov        edx, [esp+16] 

whileLp__hla_140:
        mov        ecx, [esp+20] 
        cmp        ecx, dword ptr [ebx+16] 
        jne        NextInList__hla_110
        mov        esi, dword ptr [ebx+8] 
        cmp        ecx, 28 
        jae        ECXGT28__hla_141
        dec        ecx
        jmp        dword ptr jmpTbl__hla_109[ecx*4]

ecx1__hla_111:
        mov        al, [edx] 
        cmp        al, [esi] 
        jne        NextInList__hla_110
        mov        eax, ebx 
        pop        esi
        pop        ebx
        ret

ecx2__hla_112:
        mov        ax, [edx] 
        cmp        ax, [esi] 
        jne        NextInList__hla_110
        mov        eax, ebx 
        pop        esi
        pop        ebx
        ret

ecx3__hla_113:

ecx4__hla_114:
        mov        eax, [edx] 
        cmp        eax, [esi] 
        jne        NextInList__hla_110
        mov        eax, ebx 
        pop        esi
        pop        ebx
        ret

ecx5__hla_115:
        mov        eax, [edx] 
        cmp        eax, [esi] 
        jne        NextInList__hla_110
        mov        al, [edx+4] 
        cmp        al, [esi+4] 
        jne        NextInList__hla_110
        mov        eax, ebx 
        pop        esi
        pop        ebx
        ret

ecx6__hla_116:
        mov        eax, [edx] 
        cmp        eax, [esi] 
        jne        NextInList__hla_110
        mov        ax, [edx+4] 
        cmp        ax, [esi+4] 
        jne        NextInList__hla_110
        mov        eax, ebx 
        pop        esi
        pop        ebx
        ret

ecx7__hla_117:

ecx8__hla_118:
        mov        eax, [edx] 
        cmp        eax, [esi] 
        jne        NextInList__hla_110
        mov        eax, [edx+4] 
        cmp        eax, [esi+4] 
        jne        NextInList__hla_110
        mov        eax, ebx 
        pop        esi
        pop        ebx
        ret

ecx9__hla_119:
        mov        eax, [edx] 
        cmp        eax, [esi] 
        jne        NextInList__hla_110
        mov        eax, [edx+4] 
        cmp        eax, [esi+4] 
        jne        NextInList__hla_110
        mov        al, [edx+8] 
        cmp        al, [esi+8] 
        jne        NextInList__hla_110
        mov        eax, ebx 
        pop        esi
        pop        ebx
        ret

ecx10__hla_120:
        mov        eax, [edx] 
        cmp        eax, [esi] 
        jne        NextInList__hla_110
        mov        eax, [edx+4] 
        cmp        eax, [esi+4] 
        jne        NextInList__hla_110
        mov        ax, [edx+8] 
        cmp        ax, [esi+8] 
        jne        NextInList__hla_110
        mov        eax, ebx 
        pop        esi
        pop        ebx
        ret

ecx11__hla_121:

ecx12__hla_122:
        mov        eax, [edx] 
        cmp        eax, [esi] 
        jne        NextInList__hla_110
        mov        eax, [edx+4] 
        cmp        eax, [esi+4] 
        jne        NextInList__hla_110
        mov        eax, [edx+8] 
        cmp        eax, [esi+8] 
        jne        NextInList__hla_110
        mov        eax, ebx 
        pop        esi
        pop        ebx
        ret

ecx13__hla_123:
        mov        eax, [edx] 
        cmp        eax, [esi] 
        jne        NextInList__hla_110
        mov        eax, [edx+4] 
        cmp        eax, [esi+4] 
        jne        NextInList__hla_110
        mov        eax, [edx+8] 
        cmp        eax, [esi+8] 
        jne        NextInList__hla_110
        mov        al, [edx+12] 
        cmp        al, [esi+12] 
        jne        NextInList__hla_110
        mov        eax, ebx 
        pop        esi
        pop        ebx
        ret

ecx14__hla_124:
        mov        eax, [edx] 
        cmp        eax, [esi] 
        jne        NextInList__hla_110
        mov        eax, [edx+4] 
        cmp        eax, [esi+4] 
        jne        NextInList__hla_110
        mov        eax, [edx+8] 
        cmp        eax, [esi+8] 
        jne        NextInList__hla_110
        mov        ax, [edx+12] 
        cmp        ax, [esi+12] 
        jne        NextInList__hla_110
        mov        eax, ebx 
        pop        esi
        pop        ebx
        ret

ecx15__hla_125:

ecx16__hla_126:
        mov        eax, [edx] 
        cmp        eax, [esi] 
        jne        NextInList__hla_110
        mov        eax, [edx+4] 
        cmp        eax, [esi+4] 
        jne        NextInList__hla_110
        mov        eax, [edx+8] 
        cmp        eax, [esi+8] 
        jne        NextInList__hla_110
        mov        eax, [edx+12] 
        cmp        eax, [esi+12] 
        jne        NextInList__hla_110
        mov        eax, ebx 
        pop        esi
        pop        ebx
        ret

ecx17__hla_127:
        mov        eax, [edx] 
        cmp        eax, [esi] 
        jne        NextInList__hla_110
        mov        eax, [edx+4] 
        cmp        eax, [esi+4] 
        jne        NextInList__hla_110
        mov        eax, [edx+8] 
        cmp        eax, [esi+8] 
        jne        NextInList__hla_110
        mov        eax, [edx+12] 
        cmp        eax, [esi+12] 
        jne        NextInList__hla_110
        mov        al, [edx+16] 
        cmp        al, [esi+16] 
        jne        NextInList__hla_110
        mov        eax, ebx 
        pop        esi
        pop        ebx
        ret

ecx18__hla_128:
        mov        eax, [edx] 
        cmp        eax, [esi] 
        jne        NextInList__hla_110
        mov        eax, [edx+4] 
        cmp        eax, [esi+4] 
        jne        NextInList__hla_110
        mov        eax, [edx+8] 
        cmp        eax, [esi+8] 
        jne        NextInList__hla_110
        mov        eax, [edx+12] 
        cmp        eax, [esi+12] 
        jne        NextInList__hla_110
        mov        ax, [edx+16] 
        cmp        ax, [esi+16] 
        jne        NextInList__hla_110
        mov        eax, ebx 
        pop        esi
        pop        ebx
        ret

ecx19__hla_129:

ecx20__hla_130:
        mov        eax, [edx] 
        cmp        eax, [esi] 
        jne        NextInList__hla_110
        mov        eax, [edx+4] 
        cmp        eax, [esi+4] 
        jne        NextInList__hla_110
        mov        eax, [edx+8] 
        cmp        eax, [esi+8] 
        jne        NextInList__hla_110
        mov        eax, [edx+12] 
        cmp        eax, [esi+12] 
        jne        NextInList__hla_110
        mov        eax, [edx+16] 
        cmp        eax, [esi+16] 
        jne        NextInList__hla_110
        mov        eax, ebx 
        pop        esi
        pop        ebx
        ret

ecx21__hla_131:
        mov        eax, [edx] 
        cmp        eax, [esi] 
        jne        NextInList__hla_110
        mov        eax, [edx+4] 
        cmp        eax, [esi+4] 
        jne        NextInList__hla_110
        mov        eax, [edx+8] 
        cmp        eax, [esi+8] 
        jne        NextInList__hla_110
        mov        eax, [edx+12] 
        cmp        eax, [esi+12] 
        jne        NextInList__hla_110
        mov        eax, [edx+16] 
        cmp        eax, [esi+16] 
        jne        NextInList__hla_110
        mov        al, [edx+20] 
        cmp        al, [esi+20] 
        jne        NextInList__hla_110
        mov        eax, ebx 
        pop        esi
        pop        ebx
        ret

ecx22__hla_132:
        mov        eax, [edx] 
        cmp        eax, [esi] 
        jne        NextInList__hla_110
        mov        eax, [edx+4] 
        cmp        eax, [esi+4] 
        jne        NextInList__hla_110
        mov        eax, [edx+8] 
        cmp        eax, [esi+8] 
        jne        NextInList__hla_110
        mov        eax, [edx+12] 
        cmp        eax, [esi+12] 
        jne        NextInList__hla_110
        mov        eax, [edx+16] 
        cmp        eax, [esi+16] 
        jne        NextInList__hla_110
        mov        ax, [edx+20] 
        cmp        ax, [esi+20] 
        jne        NextInList__hla_110
        mov        eax, ebx 
        pop        esi
        pop        ebx
        ret

ecx23__hla_133:

ecx24__hla_134:
        mov        eax, [edx] 
        cmp        eax, [esi] 
        jne        NextInList__hla_110
        mov        eax, [edx+4] 
        cmp        eax, [esi+4] 
        jne        NextInList__hla_110
        mov        eax, [edx+8] 
        cmp        eax, [esi+8] 
        jne        NextInList__hla_110
        mov        eax, [edx+12] 
        cmp        eax, [esi+12] 
        jne        NextInList__hla_110
        mov        eax, [edx+16] 
        cmp        eax, [esi+16] 
        jne        NextInList__hla_110
        mov        eax, [edx+20] 
        cmp        eax, [esi+20] 
        jne        NextInList__hla_110
        mov        eax, ebx 
        pop        esi
        pop        ebx
        ret

ecx25__hla_135:
        mov        eax, [edx] 
        cmp        eax, [esi] 
        jne        NextInList__hla_110
        mov        eax, [edx+4] 
        cmp        eax, [esi+4] 
        jne        NextInList__hla_110
        mov        eax, [edx+8] 
        cmp        eax, [esi+8] 
        jne        NextInList__hla_110
        mov        eax, [edx+12] 
        cmp        eax, [esi+12] 
        jne        NextInList__hla_110
        mov        eax, [edx+16] 
        cmp        eax, [esi+16] 
        jne        NextInList__hla_110
        mov        eax, [edx+20] 
        cmp        eax, [esi+20] 
        jne        NextInList__hla_110
        mov        al, [edx+24] 
        cmp        al, [esi+24] 
        jne        NextInList__hla_110
        mov        eax, ebx 
        pop        esi
        pop        ebx
        ret

ecx26__hla_136:
        mov        eax, [edx] 
        cmp        eax, [esi] 
        jne        NextInList__hla_110
        mov        eax, [edx+4] 
        cmp        eax, [esi+4] 
        jne        NextInList__hla_110
        mov        eax, [edx+8] 
        cmp        eax, [esi+8] 
        jne        NextInList__hla_110
        mov        eax, [edx+12] 
        cmp        eax, [esi+12] 
        jne        NextInList__hla_110
        mov        eax, [edx+16] 
        cmp        eax, [esi+16] 
        jne        NextInList__hla_110
        mov        eax, [edx+20] 
        cmp        eax, [esi+20] 
        jne        NextInList__hla_110
        mov        ax, [edx+24] 
        cmp        ax, [esi+24] 
        jne        NextInList__hla_110
        mov        eax, ebx 
        pop        esi
        pop        ebx
        ret

ecx27__hla_137:

ecx28__hla_138:
        mov        eax, [edx] 
        cmp        eax, [esi] 
        jne        NextInList__hla_110
        mov        eax, [edx+4] 
        cmp        eax, [esi+4] 
        jne        NextInList__hla_110
        mov        eax, [edx+8] 
        cmp        eax, [esi+8] 
        jne        NextInList__hla_110
        mov        eax, [edx+12] 
        cmp        eax, [esi+12] 
        jne        NextInList__hla_110
        mov        eax, [edx+16] 
        cmp        eax, [esi+16] 
        jne        NextInList__hla_110
        mov        eax, [edx+20] 
        cmp        eax, [esi+20] 
        jne        NextInList__hla_110
        mov        eax, [edx+24] 
        cmp        eax, [esi+24] 
        jne        NextInList__hla_110
        mov        eax, ebx 
        pop        esi
        pop        ebx
        ret

ECXGT28__hla_141:
        jmp        continue__hla_142
while__hla_142:
        sub        ecx, 4 
        mov        eax, [ecx+edx*1] 
        cmp        eax, [ecx+esi*1] 
        jne        NextInList__hla_110
continue__hla_142:
        cmp        ecx, 4 
        jae        while__hla_142
exitloop__hla_142:

        cmp        ecx, 2 
        jb         oneOrZero__hla_144
        ja         three__hla_145
        mov        ax, [edx] 
        cmp        ax, [esi] 
        jne        NextInList__hla_110
        mov        eax, ebx 
        pop        esi
        pop        ebx
        ret

three__hla_145:
        mov        ax, [edx] 
        cmp        ax, [esi] 
        jne        NextInList__hla_110
        mov        al, [edx+2] 
        cmp        al, [esi+2] 
        jne        NextInList__hla_110

success__hla_146:
        mov        eax, ebx 
        pop        esi
        pop        ebx
        ret

oneOrZero__hla_144:
        test       ecx, ecx 
        jz         success__hla_146
        mov        al, [edx] 
        cmp        al, [esi] 
        jne        NextInList__hla_110
        mov        eax, ebx 
        pop        esi
        pop        ebx
        ret

NextInList__hla_110:
        cmp        _parmLookup, 0 
        jne        CheckEndParms__hla_147
        mov        ebx, dword ptr [ebx] 
        test       ebx, ebx 
        jz         failure__hla_139
        jmp        whileLp__hla_140

CheckEndParms__hla_147:
        cmp        ebx, _ProcGlobal 
        je         failure__hla_139
        mov        ebx, dword ptr [ebx] 
        test       ebx, ebx 
        jnz        whileLp__hla_140
        pop        esi
        pop        ebx
        xor        eax, eax 
        ret

failure__hla_139:
        pop        esi
        pop        ebx
        xor        eax, eax 
        ret
x_SearchNext:
_SearchNext endp

_strcpylc proc near32
        mov        edx, [esp+4] 
        mov        ecx, [esp+8] 
        push        ebx
        xor        ebx, ebx 
        sub        ecx, 1 
        sub        edx, 1 

cpyLoop__hla_148:
        add        ecx, 1 
        add        edx, 1 
        mov        al, [ecx] 
        or         al, 32 
        ror        bl, 1 
        mov        [edx], al 
        xor        bl, al 
        cmp        al, 32 
        jnz        cpyLoop__hla_148
        mov        byte ptr [edx], 0 
        mov        eax, edx 
        sub        eax, [esp+8] 
        mov        edx, [esp+16] 
        mov        [edx], ebx 
        pop        ebx
        ret
x_strcpylc:
_strcpylc endp

_compactType proc near32
        push        ebp
        mov        ebp, esp 
        push        eax
        push        ebx
        push        edx
        push        esi
        mov        esi, [ebp+8] 
        mov        ebx, [ebp+12] 
        movzx      edx, byte ptr [ebx] 
        mov        al, 6 
        cmp        dl, 6 
        jbe        ALtoDl__hla_149
        mov        al, 12 
        cmp        dl, 12 
        jbe        ALtoDl__hla_149
        mov        al, 17 

ALtoDl__hla_149:
        mov        dl, al 
        cmp        dl, 17 
        jne        false__hla_150
        cmp        byte ptr [esi+15], 0 
        jnl        false__hla_150
        mov        eax, -1 
        cmp        eax, [esi+12] 
        jne        false__hla_152
        cmp        eax, [esi+8] 
        jne        false__hla_152
        cmp        byte ptr [esi+7], 0 
        jnl        false__hla_152
        dec        dl
        cmp        dl, 11 
        jne        false__hla_155
        dec        dl
false__hla_155:
        cmp        eax, [esi+4] 
        jne        false__hla_156
        cmp        byte ptr [esi+3], 0 
        jnl        false__hla_156
        dec        dl
        cmp        ax, [esi+2] 
        jne        false__hla_158
        cmp        byte ptr [esi+1], 0 
        jnl        false__hla_158
        dec        dl
        cmp        al, [esi+1] 
        jne        false__hla_160
        cmp        byte ptr [esi], 0 
        jnl        false__hla_160
        dec        dl
false__hla_160:
false__hla_158:
false__hla_156:
        jmp        endif__hla_152
false__hla_152:
        cmp        dl, 12 
        jne        false__hla_162
        cmp        eax, [esi+12] 
        jne        false__hla_163
        cmp        ax, [esi+10] 
        jne        false__hla_163
        cmp        byte ptr [esi+9], 0 
        jnl        false__hla_163
        mov        dl, 11 
false__hla_163:
false__hla_162:
endif__hla_152:
        jmp        endif__hla_150
false__hla_150:
        mov        eax, [esi+12] 
        or         eax, [esi+8] 
        jnz        false__hla_166
        cmp        dl, 12 
        jne        false__hla_167
        dec        dl
false__hla_167:
        dec        dl
        cmp        eax, [esi+4] 
        jne        false__hla_168
        dec        dl
        cmp        ax, [esi+2] 
        jne        false__hla_169
        dec        dl
        cmp        al, [esi+1] 
        jne        false__hla_170
        dec        dl
false__hla_170:
false__hla_169:
false__hla_168:
        jmp        endif__hla_166
false__hla_166:
        cmp        dl, 12 
        jne        false__hla_171
        movzx      eax, word ptr [esi+10] 
        or         eax, [esi+12] 
        jnz        false__hla_172
        mov        dl, 11 
false__hla_172:
false__hla_171:
endif__hla_166:
endif__hla_150:
        mov        [ebx], dl 
        mov        eax, typeTable__hla_32[edx*4] 
        mov        ebx, [ebp+16] 
        mov        [ebx], eax 
        pop        esi
        pop        edx
        pop        ebx
        pop        eax
x_compactType:
        mov        esp, ebp 
        pop        ebp
        ret
_compactType endp

_InRange proc near32
        push        ebx
        push        edx
        mov        ebx, [esp+12] 
        movzx      eax, byte ptr [esp+20] 
        movzx      edx, byte ptr [esp+16] 
        cmp        dl, 44 
        je         isString__hla_197
        cmp        dl, 35 
        je         isPointer__hla_202
        cmp        dl, 33 
        je         isPointer__hla_202
        cmp        dl, 28 
        jae        Failure__hla_196
        jmp        dword ptr tJmpTbl__hla_201[edx*4]

isBoolean__hla_173:

isEnum__hla_174:

isCset__hla_200:

isWString__hla_199:

Failure__hla_196:
        xor        eax, eax 
        pop        edx
        pop        ebx
        ret

isUns8__hla_175:
        cmp        al, 2 
        jb         Failure__hla_196
        cmp        al, 12 
        jbe        doUns8Uns__hla_203
        cmp        al, 17 
        ja         Failure__hla_196
        mov        eax, [ebx] 
        cmp        eax, 127 
        ja         Failure__hla_196
        mov        eax, [ebx+4] 
        or         eax, [ebx+8] 
        or         eax, [ebx+12] 
        jne        Failure__hla_196

setUns8__hla_204:
        mov        ebx, [esp+24] 
        mov        byte ptr [ebx], 2 
        mov        ebx, [esp+28] 
        mov        dword ptr [ebx], offset32  _uns8_ste
        mov        eax, 1 
        pop        edx
        pop        ebx
        ret

doUns8Uns__hla_203:
        mov        eax, [ebx] 
        cmp        eax, 255 
        ja         Failure__hla_196
        mov        eax, [ebx+4] 
        or         eax, [ebx+8] 
        or         eax, [ebx+12] 
        je         setUns8__hla_204
        xor        eax, eax 
        pop        edx
        pop        ebx
        ret

isUns16__hla_176:
        cmp        al, 2 
        jb         Failure__hla_196
        cmp        al, 12 
        jbe        doUns16Uns__hla_205
        cmp        al, 17 
        ja         Failure__hla_196
        mov        eax, [ebx] 
        cmp        eax, 32767 
        ja         Failure__hla_196
        mov        eax, [ebx+4] 
        or         eax, [ebx+8] 
        or         eax, [ebx+12] 
        jne        Failure__hla_196

setUns16__hla_206:
        mov        ebx, [esp+24] 
        mov        byte ptr [ebx], 3 
        mov        ebx, [esp+28] 
        mov        dword ptr [ebx], offset32  _uns16_ste
        mov        eax, 1 
        pop        edx
        pop        ebx
        ret

doUns16Uns__hla_205:
        movzx      eax, word ptr [ebx+2] 
        or         eax, [ebx+4] 
        or         eax, [ebx+8] 
        or         eax, [ebx+12] 
        je         setUns16__hla_206
        xor        eax, eax 
        pop        edx
        pop        ebx
        ret

isUns32__hla_177:
        cmp        al, 2 
        jb         Failure__hla_196
        cmp        al, 12 
        jbe        doUns32Uns__hla_207
        cmp        al, 17 
        ja         Failure__hla_196
        mov        eax, [ebx] 
        cmp        eax, 2147483647 
        ja         Failure__hla_196
        mov        eax, [ebx+4] 
        or         eax, [ebx+8] 
        or         eax, [ebx+12] 
        jne        Failure__hla_196

setUns32__hla_208:
        mov        ebx, [esp+24] 
        mov        byte ptr [ebx], 4 
        mov        ebx, [esp+28] 
        mov        dword ptr [ebx], offset32  _uns32_ste
        mov        eax, 1 
        pop        edx
        pop        ebx
        ret

doUns32Uns__hla_207:
        mov        eax, [ebx+4] 
        or         eax, [ebx+8] 
        or         eax, [ebx+12] 
        je         setUns32__hla_208
        xor        eax, eax 
        pop        edx
        pop        ebx
        ret

isUns64__hla_178:
        cmp        al, 2 
        jb         Failure__hla_196
        cmp        al, 12 
        jbe        doUns64Uns__hla_209
        cmp        al, 17 
        ja         Failure__hla_196
        mov        eax, [ebx+4] 
        cmp        eax, 2147483647 
        ja         Failure__hla_196
        mov        eax, [ebx+8] 
        or         eax, [ebx+12] 
        jne        Failure__hla_196

setUns64__hla_210:
        mov        ebx, [esp+24] 
        mov        byte ptr [ebx], 5 
        mov        ebx, [esp+28] 
        mov        dword ptr [ebx], offset32  _uns64_ste
        mov        eax, 1 
        pop        edx
        pop        ebx
        ret

doUns64Uns__hla_209:
        mov        eax, [ebx+8] 
        or         eax, [ebx+12] 
        je         setUns64__hla_210
        xor        eax, eax 
        pop        edx
        pop        ebx
        ret

isUns128__hla_179:
        cmp        al, 2 
        jb         Failure__hla_196
        cmp        al, 12 
        jbe        setUns128__hla_211
        cmp        al, 17 
        ja         Failure__hla_196
        cmp        byte ptr [ebx+15], 0 
        jl         Failure__hla_196

setUns128__hla_211:
        mov        ebx, [esp+24] 
        mov        byte ptr [ebx], 6 
        mov        ebx, [esp+28] 
        mov        dword ptr [ebx], offset32  _uns128_ste
        mov        eax, 1 
        pop        edx
        pop        ebx
        ret

isByte__hla_180:
        cmp        al, 19 
        ja         Failure__hla_196
        movzx      eax, byte ptr [ebx+1] 
        or         ax, [ebx+2] 
        or         eax, [ebx+4] 
        or         eax, [ebx+8] 
        or         eax, [ebx+12] 
        je         setByte__hla_212
        movsx      eax, byte ptr [ebx] 
        mov        al, ah 
        and        al, [ebx+1] 
        and        ax, [ebx+2] 
        and        eax, [ebx+4] 
        and        eax, [ebx+8] 
        and        eax, [ebx+12] 
        cmp        eax, -1 
        jne        Failure__hla_196

setByte__hla_212:
        mov        ebx, [esp+24] 
        mov        byte ptr [ebx], 7 
        mov        ebx, [esp+28] 
        mov        dword ptr [ebx], offset32  _byte_ste
        mov        eax, 1 
        pop        edx
        pop        ebx
        ret

isWord__hla_181:
        cmp        al, 19 
        ja         Failure__hla_196
        movzx      eax, word ptr [ebx+2] 
        or         eax, [ebx+4] 
        or         eax, [ebx+8] 
        or         eax, [ebx+12] 
        je         setWord__hla_213
        movsx      eax, byte ptr [ebx+1] 
        mov        al, ah 
        and        ax, [ebx+2] 
        and        eax, [ebx+4] 
        and        eax, [ebx+8] 
        and        eax, [ebx+12] 
        cmp        eax, -1 
        jne        Failure__hla_196

setWord__hla_213:
        mov        ebx, [esp+24] 
        mov        byte ptr [ebx], 8 
        mov        ebx, [esp+28] 
        mov        dword ptr [ebx], offset32  _word_ste
        mov        eax, 1 
        pop        edx
        pop        ebx
        ret

isDWord__hla_182:
        cmp        al, 19 
        ja         checkPtrDW__hla_214
        mov        eax, [ebx+4] 
        or         eax, [ebx+8] 
        or         eax, [ebx+12] 
        je         setDWord__hla_215
        movsx      eax, byte ptr [ebx+3] 
        mov        al, ah 
        and        eax, [ebx+4] 
        and        eax, [ebx+8] 
        and        eax, [ebx+12] 
        cmp        eax, -1 
        jne        Failure__hla_196

setDWord__hla_215:
        mov        ebx, [esp+24] 
        mov        byte ptr [ebx], 9 
        mov        ebx, [esp+28] 
        mov        dword ptr [ebx], offset32  _dword_ste
        mov        eax, 1 
        pop        edx
        pop        ebx
        ret

checkPtrDW__hla_214:
        cmp        al, 35 
        je         Success__hla_216
        cmp        al, 33 
        je         Success__hla_216
        xor        eax, eax 
        pop        edx
        pop        ebx
        ret

isQWord__hla_183:
        cmp        al, 19 
        ja         Failure__hla_196
        mov        eax, [ebx+8] 
        or         eax, [ebx+12] 
        je         setQWord__hla_217
        movsx      eax, byte ptr [ebx+7] 
        mov        al, ah 
        cmp        eax, [ebx+8] 
        jne        Failure__hla_196
        cmp        eax, [ebx+12] 
        jne        Failure__hla_196

setQWord__hla_217:
        mov        ebx, [esp+24] 
        mov        byte ptr [ebx], 10 
        mov        ebx, [esp+28] 
        mov        dword ptr [ebx], offset32  _qword_ste
        mov        eax, 1 
        pop        edx
        pop        ebx
        ret

isTByte__hla_184:
        cmp        al, 19 
        ja         Failure__hla_196
        movzx      eax, word ptr [ebx+10] 
        or         eax, [ebx+12] 
        je         setTByte__hla_218
        movsx      eax, byte ptr [ebx+9] 
        mov        al, ah 
        cmp        ax, [ebx+10] 
        jne        Failure__hla_196
        cmp        eax, [ebx+12] 
        jne        Failure__hla_196

setTByte__hla_218:
        mov        ebx, [esp+24] 
        mov        byte ptr [ebx], 11 
        mov        ebx, [esp+28] 
        mov        dword ptr [ebx], offset32  _tbyte_ste
        mov        eax, 1 
        pop        edx
        pop        ebx
        ret

isLWord__hla_185:
        cmp        al, 19 
        ja         Failure__hla_196
        mov        ebx, [esp+24] 
        mov        byte ptr [ebx], 12 
        mov        ebx, [esp+28] 
        mov        dword ptr [ebx], offset32  _lword_ste
        mov        eax, 1 
        pop        edx
        pop        ebx
        ret

isInt8__hla_186:
        cmp        al, 2 
        jb         Failure__hla_196
        cmp        al, 6 
        jbe        doInt8Uns__hla_219
        cmp        al, 12 
        jbe        doInt8Hex__hla_220
        cmp        al, 17 
        ja         Failure__hla_196
        mov        eax, [ebx] 
        cdq
        cmp        eax, -128 
        jl         Failure__hla_196
        cmp        eax, 127 
        jg         Failure__hla_196
        cmp        edx, [ebx+4] 
        jne        Failure__hla_196
        cmp        edx, [ebx+8] 
        jne        Failure__hla_196
        cmp        edx, [ebx+12] 
        jne        Failure__hla_196

setInt8__hla_221:
        movsx      eax, byte ptr [ebx] 
        mov        [ebx], eax 
        mov        al, ah 
        mov        [ebx+4], eax 
        mov        [ebx+8], eax 
        mov        [ebx+12], eax 
        mov        ebx, [esp+24] 
        mov        byte ptr [ebx], 13 
        mov        ebx, [esp+28] 
        mov        dword ptr [ebx], offset32  _int8_ste
        mov        eax, 1 
        pop        edx
        pop        ebx
        ret

doInt8Hex__hla_220:
        movzx      eax, byte ptr [ebx+1] 
        or         ax, [ebx+2] 
        or         eax, [ebx+4] 
        or         eax, [ebx+8] 
        or         eax, [ebx+12] 
        jz         setInt8__hla_221
        mov        eax, [ebx] 
        mov        al, ah 
        and        eax, [ebx+4] 
        and        eax, [ebx+8] 
        and        eax, [ebx+12] 
        cmp        eax, -1 
        je         setInt8__hla_221
        xor        eax, eax 
        pop        edx
        pop        ebx
        ret

doInt8Uns__hla_219:
        mov        eax, [ebx] 
        cmp        eax, 127 
        ja         FailureI8U__hla_222
        mov        eax, [ebx+4] 
        or         eax, [ebx+8] 
        or         eax, [ebx+12] 
        je         setInt8__hla_221

FailureI8U__hla_222:
        xor        eax, eax 
        pop        edx
        pop        ebx
        ret

isInt16__hla_187:
        cmp        al, 2 
        jb         int16Failure__hla_223
        cmp        al, 6 
        jbe        doInt16Uns__hla_224
        cmp        al, 12 
        jbe        doInt16Hex__hla_225
        cmp        al, 17 
        ja         int16Failure__hla_223
        mov        eax, [ebx] 
        cdq
        cmp        eax, -32768 
        jl         int16Failure__hla_223
        cmp        eax, 32768 
        jg         int16Failure__hla_223
        cmp        edx, [ebx+4] 
        jne        int16Failure__hla_223
        cmp        edx, [ebx+8] 
        jne        int16Failure__hla_223
        cmp        edx, [ebx+12] 
        jne        int16Failure__hla_223

setInt16__hla_226:
        movsx      eax, byte ptr [ebx+1] 
        mov        al, ah 
        mov        [ebx+2], ax 
        mov        [ebx+4], eax 
        mov        [ebx+8], eax 
        mov        [ebx+12], eax 
        mov        ebx, [esp+24] 
        mov        byte ptr [ebx], 14 
        mov        ebx, [esp+28] 
        mov        dword ptr [ebx], offset32  _int16_ste
        mov        eax, 1 
        pop        edx
        pop        ebx
        ret

doInt16Hex__hla_225:
        movzx      eax, word ptr [ebx+2] 
        or         eax, [ebx+4] 
        or         eax, [ebx+8] 
        or         eax, [ebx+12] 
        jz         setInt16__hla_226
        movsx      eax, byte ptr [ebx+1] 
        mov        al, ah 
        and        ax, [ebx+2] 
        and        eax, [ebx+4] 
        and        eax, [ebx+8] 
        and        eax, [ebx+12] 
        cmp        eax, -1 
        je         setInt16__hla_226
        xor        eax, eax 
        pop        edx
        pop        ebx
        ret

doInt16Uns__hla_224:
        mov        eax, [ebx] 
        cmp        eax, 32767 
        ja         int16Failure__hla_223
        mov        eax, [ebx+4] 
        or         eax, [ebx+8] 
        or         eax, [ebx+12] 
        je         setInt16__hla_226

int16Failure__hla_223:
        xor        eax, eax 
        pop        edx
        pop        ebx
        ret

isInt32__hla_188:
        cmp        al, 2 
        jb         int32Failure__hla_227
        cmp        al, 6 
        jbe        doInt32Uns__hla_228
        cmp        al, 12 
        jbe        doInt32Hex__hla_229
        cmp        al, 17 
        ja         int32Failure__hla_227
        mov        eax, [ebx] 
        cdq
        cmp        edx, [ebx+4] 
        jne        int32Failure__hla_227
        cmp        edx, [ebx+8] 
        jne        int32Failure__hla_227
        cmp        edx, [ebx+12] 
        jne        int32Failure__hla_227

setInt32__hla_230:
        movsx      eax, byte ptr [ebx+3] 
        mov        al, ah 
        mov        [ebx+4], eax 
        mov        [ebx+8], eax 
        mov        [ebx+12], eax 
        mov        ebx, [esp+24] 
        mov        byte ptr [ebx], 15 
        mov        ebx, [esp+28] 
        mov        dword ptr [ebx], offset32  _int32_ste
        mov        eax, 1 
        pop        edx
        pop        ebx
        ret

doInt32Hex__hla_229:
        mov        eax, [ebx+4] 
        or         eax, [ebx+8] 
        or         eax, [ebx+12] 
        jz         setInt32__hla_230
        movsx      eax, byte ptr [ebx+3] 
        mov        al, ah 
        and        eax, [ebx+4] 
        and        eax, [ebx+8] 
        and        eax, [ebx+12] 
        cmp        eax, -1 
        je         setInt32__hla_230
        xor        eax, eax 
        pop        edx
        pop        ebx
        ret

doInt32Uns__hla_228:
        mov        eax, [ebx] 
        cmp        eax, 2147483647 
        ja         int32Failure__hla_227
        mov        eax, [ebx+4] 
        or         eax, [ebx+8] 
        or         eax, [ebx+12] 
        je         setInt32__hla_230

int32Failure__hla_227:
        xor        eax, eax 
        pop        edx
        pop        ebx
        ret

isInt64__hla_189:
        cmp        al, 2 
        jb         int64Failure__hla_231
        cmp        al, 6 
        jbe        doInt64Uns__hla_232
        cmp        al, 12 
        jbe        doInt64Hex__hla_233
        cmp        al, 17 
        ja         int64Failure__hla_231
        mov        eax, [ebx] 
        cdq
        cmp        edx, [ebx+8] 
        jne        int64Failure__hla_231
        cmp        edx, [ebx+12] 
        jne        int64Failure__hla_231

setInt64__hla_234:
        movsx      eax, byte ptr [ebx+7] 
        mov        al, ah 
        mov        [ebx+8], eax 
        mov        [ebx+12], eax 
        mov        ebx, [esp+24] 
        mov        byte ptr [ebx], 16 
        mov        ebx, [esp+28] 
        mov        dword ptr [ebx], offset32  _int64_ste
        mov        eax, 1 
        pop        edx
        pop        ebx
        ret

doInt64Hex__hla_233:
        mov        eax, [ebx+8] 
        or         eax, [ebx+12] 
        jz         setInt64__hla_234
        movsx      eax, byte ptr [ebx+7] 
        mov        al, ah 
        and        eax, [ebx+8] 
        and        eax, [ebx+12] 
        cmp        eax, -1 
        je         setInt64__hla_234
        xor        eax, eax 
        pop        edx
        pop        ebx
        ret

doInt64Uns__hla_232:
        mov        eax, [ebx+4] 
        cmp        eax, 2147483647 
        ja         int64Failure__hla_231
        mov        eax, [ebx+8] 
        or         eax, [ebx+12] 
        je         setInt64__hla_234

int64Failure__hla_231:
        xor        eax, eax 
        pop        edx
        pop        ebx
        ret

isInt128__hla_190:
        cmp        al, 2 
        jb         int128Failure__hla_235
        cmp        al, 6 
        jb         setInt128__hla_236
        je         TryInt128Uns__hla_237
        cmp        al, 17 
        ja         int128Failure__hla_235

setInt128__hla_236:
        mov        ebx, [esp+24] 
        mov        byte ptr [ebx], 17 
        mov        ebx, [esp+28] 
        mov        dword ptr [ebx], offset32  _int128_ste
        mov        eax, 1 
        pop        edx
        pop        ebx
        ret

TryInt128Uns__hla_237:
        cmp        byte ptr [ebx+15], 128 
        jb         setInt128__hla_236

int128Failure__hla_235:
        xor        eax, eax 
        pop        edx
        pop        ebx
        ret

isReal32__hla_193:
        cmp        al, 2 
        jb         int128Failure__hla_235
        cmp        al, 12 
        jbe        IsReal32Uns__hla_238
        cmp        al, 17 
        jbe        IsReal32Int__hla_239
        cmp        al, 20 
        jb         int128Failure__hla_235
        je         real32Success__hla_240
        cmp        al, 21 
        je         IsReal3264__hla_241
        cmp        al, 22 
        jne        int128Failure__hla_235
        fld        real10 ptr [ebx]
        fstp       real4 ptr [ebx]
        mov        dword ptr [ebx+4], 0 
        mov        dword ptr [ebx+8], 0 
        mov        dword ptr [ebx+12], 0 
        mov        ebx, [esp+24] 
        mov        byte ptr [ebx], 20 
        mov        ebx, [esp+28] 
        mov        dword ptr [ebx], offset32  _real32_ste

real32Success__hla_240:
        mov        eax, 1 
        pop        edx
        pop        ebx
        ret

IsReal3264__hla_241:
        fld        real8 ptr [ebx]
        fstp       real4 ptr [ebx]
        mov        dword ptr [ebx+4], 0 
        mov        dword ptr [ebx+8], 0 
        mov        dword ptr [ebx+12], 0 
        mov        ebx, [esp+24] 
        mov        byte ptr [ebx], 20 
        mov        ebx, [esp+28] 
        mov        dword ptr [ebx], offset32  _real32_ste
        mov        eax, 1 
        pop        edx
        pop        ebx
        ret

IsReal32Uns__hla_238:
        mov        eax, [ebx+4] 
        or         eax, [ebx+8] 
        or         eax, [ebx+12] 
        jnz        Failure__hla_196
        mov        eax, [ebx] 
        and        eax, -8388608 
        jnz        Failure__hla_196
        fild       dword ptr [ebx]
        fstp       real4 ptr [ebx]
        mov        dword ptr [ebx+4], 0 
        mov        dword ptr [ebx+8], 0 
        mov        dword ptr [ebx+12], 0 
        mov        ebx, [esp+24] 
        mov        byte ptr [ebx], 20 
        mov        ebx, [esp+28] 
        mov        dword ptr [ebx], offset32  _real32_ste
        mov        eax, 1 
        pop        edx
        pop        ebx
        ret

IsReal32Int__hla_239:
        movsx      eax, byte ptr [ebx+2] 
        mov        al, ah 
        cmp        eax, [ebx+4] 
        jne        Failure__hla_196
        cmp        eax, [ebx+8] 
        jne        Failure__hla_196
        cmp        eax, [ebx+12] 
        jne        Failure__hla_196
        fild       dword ptr [ebx]
        fstp       real4 ptr [ebx]
        mov        dword ptr [ebx+4], 0 
        mov        dword ptr [ebx+8], 0 
        mov        dword ptr [ebx+12], 0 
        mov        ebx, [esp+24] 
        mov        byte ptr [ebx], 20 
        mov        ebx, [esp+28] 
        mov        dword ptr [ebx], offset32  _real32_ste
        mov        eax, 1 
        pop        edx
        pop        ebx
        ret

isReal64__hla_194:
        cmp        al, 2 
        jb         Failure__hla_196
        cmp        al, 12 
        jbe        IsReal64Uns__hla_242
        cmp        al, 17 
        jbe        IsReal64Int__hla_243
        cmp        al, 20 
        je         IsReal6432__hla_244
        cmp        al, 21 
        je         Success__hla_216
        cmp        al, 22 
        jne        Failure__hla_196
        fld        real10 ptr [ebx]
        fstp       real8 ptr [ebx]
        mov        dword ptr [ebx+8], 0 
        mov        dword ptr [ebx+12], 0 
        mov        ebx, [esp+24] 
        mov        byte ptr [ebx], 21 
        mov        ebx, [esp+28] 
        mov        dword ptr [ebx], offset32  _real64_ste
        mov        eax, 1 
        pop        edx
        pop        ebx
        ret

IsReal6432__hla_244:
        fld        real4 ptr [ebx]
        fstp       real8 ptr [ebx]
        mov        dword ptr [ebx+8], 0 
        mov        dword ptr [ebx+12], 0 
        mov        ebx, [esp+24] 
        mov        byte ptr [ebx], 21 
        mov        ebx, [esp+28] 
        mov        dword ptr [ebx], offset32  _real64_ste
        mov        eax, 1 
        pop        edx
        pop        ebx
        ret

IsReal64Uns__hla_242:
        mov        eax, [ebx+8] 
        or         eax, [ebx+12] 
        jnz        Failure__hla_196
        mov        eax, [ebx+4] 
        and        eax, -1048576 
        jnz        Failure__hla_196
        fild       qword ptr [ebx]
        fstp       real8 ptr [ebx]
        mov        dword ptr [ebx+8], 0 
        mov        dword ptr [ebx+12], 0 
        mov        ebx, [esp+24] 
        mov        byte ptr [ebx], 21 
        mov        ebx, [esp+28] 
        mov        dword ptr [ebx], offset32  _real64_ste
        mov        eax, 1 
        pop        edx
        pop        ebx
        ret

IsReal64Int__hla_243:
        mov        al, [ebx+6] 
        shl        al, 4 
        movsx      eax, al 
        mov        al, ah 
        cmp        eax, [ebx+4] 
        jne        Failure__hla_196
        cmp        eax, [ebx+8] 
        jne        Failure__hla_196
        cmp        eax, [ebx+12] 
        jne        Failure__hla_196
        fild       qword ptr [ebx]
        fstp       real8 ptr [ebx]
        mov        dword ptr [ebx+8], 0 
        mov        dword ptr [ebx+12], 0 
        mov        ebx, [esp+24] 
        mov        byte ptr [ebx], 21 
        mov        ebx, [esp+28] 
        mov        dword ptr [ebx], offset32  _real64_ste
        mov        eax, 1 
        pop        edx
        pop        ebx
        ret

isReal80__hla_195:
        cmp        al, 2 
        jb         Failure__hla_196
        cmp        al, 12 
        jbe        IsReal80Uns__hla_245
        cmp        al, 17 
        jbe        IsReal80Int__hla_246
        cmp        al, 20 
        je         IsReal8032__hla_247
        cmp        al, 22 
        je         Success__hla_216
        cmp        al, 21 
        jne        Failure__hla_196
        fld        real8 ptr [ebx]
        fstp       real10 ptr [ebx]
        mov        word ptr [ebx+10], 0 
        mov        dword ptr [ebx+12], 0 
        mov        ebx, [esp+24] 
        mov        byte ptr [ebx], 22 
        mov        ebx, [esp+28] 
        mov        dword ptr [ebx], offset32  _real80_ste
        mov        eax, 1 
        pop        edx
        pop        ebx
        ret

IsReal8032__hla_247:
        fld        real4 ptr [ebx]
        fstp       real10 ptr [ebx]
        mov        word ptr [ebx+10], 0 
        mov        dword ptr [ebx+12], 0 
        mov        ebx, [esp+24] 
        mov        byte ptr [ebx], 22 
        mov        ebx, [esp+28] 
        mov        dword ptr [ebx], offset32  _real80_ste
        mov        eax, 1 
        pop        edx
        pop        ebx
        ret

IsReal80Uns__hla_245:
        mov        al, [ebx+7] 
        and        eax, 128 
        or         eax, [ebx+8] 
        or         eax, [ebx+12] 
        jnz        Failure__hla_196
        fild       qword ptr [ebx]
        fstp       real10 ptr [ebx]
        mov        word ptr [ebx+10], 0 
        mov        dword ptr [ebx+12], 0 
        mov        ebx, [esp+24] 
        mov        byte ptr [ebx], 22 
        mov        ebx, [esp+28] 
        mov        dword ptr [ebx], offset32  _real80_ste
        mov        eax, 1 
        pop        edx
        pop        ebx
        ret

IsReal80Int__hla_246:
        movsx      eax, byte ptr [ebx+7] 
        mov        al, ah 
        cmp        eax, [ebx+8] 
        jne        Failure__hla_196
        cmp        eax, [ebx+12] 
        jne        Failure__hla_196
        fild       qword ptr [ebx]
        fstp       real10 ptr [ebx]
        mov        word ptr [ebx+10], 0 
        mov        dword ptr [ebx+12], 0 
        mov        ebx, [esp+24] 
        mov        byte ptr [ebx], 22 
        mov        ebx, [esp+28] 
        mov        dword ptr [ebx], offset32  _real80_ste
        mov        eax, 1 
        pop        edx
        pop        ebx
        ret

isZString__hla_198:

isString__hla_197:

isText__hla_248:
        cmp        al, 24 
        je         Success__hla_216
        cmp        al, 35 
        je         Success__hla_216
        cmp        al, 18 
        jne        Failure__hla_196
        push        esi
        push        edi
        push        ebx
        push        ecx
        push        edx
        pushd      4
        call       _HLAmalloc
        add        esp, 4 
        pop        edx
        pop        ecx
        pop        ebx
        pop        edi
        pop        esi
        mov        dl, [ebx] 
        mov        [eax], dl 
        mov        byte ptr [eax+1], 0 
        mov        [ebx], eax 
        mov        ebx, [esp+24] 
        mov        byte ptr [ebx], 24 
        mov        ebx, [esp+28] 
        mov        dword ptr [ebx], offset32  _string_ste
        mov        eax, 1 
        pop        edx
        pop        ebx
        ret

isChar__hla_191:
        cmp        al, 18 
        je         Success__hla_216
        cmp        al, 19 
        jne        Failure__hla_196
        cmp        byte ptr [ebx+1], 0 
        jne        Failure__hla_196
        mov        ebx, [esp+24] 
        mov        byte ptr [ebx], 18 
        mov        ebx, [esp+28] 
        mov        dword ptr [ebx], offset32  _char_ste
        mov        eax, 1 
        pop        edx
        pop        ebx
        ret

isWChar__hla_192:
        cmp        al, 19 
        je         Success__hla_216
        cmp        al, 18 
        jne        Failure__hla_196
        mov        byte ptr [ebx], 0 
        mov        ebx, [esp+24] 
        mov        byte ptr [ebx], 19 
        mov        ebx, [esp+28] 
        mov        dword ptr [ebx], offset32  _wchar_ste

Success__hla_216:
        mov        eax, 1 
        pop        edx
        pop        ebx
        ret

isProcptr__hla_249:

isPointer__hla_202:
        cmp        al, 35 
        je         Success__hla_216
        cmp        al, 33 
        je         Success__hla_216
        cmp        al, 9 
        je         Success__hla_216
        xor        eax, eax 
        pop        edx
        pop        ebx
        ret
x_InRange:
_InRange endp

_MakeCompAsm proc near32
        push        ebp
        mov        ebp, esp 
        push        ebx
        push        ecx
        push        edx
        push        edi
        push        esi
        mov        ebx, [ebp+8] 
        mov        ecx, [ebp+12] 
        mov        edi, [ebp+16] 
        mov        esi, [ebp+20] 
        movzx      eax, byte ptr [ebx] 
        movzx      edx, byte ptr [ecx] 
        cmp        al, 35 
        je         LPointer__hla_504
        cmp        dl, 35 
        je         RPointer__hla_505
        cmp        al, 33 
        je         LProcptr__hla_506
        cmp        dl, 33 
        je         RProcptr__hla_507
        cmp        al, 24 
        ja         L509__hla_
        cmp        dl, 24 
        jna        false__hla_508
L509__hla_:
        xor        eax, eax 
        jmp        exit__hla_503
false__hla_508:
        imul       eax, eax, 26 
        add        eax, edx 
        jmp        dword ptr jmpTbl__hla_502[eax*4]

LPointer__hla_504:
        cmp        dl, 24 
        je         Success__hla_510
        cmp        dl, 9 
        je         Success__hla_510
        cmp        dl, 35 
        je         Success__hla_510
        cmp        dl, 33 
        je         Success__hla_510
        xor        eax, eax 
        jmp        exit__hla_503

RPointer__hla_505:
        cmp        al, 24 
        je         Success__hla_510
        cmp        al, 9 
        je         Success__hla_510
        cmp        al, 35 
        je         Success__hla_510
        cmp        al, 33 
        je         Success__hla_510
        xor        eax, eax 
        jmp        exit__hla_503

LProcptr__hla_506:
        cmp        dl, 9 
        je         Success__hla_510
        cmp        dl, 35 
        je         Success__hla_510
        cmp        dl, 33 
        je         Success__hla_510
        xor        eax, eax 
        jmp        exit__hla_503

RProcptr__hla_507:
        cmp        al, 9 
        je         Success__hla_510
        cmp        al, 35 
        je         Success__hla_510
        cmp        al, 33 
        je         Success__hla_510
        xor        eax, eax 
        jmp        exit__hla_503

CharWChar__hla_487:
        mov        eax, [ebp+24] 
        mov        byte ptr [eax+1], 0 
        mov        byte ptr [ebx], 19 
        mov        dword ptr [edi], offset32  _wchar_ste

Success__hla_510:
        mov        eax, 1 
        jmp        exit__hla_503

WCharChar__hla_489:
        mov        eax, [ebp+28] 
        mov        byte ptr [eax+1], 0 
        mov        byte ptr [ecx], 19 
        mov        dword ptr [esi], offset32  _wchar_ste
        mov        eax, 1 
        jmp        exit__hla_503

CharString__hla_488:
        push        esi
        push        edi
        push        ebx
        push        ecx
        push        edx
        pushd      8
        call       _HLAmalloc
        add        esp, 4 
        pop        edx
        pop        ecx
        pop        ebx
        pop        edi
        pop        esi
        mov        edx, [ebp+24] 
        mov        ch, [edx] 
        mov        [eax], ch 
        mov        byte ptr [eax+1], 0 
        mov        [edx], eax 
        mov        byte ptr [ebx], 24 
        mov        dword ptr [edi], offset32  _string_ste
        mov        eax, 1 
        jmp        exit__hla_503

StringChar__hla_501:
        push        esi
        push        edi
        push        ebx
        push        ecx
        push        edx
        pushd      8
        call       _HLAmalloc
        add        esp, 4 
        pop        edx
        pop        ecx
        pop        ebx
        pop        edi
        pop        esi
        mov        edx, [ebp+28] 
        mov        bh, [edx] 
        mov        [eax], bh 
        mov        byte ptr [eax+1], 0 
        mov        [edx], eax 
        mov        byte ptr [ecx], 24 
        mov        dword ptr [esi], offset32  _string_ste
        mov        eax, 1 
        jmp        exit__hla_503

UnsReal32__hla_267:
        mov        eax, [ebp+24] 
        cmp        dword ptr [eax+4], 0 
        jne        false__hla_511
        cmp        dword ptr [eax+8], 0 
        jne        false__hla_511
        cmp        dword ptr [eax+12], 0 
        jne        false__hla_511
        test       word ptr [eax+2], 65408 
        jnz        false__hla_514
        fild       dword ptr [eax]
        fstp       real4 ptr [eax]
        mov        byte ptr [ebx], 20 
        mov        dword ptr [edi], offset32  _real32_ste
        mov        eax, 1 
        jmp        exit__hla_503
false__hla_514:
false__hla_511:
        push        ebx
        mov        ebx, esp 
        sub        esp, 28 
        and        esp, -16 
        pushd      offset32 str__hla_516
        pushd      4030

        pushd      offset32 str__hla_515

        call       _HLAerror
        mov        esp, ebx 
        pop        ebx
        xor        eax, eax 
        jmp        exit__hla_503

Real32Uns__hla_490:
        mov        eax, [ebp+28] 
        cmp        dword ptr [eax+4], 0 
        jne        false__hla_517
        cmp        dword ptr [eax+8], 0 
        jne        false__hla_517
        cmp        dword ptr [eax+12], 0 
        jne        false__hla_517
        test       word ptr [eax+2], 65408 
        jnz        false__hla_520
        fild       dword ptr [eax]
        fstp       real4 ptr [eax]
        mov        byte ptr [ecx], 20 
        mov        dword ptr [esi], offset32  _real32_ste
        mov        eax, 1 
        jmp        exit__hla_503
false__hla_520:
false__hla_517:
        push        ebx
        mov        ebx, esp 
        sub        esp, 28 
        and        esp, -16 
        pushd      offset32 str__hla_516
        pushd      4068

        pushd      offset32 str__hla_515

        call       _HLAerror
        mov        esp, ebx 
        pop        ebx
        xor        eax, eax 
        jmp        exit__hla_503

IntReal32__hla_424:
        mov        edx, [ebp+24] 
        fild       qword ptr [edx]
        fstp       real4 ptr [edx]
        mov        byte ptr [ebx], 20 
        mov        dword ptr [edi], offset32  _real32_ste
        mov        eax, 1 
        jmp        exit__hla_503

Real32Int__hla_491:
        mov        edx, [ebp+28] 
        fild       qword ptr [edx]
        fstp       real4 ptr [edx]
        mov        byte ptr [ecx], 20 
        mov        dword ptr [esi], offset32  _real32_ste
        mov        eax, 1 
        jmp        exit__hla_503

Real3264__hla_492:
        mov        eax, [ebp+24] 
        fld        real4 ptr [eax]
        fstp       real8 ptr [eax]
        mov        byte ptr [ebx], 21 
        mov        dword ptr [edi], offset32  _real64_ste
        mov        eax, 1 
        jmp        exit__hla_503

Real3280__hla_493:
        mov        eax, [ebp+24] 
        fld        real4 ptr [eax]
        fstp       real10 ptr [eax]
        mov        byte ptr [ebx], 22 
        mov        dword ptr [edi], offset32  _real80_ste
        mov        eax, 1 
        jmp        exit__hla_503

UnsReal64__hla_268:
        mov        edx, [ebp+24] 
        mov        eax, [edx+6] 
        and        eax, 65520 
        or         eax, [edx+8] 
        or         eax, [edx+12] 
        jnz        false__hla_521
        fild       qword ptr [edx]
        fstp       real8 ptr [edx]
        mov        byte ptr [ebx], 21 
        mov        dword ptr [edi], offset32  _real64_ste
        mov        eax, 1 
        jmp        exit__hla_503
false__hla_521:
        push        ebx
        mov        ebx, esp 
        sub        esp, 28 
        and        esp, -16 
        pushd      offset32 str__hla_516
        pushd      4165

        pushd      offset32 str__hla_522

        call       _HLAerror
        mov        esp, ebx 
        pop        ebx
        xor        eax, eax 
        jmp        exit__hla_503

Real64Uns__hla_494:
        mov        edx, [ebp+28] 
        mov        ax, [edx+6] 
        and        eax, 65520 
        or         eax, [edx+8] 
        or         eax, [edx+12] 
        jnz        false__hla_523
        fild       qword ptr [edx]
        fstp       real8 ptr [edx]
        mov        byte ptr [ecx], 21 
        mov        dword ptr [esi], offset32  _real64_ste
        mov        eax, 1 
        jmp        exit__hla_503
false__hla_523:
        push        ebx
        mov        ebx, esp 
        sub        esp, 28 
        and        esp, -16 
        pushd      offset32 str__hla_516
        pushd      4198

        pushd      offset32 str__hla_522

        call       _HLAerror
        mov        esp, ebx 
        pop        ebx
        xor        eax, eax 
        jmp        exit__hla_503

IntReal64__hla_425:
        mov        ecx, [ebp+24] 
        movsx      eax, word ptr [ecx+6] 
        cdq
        and        ax, 65528 
        jz         L527__hla_
        cmp        ax, 65528 
        jne        false__hla_524
L527__hla_:
        cmp        edx, [ecx+8] 
        jne        false__hla_524
        cmp        edx, [ecx+12] 
        jne        false__hla_524
        fild       qword ptr [ecx]
        fstp       real8 ptr [ecx]
        mov        byte ptr [ebx], 21 
        mov        dword ptr [edi], offset32  _real64_ste
        mov        eax, 1 
        jmp        exit__hla_503
false__hla_524:
        push        ebx
        mov        ebx, esp 
        sub        esp, 28 
        and        esp, -16 
        pushd      offset32 str__hla_516
        pushd      4234

        pushd      offset32 str__hla_522

        call       _HLAerror
        mov        esp, ebx 
        pop        ebx
        xor        eax, eax 
        jmp        exit__hla_503

Real64Int__hla_495:
        mov        ebx, [ebp+28] 
        movsx      eax, word ptr [ebx+6] 
        cdq
        and        ax, 65528 
        jz         L531__hla_
        cmp        ax, 65528 
        jne        false__hla_528
L531__hla_:
        cmp        edx, [ebx+8] 
        jne        false__hla_528
        cmp        edx, [ebx+12] 
        jne        false__hla_528
        fild       qword ptr [ebx]
        fstp       real8 ptr [ebx]
        mov        byte ptr [ecx], 21 
        mov        dword ptr [esi], offset32  _real64_ste
        mov        eax, 1 
        jmp        exit__hla_503
false__hla_528:
        push        ebx
        mov        ebx, esp 
        sub        esp, 28 
        and        esp, -16 
        pushd      offset32 str__hla_516
        pushd      4265

        pushd      offset32 str__hla_522

        call       _HLAerror
        mov        esp, ebx 
        pop        ebx
        xor        eax, eax 
        jmp        exit__hla_503

Real6432__hla_496:
        mov        eax, [ebp+28] 
        fld        real4 ptr [eax]
        fstp       real8 ptr [eax]
        mov        byte ptr [ecx], 21 
        mov        dword ptr [esi], offset32  _real64_ste
        mov        eax, 1 
        jmp        exit__hla_503

Real6480__hla_497:
        mov        eax, [ebp+24] 
        fld        real8 ptr [eax]
        fstp       real10 ptr [eax]
        mov        byte ptr [ebx], 22 
        mov        dword ptr [edi], offset32  _real80_ste
        mov        eax, 1 
        jmp        exit__hla_503

UnsReal80__hla_269:
        mov        ecx, [ebp+24] 
        movsx      eax, byte ptr [ecx+7] 
        cdq
        test       edx, edx 
        jne        false__hla_532
        cmp        edx, [ecx+8] 
        jne        false__hla_532
        cmp        edx, [ecx+12] 
        jne        false__hla_532
        fild       qword ptr [ecx]
        fstp       real10 ptr [ecx]
        mov        byte ptr [ebx], 22 
        mov        dword ptr [edi], offset32  _real80_ste
        mov        eax, 1 
        jmp        exit__hla_503
false__hla_532:
        push        ebx
        mov        ebx, esp 
        sub        esp, 28 
        and        esp, -16 
        pushd      offset32 str__hla_516
        pushd      4327

        pushd      offset32 str__hla_535

        call       _HLAerror
        mov        esp, ebx 
        pop        ebx
        xor        eax, eax 
        jmp        exit__hla_503

Real80Uns__hla_498:
        mov        ebx, [ebp+28] 
        movsx      eax, byte ptr [ebx+7] 
        cdq
        test       edx, edx 
        jne        false__hla_536
        cmp        edx, [ebx+8] 
        jne        false__hla_536
        cmp        edx, [ebx+12] 
        jne        false__hla_536
        fild       qword ptr [ebx]
        fstp       real10 ptr [ebx]
        mov        byte ptr [ecx], 22 
        mov        dword ptr [esi], offset32  _real80_ste
        mov        eax, 1 
        jmp        exit__hla_503
false__hla_536:
        push        ebx
        mov        ebx, esp 
        sub        esp, 28 
        and        esp, -16 
        pushd      offset32 str__hla_516
        pushd      4354

        pushd      offset32 str__hla_535

        call       _HLAerror
        mov        esp, ebx 
        pop        ebx
        xor        eax, eax 
        jmp        exit__hla_503

IntReal80__hla_426:
        mov        ecx, [ebp+24] 
        movsx      eax, byte ptr [ecx+7] 
        cdq
        test       edx, edx 
        je         L542__hla_
        cmp        edx, -1 
        jne        false__hla_539
L542__hla_:
        cmp        edx, [ecx+8] 
        jne        false__hla_539
        cmp        edx, [ecx+12] 
        jne        false__hla_539
        fild       qword ptr [ecx]
        fstp       real10 ptr [ecx]
        mov        byte ptr [ebx], 22 
        mov        dword ptr [edi], offset32  _real80_ste
        mov        eax, 1 
        jmp        exit__hla_503
false__hla_539:
        push        ebx
        mov        ebx, esp 
        sub        esp, 28 
        and        esp, -16 
        pushd      offset32 str__hla_516
        pushd      4388

        pushd      offset32 str__hla_535

        call       _HLAerror
        mov        esp, ebx 
        pop        ebx
        xor        eax, eax 
        jmp        exit__hla_503

Real80Int__hla_499:
        mov        ebx, [ebp+28] 
        movsx      eax, byte ptr [ebx+7] 
        cdq
        test       edx, edx 
        je         L546__hla_
        cmp        edx, -1 
        jne        false__hla_543
L546__hla_:
        cmp        edx, [ebx+8] 
        jne        false__hla_543
        cmp        edx, [ebx+12] 
        jne        false__hla_543
        fild       qword ptr [ebx]
        fstp       real10 ptr [ebx]
        mov        byte ptr [ecx], 22 
        mov        dword ptr [esi], offset32  _real80_ste
        mov        eax, 1 
        jmp        exit__hla_503
false__hla_543:
        push        ebx
        mov        ebx, esp 
        sub        esp, 28 
        and        esp, -16 
        pushd      offset32 str__hla_516
        pushd      4418

        pushd      offset32 str__hla_535

        call       _HLAerror
        mov        esp, ebx 
        pop        ebx
        xor        eax, eax 
        jmp        exit__hla_503

Real8032__hla_500:
        mov        eax, [ebp+28] 
        fld        real4 ptr [eax]
        fstp       real10 ptr [eax]
        mov        byte ptr [ecx], 22 
        mov        dword ptr [esi], offset32  _real80_ste
        mov        eax, 1 
        jmp        exit__hla_503

Real8064__hla_547:
        mov        eax, [ebp+28] 
        fld        real8 ptr [eax]
        fstp       real10 ptr [eax]
        mov        byte ptr [ecx], 22 
        mov        dword ptr [esi], offset32  _real80_ste
        mov        eax, 1 
        jmp        exit__hla_503

Uns8Byte__hla_256:

ByteUns8__hla_319:
        mov        byte ptr [ecx], 2 
        mov        dword ptr [esi], offset32  _uns8_ste
        mov        byte ptr [ebx], 2 
        mov        dword ptr [edi], offset32  _uns8_ste
        mov        eax, 1 
        jmp        exit__hla_503

Uns8Word__hla_257:

Uns16Word__hla_275:

Uns8Uns16__hla_252:

ByteUns16__hla_320:

WordUns16__hla_335:

Uns16Uns8__hla_270:

Uns16Byte__hla_274:

WordUns8__hla_334:
        mov        byte ptr [ebx], 3 
        mov        dword ptr [edi], offset32  _uns16_ste
        mov        byte ptr [ecx], 3 
        mov        dword ptr [esi], offset32  _uns16_ste
        mov        eax, 1 
        jmp        exit__hla_503

Uns8DWord__hla_258:

Uns16DWord__hla_276:

Uns32DWord__hla_291:

ByteUns32__hla_321:

Uns8Uns32__hla_253:

Uns16Uns32__hla_271:

WordUns32__hla_336:

DWordUns32__hla_351:

Uns32Uns8__hla_285:

Uns32Byte__hla_289:

Uns32Word__hla_290:

Uns32Uns16__hla_286:

DWordUns8__hla_349:

DWordUns16__hla_350:
        mov        byte ptr [ebx], 4 
        mov        dword ptr [edi], offset32  _uns32_ste
        mov        byte ptr [ecx], 4 
        mov        dword ptr [esi], offset32  _uns32_ste
        mov        eax, 1 
        jmp        exit__hla_503

Uns8Int8__hla_262:
        mov        eax, [ebp+24] 
        cmp        byte ptr [eax], 128 
        jnae       false__hla_548
        mov        byte ptr [ebx], 14 
        mov        dword ptr [edi], offset32  _int16_ste
        mov        byte ptr [ecx], 14 
        mov        dword ptr [esi], offset32  _int16_ste
        jmp        endif__hla_548
false__hla_548:
        mov        byte ptr [ebx], 13 
        mov        dword ptr [edi], offset32  _int8_ste
endif__hla_548:
        mov        eax, 1 
        jmp        exit__hla_503

Int8Uns8__hla_409:
        mov        eax, [ebp+28] 
        cmp        byte ptr [eax], 128 
        jnae       false__hla_549
        mov        byte ptr [ebx], 14 
        mov        dword ptr [edi], offset32  _int16_ste
        mov        byte ptr [ecx], 14 
        mov        dword ptr [esi], offset32  _int16_ste
        jmp        endif__hla_549
false__hla_549:
        mov        byte ptr [ecx], 13 
        mov        dword ptr [esi], offset32  _int8_ste
endif__hla_549:
        mov        eax, 1 
        jmp        exit__hla_503

Int8Byte__hla_414:

ByteInt8__hla_329:
        mov        byte ptr [ecx], 13 
        mov        dword ptr [esi], offset32  _int8_ste
        mov        byte ptr [ecx], 13 
        mov        dword ptr [esi], offset32  _int8_ste
        mov        eax, 1 
        jmp        exit__hla_503

Uns8Int16__hla_263:

Int8Int16__hla_420:

Int16Int8__hla_438:

ByteInt16__hla_330:

Int16Byte__hla_432:

Int16Uns8__hla_427:

Int16Word__hla_433:

Int8Word__hla_415:

WordInt8__hla_344:

WordInt16__hla_345:
        mov        byte ptr [ecx], 14 
        mov        dword ptr [esi], offset32  _int16_ste
        mov        byte ptr [ebx], 14 
        mov        dword ptr [edi], offset32  _int16_ste
        mov        eax, 1 
        jmp        exit__hla_503

Int8DWord__hla_416:

Int8Int32__hla_421:

Int16DWord__hla_434:

Int16Int32__hla_439:

Int32Uns8__hla_442:

Int32Uns16__hla_443:

Int32Int8__hla_453:

Int32Int16__hla_454:

Int32Byte__hla_447:

Int32Word__hla_448:

Int32DWord__hla_449:

Uns8Int32__hla_264:

Uns16Int32__hla_282:

ByteInt32__hla_331:

WordInt32__hla_346:

DWordInt8__hla_359:

DWordInt16__hla_360:

DWordInt32__hla_361:
        mov        byte ptr [ecx], 15 
        mov        dword ptr [esi], offset32  _int32_ste
        mov        byte ptr [ebx], 15 
        mov        dword ptr [edi], offset32  _int32_ste
        mov        eax, 1 
        jmp        exit__hla_503

Uns8Int64__hla_265:

Uns16Int64__hla_283:

Uns32Int64__hla_298:

Int64Uns8__hla_457:

Int64Uns16__hla_458:

Int64Uns32__hla_459:

Int8Int64__hla_422:

Int8QWord__hla_417:

Int16Int64__hla_440:

Int16QWord__hla_435:

Int32Int64__hla_455:

Int32QWord__hla_450:

Int64Int8__hla_468:

Int64Int16__hla_469:

Int64Int32__hla_470:

Int64Byte__hla_462:

Int64Word__hla_463:

Int64DWord__hla_464:

Int64QWord__hla_465:

ByteInt64__hla_332:

WordInt64__hla_347:

DWordInt64__hla_362:

QWordInt8__hla_374:

QWordInt16__hla_375:

QWordInt32__hla_376:

QWordInt64__hla_377:
        mov        byte ptr [ebx], 16 
        mov        dword ptr [edi], offset32  _int64_ste
        mov        byte ptr [ecx], 16 
        mov        dword ptr [esi], offset32  _int64_ste
        mov        eax, 1 
        jmp        exit__hla_503

Uns8TByte__hla_260:

TByteUns8__hla_379:

Uns16TByte__hla_278:

TByteUns16__hla_380:

Uns32TByte__hla_293:

TByteUns32__hla_381:

Uns64TByte__hla_308:

TByteUns64__hla_382:

ByteTByte__hla_327:

TByteByte__hla_384:

WordTByte__hla_342:

TByteWord__hla_385:

DWordTByte__hla_357:

TByteDWord__hla_386:

QWordTByte__hla_372:

TByteQWord__hla_387:
        mov        byte ptr [ebx], 11 
        mov        dword ptr [edi], offset32  _tbyte_ste
        mov        byte ptr [ecx], 11 
        mov        dword ptr [esi], offset32  _tbyte_ste
        mov        eax, 1 
        jmp        exit__hla_503

Int8TByte__hla_418:

TByteInt8__hla_389:

Int16TByte__hla_436:

TByteInt16__hla_390:

Int32TByte__hla_451:

TByteInt32__hla_391:

Int64TByte__hla_466:

TByteInt64__hla_392:
        mov        byte ptr [ebx], 17 
        mov        dword ptr [edi], offset32  _int128_ste
        mov        byte ptr [ecx], 17 
        mov        dword ptr [esi], offset32  _int128_ste
        mov        eax, 1 
        jmp        exit__hla_503

Int8Uns16__hla_410:
        mov        eax, [ebp+28] 
        cmp        byte ptr [eax+1], 128 
        jnae       false__hla_550
        mov        byte ptr [ebx], 15 
        mov        dword ptr [edi], offset32  _int32_ste
        mov        byte ptr [ecx], 15 
        mov        dword ptr [esi], offset32  _int32_ste
        jmp        endif__hla_550
false__hla_550:
        mov        byte ptr [ebx], 14 
        mov        dword ptr [edi], offset32  _int16_ste
        mov        byte ptr [ecx], 14 
        mov        dword ptr [esi], offset32  _int16_ste
endif__hla_550:
        mov        eax, 1 
        jmp        exit__hla_503

Uns16Int8__hla_280:
        mov        eax, [ebp+24] 
        cmp        byte ptr [eax+1], 128 
        jnae       false__hla_551
        mov        byte ptr [ebx], 15 
        mov        dword ptr [edi], offset32  _int32_ste
        mov        byte ptr [ecx], 15 
        mov        dword ptr [esi], offset32  _int32_ste
        jmp        endif__hla_551
false__hla_551:
        mov        byte ptr [ebx], 14 
        mov        dword ptr [edi], offset32  _int16_ste
        mov        byte ptr [ecx], 14 
        mov        dword ptr [esi], offset32  _int16_ste
endif__hla_551:
        mov        eax, 1 
        jmp        exit__hla_503

Int8Uns32__hla_411:

Int16Uns32__hla_429:

Int32Uns32__hla_444:
        mov        eax, [ebp+28] 
        cmp        byte ptr [eax+3], 128 
        jnae       false__hla_552
        mov        byte ptr [ebx], 16 
        mov        dword ptr [edi], offset32  _int64_ste
        mov        byte ptr [ecx], 16 
        mov        dword ptr [esi], offset32  _int64_ste
        jmp        endif__hla_552
false__hla_552:
        mov        byte ptr [ebx], 15 
        mov        dword ptr [edi], offset32  _int32_ste
        mov        byte ptr [ecx], 15 
        mov        dword ptr [esi], offset32  _int32_ste
endif__hla_552:
        mov        eax, 1 
        jmp        exit__hla_503

Uns32Int8__hla_295:

Uns32Int16__hla_296:

Uns32Int32__hla_297:
        mov        eax, [ebp+24] 
        cmp        byte ptr [eax+3], 128 
        jnae       false__hla_553
        mov        byte ptr [ebx], 16 
        mov        dword ptr [edi], offset32  _int64_ste
        mov        byte ptr [ecx], 16 
        mov        dword ptr [esi], offset32  _int64_ste
        jmp        endif__hla_553
false__hla_553:
        mov        byte ptr [ebx], 15 
        mov        dword ptr [edi], offset32  _int32_ste
        mov        byte ptr [ecx], 15 
        mov        dword ptr [esi], offset32  _int32_ste
endif__hla_553:
        mov        eax, 1 
        jmp        exit__hla_503

Int8Uns64__hla_412:

Int16Uns64__hla_430:

Int32Uns64__hla_445:

Int64Uns64__hla_460:
        mov        eax, [ebp+28] 
        cmp        byte ptr [eax+7], 128 
        jnae       false__hla_554
        mov        byte ptr [ebx], 17 
        mov        dword ptr [edi], offset32  _int128_ste
        mov        byte ptr [ecx], 17 
        mov        dword ptr [esi], offset32  _int128_ste
        jmp        endif__hla_554
false__hla_554:
        mov        byte ptr [ebx], 16 
        mov        dword ptr [edi], offset32  _int64_ste
        mov        byte ptr [ecx], 16 
        mov        dword ptr [esi], offset32  _int64_ste
endif__hla_554:
        mov        eax, 1 
        jmp        exit__hla_503

Uns64Int8__hla_310:

Uns64Int16__hla_311:

Uns64Int32__hla_312:

Uns64Int64__hla_313:
        mov        eax, [ebp+24] 
        cmp        byte ptr [eax+7], 128 
        jnae       false__hla_555
        mov        byte ptr [ebx], 17 
        mov        dword ptr [edi], offset32  _int128_ste
        mov        byte ptr [ecx], 17 
        mov        dword ptr [esi], offset32  _int128_ste
        jmp        endif__hla_555
false__hla_555:
        mov        byte ptr [ebx], 16 
        mov        dword ptr [edi], offset32  _int64_ste
        mov        byte ptr [ecx], 16 
        mov        dword ptr [esi], offset32  _int64_ste
endif__hla_555:
        mov        eax, 1 
        jmp        exit__hla_503

Uns16Int16__hla_281:
        mov        eax, [ebp+24] 
        cmp        byte ptr [eax+1], 128 
        jnae       false__hla_556
        mov        byte ptr [ebx], 15 
        mov        dword ptr [edi], offset32  _int32_ste
        mov        byte ptr [ecx], 15 
        mov        dword ptr [esi], offset32  _int32_ste
        jmp        endif__hla_556
false__hla_556:
        mov        byte ptr [ebx], 14 
        mov        dword ptr [edi], offset32  _int16_ste
endif__hla_556:
        mov        eax, 1 
        jmp        exit__hla_503

Int16Uns16__hla_428:
        mov        eax, [ebp+28] 
        cmp        byte ptr [eax+1], 128 
        jnae       false__hla_557
        mov        byte ptr [ebx], 15 
        mov        dword ptr [edi], offset32  _int32_ste
        mov        byte ptr [ecx], 15 
        mov        dword ptr [esi], offset32  _int32_ste
        jmp        endif__hla_557
false__hla_557:
        mov        byte ptr [ecx], 14 
        mov        dword ptr [esi], offset32  _int16_ste
endif__hla_557:
        mov        eax, 1 
        jmp        exit__hla_503

Uns64Uns8__hla_300:

Uns64Byte__hla_304:

Uns64Word__hla_305:

Uns64Uns16__hla_301:

Uns64DWord__hla_306:

Uns64Uns32__hla_302:

QWordUns8__hla_364:

QWordUns16__hla_365:

QWordUns32__hla_366:

Uns8Uns64__hla_254:

Uns16Uns64__hla_272:

Uns32Uns64__hla_287:

Uns8QWord__hla_259:

Uns16QWord__hla_277:

Uns32QWord__hla_292:

Uns64QWord__hla_307:

ByteUns64__hla_322:

WordUns64__hla_337:

DWordUns64__hla_352:

QWordUns64__hla_367:
        mov        byte ptr [ebx], 5 
        mov        dword ptr [edi], offset32  _uns64_ste
        mov        byte ptr [ecx], 5 
        mov        dword ptr [esi], offset32  _uns64_ste
        mov        eax, 1 
        jmp        exit__hla_503

Uns8Uns128__hla_255:

Uns16Uns128__hla_273:

Uns32Uns128__hla_288:

Uns64Uns128__hla_303:

Uns128Uns8__hla_315:

Uns128Uns16__hla_316:

Uns128Uns32__hla_317:

Uns128Uns64__hla_318:

Uns128Byte__hla_558:

Uns128Word__hla_559:

Uns128DWord__hla_560:

Uns128QWord__hla_561:

Uns128TByte__hla_562:

LWordUns8__hla_394:

LWordUns16__hla_395:

LWordUns32__hla_396:

LWordUns64__hla_397:

LWordUns128__hla_398:

Uns8LWord__hla_261:

Uns16LWord__hla_279:

Uns32LWord__hla_294:

Uns64LWord__hla_309:

ByteUns128__hla_323:

WordUns128__hla_338:

DWordUns128__hla_353:

QWordUns128__hla_368:

TByteUns128__hla_383:
        mov        byte ptr [ebx], 6 
        mov        dword ptr [edi], offset32  _uns128_ste
        mov        byte ptr [ecx], 6 
        mov        dword ptr [esi], offset32  _uns128_ste
        mov        eax, 1 
        jmp        exit__hla_503

Uns8Int128__hla_266:

Uns16Int128__hla_284:

Uns32Int128__hla_299:

Uns64Int128__hla_314:

Uns128Int8__hla_563:

Uns128Int16__hla_564:

Uns128Int32__hla_565:

Uns128Int64__hla_566:

Uns128Int128__hla_567:

ByteInt128__hla_333:

WordInt128__hla_348:

DWordInt128__hla_363:

QWordInt128__hla_378:

TByteInt128__hla_393:

LWordInt8__hla_404:

LWordInt16__hla_405:

LWordInt32__hla_406:

LWordInt64__hla_407:

LWordInt128__hla_408:

Int8Uns128__hla_413:

Int8Int128__hla_423:

Int8LWord__hla_419:

Int16Int128__hla_441:

Int16Uns128__hla_431:

Int16LWord__hla_437:

Int32Int128__hla_456:

Int32Uns128__hla_446:

Int32LWord__hla_452:

Int64Int128__hla_471:

Int64Uns128__hla_461:

Int64LWord__hla_467:

Int128Uns8__hla_472:

Int128Uns16__hla_473:

Int128Uns32__hla_474:

Int128Uns64__hla_475:

Int128Uns128__hla_476:

Int128Byte__hla_477:

Int128Word__hla_478:

Int128DWord__hla_479:

Int128QWord__hla_480:

Int128TByte__hla_481:

Int128LWord__hla_482:

Int128Int8__hla_483:

Int128Int16__hla_484:

Int128Int32__hla_485:

Int128Int64__hla_486:
        mov        byte ptr [ebx], 17 
        mov        dword ptr [edi], offset32  _int128_ste
        mov        byte ptr [ecx], 17 
        mov        dword ptr [esi], offset32  _int128_ste
        mov        eax, 1 
        jmp        exit__hla_503

ByteWord__hla_324:

WordByte__hla_339:
        mov        byte ptr [ebx], 8 
        mov        dword ptr [edi], offset32  _word_ste
        mov        byte ptr [ecx], 8 
        mov        dword ptr [esi], offset32  _word_ste
        mov        eax, 1 
        jmp        exit__hla_503

ByteDWord__hla_325:

WordDWord__hla_340:

DWordByte__hla_354:

DWordWord__hla_355:
        mov        byte ptr [ebx], 9 
        mov        dword ptr [edi], offset32  _dword_ste
        mov        byte ptr [ecx], 9 
        mov        dword ptr [esi], offset32  _dword_ste
        mov        eax, 1 
        jmp        exit__hla_503

ByteQWord__hla_326:

WordQWord__hla_341:

DWordQWord__hla_356:

QWordByte__hla_369:

QWordWord__hla_370:

QWordDWord__hla_371:
        mov        byte ptr [ebx], 10 
        mov        dword ptr [edi], offset32  _qword_ste
        mov        byte ptr [ecx], 10 
        mov        dword ptr [esi], offset32  _qword_ste
        mov        eax, 1 
        jmp        exit__hla_503

ByteLWord__hla_328:

WordLWord__hla_343:

DWordLWord__hla_358:

QWordLWord__hla_373:

TByteLWord__hla_388:

LWordByte__hla_399:

LWordWord__hla_400:

LWordDWord__hla_401:

LWordQWord__hla_402:

LWordTByte__hla_403:
        mov        byte ptr [ebx], 12 
        mov        dword ptr [edi], offset32  _lword_ste
        mov        byte ptr [ecx], 12 
        mov        dword ptr [esi], offset32  _lword_ste
        mov        eax, 1 
        jmp        exit__hla_503

s__hla_250:
        mov        eax, 1 
        jmp        exit__hla_503

x__hla_251:
        xor        eax, eax 
exit__hla_503:
        pop        esi
        pop        edi
        pop        edx
        pop        ecx
        pop        ebx
x_MakeCompAsm:
        mov        esp, ebp 
        pop        ebp
        ret
_MakeCompAsm endp

_UnsLT  proc near32
        push        ebp
        mov        ebp, esp 
        push        esi
        push        edi
        push        ebx
        mov        esi, [ebp+8] 
        mov        edi, [ebp+12] 
        xor        eax, eax 
        mov        ebx, [esi+12] 
        cmp        ebx, [edi+12] 
        setb       al
        jnz        false__hla_568
        mov        ebx, [esi+8] 
        cmp        ebx, [edi+8] 
        setb       al
        jnz        false__hla_569
        mov        ebx, [esi+4] 
        cmp        ebx, [edi+4] 
        setb       al
        jnz        false__hla_570
        mov        ebx, [esi] 
        cmp        ebx, [edi] 
        setb       al
false__hla_570:
false__hla_569:
false__hla_568:
        pop        ebx
        pop        edi
        pop        esi
x_UnsLT:
        mov        esp, ebp 
        pop        ebp
        ret
_UnsLT  endp

_UnsLE  proc near32
        push        ebp
        mov        ebp, esp 
        push        esi
        push        edi
        push        ebx
        mov        esi, [ebp+8] 
        mov        edi, [ebp+12] 
        xor        eax, eax 
        mov        ebx, [esi+12] 
        cmp        ebx, [edi+12] 
        setb       al
        jnz        false__hla_571
        mov        ebx, [esi+8] 
        cmp        ebx, [edi+8] 
        setb       al
        jnz        false__hla_572
        mov        ebx, [esi+4] 
        cmp        ebx, [edi+4] 
        setb       al
        jnz        false__hla_573
        mov        ebx, [esi] 
        cmp        ebx, [edi] 
        setbe      al
false__hla_573:
false__hla_572:
false__hla_571:
        pop        ebx
        pop        edi
        pop        esi
x_UnsLE:
        mov        esp, ebp 
        pop        ebp
        ret
_UnsLE  endp

_UnsGT  proc near32
        push        ebp
        mov        ebp, esp 
        push        esi
        push        edi
        push        ebx
        mov        esi, [ebp+8] 
        mov        edi, [ebp+12] 
        xor        eax, eax 
        mov        ebx, [esi+12] 
        cmp        ebx, [edi+12] 
        setnbe     al
        jnz        false__hla_574
        mov        ebx, [esi+8] 
        cmp        ebx, [edi+8] 
        setnbe     al
        jnz        false__hla_575
        mov        ebx, [esi+4] 
        cmp        ebx, [edi+4] 
        setnbe     al
        jnz        false__hla_576
        mov        ebx, [esi] 
        cmp        ebx, [edi] 
        setnbe     al
false__hla_576:
false__hla_575:
false__hla_574:
        pop        ebx
        pop        edi
        pop        esi
x_UnsGT:
        mov        esp, ebp 
        pop        ebp
        ret
_UnsGT  endp

_UnsGE  proc near32
        push        ebp
        mov        ebp, esp 
        push        esi
        push        edi
        push        ebx
        mov        esi, [ebp+8] 
        mov        edi, [ebp+12] 
        xor        eax, eax 
        mov        ebx, [esi+12] 
        cmp        ebx, [edi+12] 
        setnbe     al
        jnz        false__hla_577
        mov        ebx, [esi+8] 
        cmp        ebx, [edi+8] 
        setnbe     al
        jnz        false__hla_578
        mov        ebx, [esi+4] 
        cmp        ebx, [edi+4] 
        setnbe     al
        jnz        false__hla_579
        mov        ebx, [esi] 
        cmp        ebx, [edi] 
        setnb      al
false__hla_579:
false__hla_578:
false__hla_577:
        pop        ebx
        pop        edi
        pop        esi
x_UnsGE:
        mov        esp, ebp 
        pop        ebp
        ret
_UnsGE  endp

_IntLT  proc near32
        push        ebp
        mov        ebp, esp 
        push        esi
        push        edi
        push        ebx
        mov        esi, [ebp+8] 
        mov        edi, [ebp+12] 
        xor        eax, eax 
        mov        ebx, [esi+12] 
        cmp        ebx, [edi+12] 
        setl       al
        jnz        false__hla_580
        mov        ebx, [esi+8] 
        cmp        ebx, [edi+8] 
        setl       al
        jnz        false__hla_581
        mov        ebx, [esi+4] 
        cmp        ebx, [edi+4] 
        setl       al
        jnz        false__hla_582
        mov        ebx, [esi] 
        cmp        ebx, [edi] 
        setl       al
false__hla_582:
false__hla_581:
false__hla_580:
        pop        ebx
        pop        edi
        pop        esi
x_IntLT:
        mov        esp, ebp 
        pop        ebp
        ret
_IntLT  endp

_IntLE  proc near32
        push        ebp
        mov        ebp, esp 
        push        esi
        push        edi
        push        ebx
        mov        esi, [ebp+8] 
        mov        edi, [ebp+12] 
        xor        eax, eax 
        mov        ebx, [esi+12] 
        cmp        ebx, [edi+12] 
        setl       al
        jnz        false__hla_583
        mov        ebx, [esi+8] 
        cmp        ebx, [edi+8] 
        setl       al
        jnz        false__hla_584
        mov        ebx, [esi+4] 
        cmp        ebx, [edi+4] 
        setl       al
        jnz        false__hla_585
        mov        ebx, [esi] 
        cmp        ebx, [edi] 
        setle      al
false__hla_585:
false__hla_584:
false__hla_583:
        pop        ebx
        pop        edi
        pop        esi
x_IntLE:
        mov        esp, ebp 
        pop        ebp
        ret
_IntLE  endp

_IntGT  proc near32
        push        ebp
        mov        ebp, esp 
        push        esi
        push        edi
        push        ebx
        mov        esi, [ebp+8] 
        mov        edi, [ebp+12] 
        xor        eax, eax 
        mov        ebx, [esi+12] 
        cmp        ebx, [edi+12] 
        setnle     al
        jnz        false__hla_586
        mov        ebx, [esi+8] 
        cmp        ebx, [edi+8] 
        setnle     al
        jnz        false__hla_587
        mov        ebx, [esi+4] 
        cmp        ebx, [edi+4] 
        setnle     al
        jnz        false__hla_588
        mov        ebx, [esi] 
        cmp        ebx, [edi] 
        setnle     al
false__hla_588:
false__hla_587:
false__hla_586:
        pop        ebx
        pop        edi
        pop        esi
x_IntGT:
        mov        esp, ebp 
        pop        ebp
        ret
_IntGT  endp

_IntGE  proc near32
        push        ebp
        mov        ebp, esp 
        push        esi
        push        edi
        push        ebx
        mov        esi, [ebp+8] 
        mov        edi, [ebp+12] 
        xor        eax, eax 
        mov        ebx, [esi+12] 
        cmp        ebx, [edi+12] 
        setnle     al
        jnz        false__hla_589
        mov        ebx, [esi+8] 
        cmp        ebx, [edi+8] 
        setnle     al
        jnz        false__hla_590
        mov        ebx, [esi+4] 
        cmp        ebx, [edi+4] 
        setnle     al
        jnz        false__hla_591
        mov        ebx, [esi] 
        cmp        ebx, [edi] 
        setnl      al
false__hla_591:
false__hla_590:
false__hla_589:
        pop        ebx
        pop        edi
        pop        esi
x_IntGE:
        mov        esp, ebp 
        pop        ebp
        ret
_IntGE  endp

_negval proc near32
        push        ebp
        mov        ebp, esp 
        push        ebx
        push        ecx
        push        edx
        push        edi
        push        esi
        mov        ebx, [ebp+12] 
        mov        ecx, [ebp+8] 
        mov        edi, [ebp+20] 
        mov        esi, [ebp+24] 
        movzx      eax, byte ptr [ebp+16] 
        cmp        eax, 2 
        jl         default__hla_592
        cmp        eax, 27 
        jg         default__hla_592
        jmp        dword ptr jmpTbl__hla_592[eax*4-8]
case__hla_593::
        mov        byte ptr [edi], 13 
        mov        dword ptr [esi], offset32  _int8_ste
        jmp        endswitch__hla_592
case__hla_594::
        mov        byte ptr [edi], 7 
        mov        dword ptr [esi], offset32  _byte_ste
        jmp        endswitch__hla_592
case__hla_595::
        mov        byte ptr [edi], 14 
        mov        dword ptr [esi], offset32  _int16_ste
        jmp        endswitch__hla_592
case__hla_596::
        mov        byte ptr [edi], 8 
        mov        dword ptr [esi], offset32  _word_ste
        jmp        endswitch__hla_592
case__hla_597::
        mov        byte ptr [edi], 15 
        mov        dword ptr [esi], offset32  _int32_ste
        jmp        endswitch__hla_592
case__hla_598::
        mov        byte ptr [edi], 9 
        mov        dword ptr [esi], offset32  _dword_ste
        jmp        endswitch__hla_592
case__hla_599::
        mov        byte ptr [edi], 16 
        mov        dword ptr [esi], offset32  _int64_ste
        jmp        endswitch__hla_592
case__hla_600::
        mov        byte ptr [edi], 10 
        mov        dword ptr [esi], offset32  _qword_ste
        jmp        endswitch__hla_592
case__hla_601::
        mov        byte ptr [edi], 11 
        mov        dword ptr [esi], offset32  _tbyte_ste
        jmp        endswitch__hla_592
case__hla_602::
        mov        byte ptr [edi], 17 
        mov        dword ptr [esi], offset32  _int128_ste
        jmp        endswitch__hla_592
case__hla_603::
        mov        byte ptr [edi], 12 
        mov        dword ptr [esi], offset32  _lword_ste
        jmp        endswitch__hla_592
case__hla_604::
        mov        byte ptr [edi], 13 
        mov        dword ptr [esi], offset32  _int8_ste
        cmp        byte ptr [ebx], 128 
        jnae       false__hla_605
        mov        byte ptr [edi], 14 
        mov        dword ptr [esi], offset32  _int16_ste
false__hla_605:
        jmp        endswitch__hla_592
case__hla_606::
        mov        byte ptr [edi], 14 
        mov        dword ptr [esi], offset32  _int16_ste
        cmp        byte ptr [ebx+1], 128 
        jnae       false__hla_607
        mov        byte ptr [edi], 15 
        mov        dword ptr [esi], offset32  _int32_ste
false__hla_607:
        jmp        endswitch__hla_592
case__hla_608::
        mov        byte ptr [edi], 15 
        mov        dword ptr [esi], offset32  _int32_ste
        cmp        byte ptr [ebx+3], 128 
        jnae       false__hla_609
        mov        byte ptr [edi], 16 
        mov        dword ptr [esi], offset32  _int64_ste
false__hla_609:
        jmp        endswitch__hla_592
case__hla_610::
        mov        byte ptr [edi], 16 
        mov        dword ptr [esi], offset32  _int64_ste
        cmp        byte ptr [ebx+7], 128 
        jnae       false__hla_611
        mov        byte ptr [edi], 17 
        mov        dword ptr [esi], offset32  _int128_ste
false__hla_611:
        jmp        endswitch__hla_592
case__hla_612::
        mov        byte ptr [edi], 17 
        mov        dword ptr [esi], offset32  _int128_ste
        jmp        endswitch__hla_592
case__hla_613::
        fld        real4 ptr [ebx]
        fchs
        fstp       real4 ptr [ecx]
        mov        byte ptr [edi], 20 
        mov        dword ptr [esi], offset32  _real32_ste
        jmp        endswitch__hla_592
case__hla_614::
        fld        real8 ptr [ebx]
        fchs
        fstp       real8 ptr [ecx]
        mov        byte ptr [edi], 21 
        mov        dword ptr [esi], offset32  _real64_ste
        jmp        endswitch__hla_592
case__hla_615::
        fld        real10 ptr [ebx]
        fchs
        fstp       real10 ptr [ecx]
        mov        byte ptr [edi], 22 
        mov        dword ptr [esi], offset32  _real80_ste
        jmp        endswitch__hla_592
case__hla_616::
        mov        eax, [ebx] 
        not        eax
        mov        [ecx], eax 
        mov        eax, [ebx+4] 
        not        eax
        mov        [ecx+4], eax 
        mov        eax, [ebx+8] 
        not        eax
        mov        [ecx+8], eax 
        mov        eax, [ebx+12] 
        not        eax
        mov        [ecx+12], eax 
        mov        byte ptr [edi], 27 
        mov        dword ptr [esi], offset32  _cset_ste
        jmp        endswitch__hla_592
default__hla_592::
        push        ebx
        mov        ebx, esp 
        sub        esp, 28 
        and        esp, -16 
        pushd      offset32 str__hla_516
        pushd      5805

        pushd      offset32 str__hla_617

        call       _HLAerror
        mov        esp, ebx 
        pop        ebx
        xor        eax, eax 
        mov        [ecx], eax 
        mov        [ecx+4], eax 
        mov        [ecx+8], eax 
        mov        [ecx+12], eax 
        mov        byte ptr [edi], 2 
        mov        dword ptr [esi], offset32  _uns8_ste
endswitch__hla_592:
        cmp        byte ptr [ebp+16], 17 
        jnbe       false__hla_618
        xor        eax, eax 
        sub        eax, [ebx] 
        mov        [ecx], eax 
        mov        eax, 0 
        sbb        eax, [ebx+4] 
        mov        [ecx+4], eax 
        mov        eax, 0 
        sbb        eax, [ebx+8] 
        mov        [ecx+8], eax 
        mov        eax, 0 
        sbb        eax, [ebx+12] 
        mov        [ecx+12], eax 
        push        esi
        push        edi

        push        ecx

        call       _compactType
        add        esp, 12 
false__hla_618:
        pop        esi
        pop        edi
        pop        edx
        pop        ecx
        pop        ebx
x_negval:
        mov        esp, ebp 
        pop        ebp
        ret
_negval endp

_notval proc near32
        push        ebp
        mov        ebp, esp 
        push        ebx
        push        ecx
        push        edx
        push        edi
        push        esi
        mov        ebx, [ebp+12] 
        mov        ecx, [ebp+8] 
        mov        edi, [ebp+20] 
        mov        esi, [ebp+24] 
        movzx      eax, byte ptr [ebp+16] 
        cmp        eax, 17 
        jg         default__hla_619
        jmp        dword ptr jmpTbl__hla_619[eax*4]
case__hla_620::
        movzx      eax, byte ptr [ebx] 
        and        al, 1 
        xor        al, 1 
        mov        [ecx], eax 
        mov        dword ptr [ecx+4], 0 
        mov        dword ptr [ecx+8], 0 
        mov        dword ptr [ecx+12], 0 
        mov        byte ptr [edi], 0 
        mov        dword ptr [esi], offset32  _boolean_ste
        jmp        endswitch__hla_619
case__hla_621::
        mov        eax, [ebx] 
        mov        al, ah 
        or         eax, [ebx+4] 
        or         eax, [ebx+8] 
        or         eax, [ebx+12] 
        jz         false__hla_622
        mov        eax, -1 
false__hla_622:
        not        eax
        mov        [ecx], eax 
        mov        [ecx+4], eax 
        mov        [ecx+8], eax 
        mov        [ecx+12], eax 
        mov        al, [ebx] 
        not        al
        mov        [ecx], al 
        mov        byte ptr [edi], 7 
        mov        dword ptr [esi], offset32  _byte_ste
        jmp        endswitch__hla_619
case__hla_623::
        mov        al, [ebx] 
        not        al
        or         eax, -256 
        mov        [ecx], eax 
        mov        al, ah 
        mov        [ecx+4], eax 
        mov        [ecx+8], eax 
        mov        [ecx+12], eax 
        mov        byte ptr [edi], 7 
        mov        dword ptr [esi], offset32  _byte_ste
        jmp        endswitch__hla_619
case__hla_624::
        movsx      eax, word ptr [ebx+2] 
        or         eax, [ebx+4] 
        or         eax, [ebx+8] 
        or         eax, [ebx+12] 
        jz         false__hla_625
        or         eax, -1 
false__hla_625:
        not        eax
        mov        [ecx], eax 
        mov        [ecx+4], eax 
        mov        [ecx+8], eax 
        mov        [ecx+12], eax 
        mov        ax, [ebx] 
        not        ax
        mov        [ecx], ax 
        mov        byte ptr [edi], 8 
        mov        dword ptr [esi], offset32  _word_ste
        push        esi
        push        edi

        push        ecx

        call       _compactType
        add        esp, 12 
        jmp        endswitch__hla_619
case__hla_626::
        mov        ax, [ebx] 
        not        ax
        or         eax, -65536 
        mov        [ecx], eax 
        or         eax, -1 
        mov        [ecx+4], eax 
        mov        [ecx+8], eax 
        mov        [ecx+12], eax 
        mov        byte ptr [edi], 8 
        mov        dword ptr [esi], offset32  _word_ste
        push        esi
        push        edi

        push        ecx

        call       _compactType
        add        esp, 12 
        jmp        endswitch__hla_619
case__hla_627::
        mov        eax, [ebx] 
        not        eax
        mov        [ecx], eax 
        or         eax, -1 
        mov        [ecx+4], eax 
        mov        [ecx+8], eax 
        mov        [ecx+12], eax 
        mov        byte ptr [edi], 9 
        mov        dword ptr [esi], offset32  _dword_ste
        push        esi
        push        edi

        push        ecx

        call       _compactType
        add        esp, 12 
        jmp        endswitch__hla_619
case__hla_628::
        mov        eax, [ebx+4] 
        or         eax, [ebx+8] 
        or         eax, [ebx+12] 
        jz         false__hla_629
        or         eax, -1 
false__hla_629:
        not        eax
        mov        [ecx+4], eax 
        mov        [ecx+8], eax 
        mov        [ecx+12], eax 
        mov        eax, [ebx] 
        not        eax
        mov        [ecx], eax 
        mov        byte ptr [edi], 9 
        mov        dword ptr [esi], offset32  _dword_ste
        push        esi
        push        edi

        push        ecx

        call       _compactType
        add        esp, 12 
        jmp        endswitch__hla_619
case__hla_630::
        mov        eax, [ebx] 
        not        eax
        mov        [ecx], eax 
        mov        eax, [ebx+4] 
        not        eax
        mov        [ecx+4], eax 
        or         eax, -1 
        mov        [ecx+8], eax 
        mov        [ecx+12], eax 
        mov        byte ptr [edi], 10 
        mov        dword ptr [esi], offset32  _qword_ste
        push        esi
        push        edi

        push        ecx

        call       _compactType
        add        esp, 12 
        jmp        endswitch__hla_619
case__hla_631::
        mov        eax, [ebx+8] 
        or         eax, [ebx+12] 
        jz         false__hla_632
        mov        eax, -1 
false__hla_632:
        not        eax
        mov        [ecx+8], eax 
        mov        [ecx+12], eax 
        mov        eax, [ebx] 
        not        eax
        mov        [ecx], eax 
        mov        eax, [ebx+4] 
        not        eax
        mov        [ecx+4], eax 
        mov        byte ptr [edi], 10 
        mov        dword ptr [esi], offset32  _qword_ste
        push        esi
        push        edi

        push        ecx

        call       _compactType
        add        esp, 12 
        jmp        endswitch__hla_619
case__hla_633::
        movzx      eax, word ptr [ebx+10] 
        or         eax, [ebx+12] 
        jz         false__hla_634
        or         eax, -1 
false__hla_634:
        not        eax
        mov        [ecx+10], ax 
        mov        [ecx+12], eax 
        mov        eax, [ebx] 
        not        eax
        mov        [ecx], eax 
        mov        eax, [ebx+4] 
        not        eax
        mov        [ecx+4], eax 
        mov        ax, [ebx+8] 
        not        ax
        mov        [ecx+4], ax 
        mov        byte ptr [edi], 11 
        mov        dword ptr [esi], offset32  _tbyte_ste
        push        esi
        push        edi

        push        ecx

        call       _compactType
        add        esp, 12 
        jmp        endswitch__hla_619
case__hla_635::
        mov        eax, [ebx] 
        not        eax
        mov        [ecx], eax 
        mov        eax, [ebx+4] 
        not        eax
        mov        [ecx+4], eax 
        mov        eax, [ebx+8] 
        not        eax
        mov        [ecx+8], eax 
        mov        eax, [ebx+12] 
        not        eax
        mov        [ecx+12], eax 
        mov        byte ptr [edi], 12 
        mov        dword ptr [esi], offset32  _lword_ste
        push        esi
        push        edi

        push        ecx

        call       _compactType
        add        esp, 12 
        jmp        endswitch__hla_619
default__hla_619::
        push        ebx
        mov        ebx, esp 
        sub        esp, 28 
        and        esp, -16 
        pushd      offset32 str__hla_516
        pushd      6210

        pushd      offset32 str__hla_636

        call       _HLAerror
        mov        esp, ebx 
        pop        ebx
        xor        eax, eax 
        mov        [ecx], eax 
        mov        [ecx+4], eax 
        mov        [ecx+8], eax 
        mov        [ecx+12], eax 
        mov        byte ptr [edi], 2 
        mov        dword ptr [esi], offset32  _uns8_ste
endswitch__hla_619:
        pop        esi
        pop        edi
        pop        edx
        pop        ecx
        pop        ebx
x_notval:
        mov        esp, ebp 
        pop        ebp
        ret
_notval endp

_addval proc near32
        push        ebp
        mov        ebp, esp 
        push        esi
        push        edi
        push        ecx
        push        ebx
        mov        edi, [ebp+8] 
        mov        esi, [ebp+12] 
        mov        ebx, [ebp+16] 
        mov        ecx, [ebp+20] 
        movzx      eax, byte ptr [ebx] 
        cmp        eax, 2 
        jl         default__hla_637
        cmp        eax, 27 
        jg         default__hla_637
        jmp        dword ptr jmpTbl__hla_637[eax*4-8]
case__hla_638::
        mov        al, [esi] 
        add        [edi], al 
        jc         false__hla_639
        mov        byte ptr [edi+1], 0 
        jmp        endif__hla_639
false__hla_639:
        mov        byte ptr [edi+1], 1 
        mov        byte ptr [ebx], 3 
        mov        dword ptr [ecx], offset32  _uns16_ste
endif__hla_639:
        xor        eax, eax 
        mov        [edi+2], ax 
        mov        [edi+4], eax 
        mov        [edi+8], eax 
        mov        [edi+12], eax 
        jmp        endswitch__hla_637
case__hla_640::
        mov        eax, [esi] 
        add        [edi], eax 
        mov        eax, [esi+4] 
        adc        [edi+4], eax 
        mov        eax, [esi+8] 
        adc        [edi+8], eax 
        mov        eax, [esi+12] 
        adc        [edi+12], eax 
        movsx      eax, byte ptr [edi] 
        cmp        ah, [edi+1] 
        je         false__hla_641
        mov        byte ptr [ebx], 14 
        mov        dword ptr [ecx], offset32  _int16_ste
false__hla_641:
        jmp        endswitch__hla_637
case__hla_642::
        mov        al, [esi] 
        add        [edi], al 
        jc         false__hla_643
        mov        byte ptr [edi+1], 0 
        jmp        endif__hla_643
false__hla_643:
        mov        byte ptr [edi+1], 1 
        mov        byte ptr [ebx], 8 
        mov        dword ptr [ecx], offset32  _word_ste
endif__hla_643:
        xor        eax, eax 
        mov        [edi+2], ax 
        mov        [edi+4], eax 
        mov        [edi+8], eax 
        mov        [edi+12], eax 
        jmp        endswitch__hla_637
case__hla_644::
        mov        ax, [esi] 
        add        [edi], ax 
        jc         false__hla_645
        mov        word ptr [edi+2], 0 
        cmp        byte ptr [edi+1], 0 
        jne        false__hla_646
        mov        byte ptr [ebx], 2 
        mov        dword ptr [ecx], offset32  _uns8_ste
false__hla_646:
        jmp        endif__hla_645
false__hla_645:
        mov        word ptr [edi+2], 1 
        mov        byte ptr [ebx], 4 
        mov        dword ptr [ecx], offset32  _uns32_ste
endif__hla_645:
        xor        eax, eax 
        mov        [edi+4], eax 
        mov        [edi+8], eax 
        mov        [edi+12], eax 
        jmp        endswitch__hla_637
case__hla_647::
        mov        eax, [esi] 
        add        [edi], eax 
        mov        eax, [esi+4] 
        adc        [edi+4], eax 
        mov        eax, [esi+8] 
        adc        [edi+8], eax 
        mov        eax, [esi+12] 
        adc        [edi+12], eax 
        mov        byte ptr [ebx], 15 
        mov        dword ptr [ecx], offset32  _int32_ste
        push        ecx
        push        ebx

        push        edi

        call       _compactType
        add        esp, 12 
        jmp        endswitch__hla_637
case__hla_648::
        mov        ax, [esi] 
        add        [edi], ax 
        jc         false__hla_649
        mov        word ptr [edi+2], 0 
        cmp        byte ptr [edi+1], 0 
        jne        false__hla_650
        mov        byte ptr [ebx], 7 
        mov        dword ptr [ecx], offset32  _byte_ste
false__hla_650:
        jmp        endif__hla_649
false__hla_649:
        mov        word ptr [edi+2], 1 
        mov        byte ptr [ebx], 9 
        mov        dword ptr [ecx], offset32  _dword_ste
endif__hla_649:
        xor        eax, eax 
        mov        [edi+4], eax 
        mov        [edi+8], eax 
        mov        [edi+12], eax 
        jmp        endswitch__hla_637
case__hla_651::
        mov        eax, [esi] 
        add        [edi], eax 
        jc         false__hla_652
        mov        dword ptr [edi+4], 0 
        jmp        endif__hla_652
false__hla_652:
        mov        dword ptr [edi+4], 1 
endif__hla_652:
        xor        eax, eax 
        mov        [edi+8], eax 
        mov        [edi+12], eax 
        mov        byte ptr [ebx], 5 
        mov        dword ptr [ecx], offset32  _uns64_ste
        push        ecx
        push        ebx

        push        edi

        call       _compactType
        add        esp, 12 
        jmp        endswitch__hla_637
case__hla_653::
        mov        eax, [esi] 
        add        [edi], eax 
        mov        eax, [esi+4] 
        adc        [edi+4], eax 
        mov        eax, [esi+8] 
        adc        [edi+8], eax 
        mov        eax, [esi+12] 
        adc        [edi+12], eax 
        mov        byte ptr [ebx], 16 
        mov        dword ptr [ecx], offset32  _int64_ste
        push        ecx
        push        ebx

        push        edi

        call       _compactType
        add        esp, 12 
        jmp        endswitch__hla_637
case__hla_654::
        mov        eax, [esi] 
        add        [edi], eax 
        jc         false__hla_655
        mov        dword ptr [edi+4], 0 
        jmp        endif__hla_655
false__hla_655:
        mov        dword ptr [edi+4], 1 
endif__hla_655:
        xor        eax, eax 
        mov        [edi+8], eax 
        mov        [edi+12], eax 
        mov        byte ptr [ebx], 10 
        mov        dword ptr [ecx], offset32  _qword_ste
        push        ecx
        push        ebx

        push        edi

        call       _compactType
        add        esp, 12 
        jmp        endswitch__hla_637
case__hla_656::
        mov        eax, [esi] 
        add        [edi], eax 
        mov        eax, [esi+4] 
        adc        [edi+4], eax 
        jc         false__hla_657
        mov        dword ptr [edi+8], 0 
        jmp        endif__hla_657
false__hla_657:
        mov        dword ptr [edi+8], 1 
endif__hla_657:
        mov        dword ptr [edi+12], 0 
        mov        byte ptr [ebx], 6 
        mov        dword ptr [ecx], offset32  _uns128_ste
        push        ecx
        push        ebx

        push        edi

        call       _compactType
        add        esp, 12 
        jmp        endswitch__hla_637
case__hla_658::
        mov        eax, [esi] 
        add        [edi], eax 
        mov        eax, [esi+4] 
        adc        [edi+4], eax 
        mov        eax, [esi+8] 
        adc        [edi+8], eax 
        mov        eax, [esi+12] 
        adc        [edi+12], eax 
        mov        byte ptr [ebx], 17 
        mov        dword ptr [ecx], offset32  _int128_ste
        push        ecx
        push        ebx

        push        edi

        call       _compactType
        add        esp, 12 
        jmp        endswitch__hla_637
case__hla_659::
        mov        eax, [esi] 
        add        [edi], eax 
        mov        eax, [esi+4] 
        adc        [edi+4], eax 
        jc         false__hla_660
        mov        dword ptr [edi+8], 0 
        jmp        endif__hla_660
false__hla_660:
        mov        dword ptr [edi+8], 1 
endif__hla_660:
        mov        dword ptr [edi+12], 0 
        mov        byte ptr [ebx], 12 
        mov        dword ptr [ecx], offset32  _lword_ste
        push        ecx
        push        ebx

        push        edi

        call       _compactType
        add        esp, 12 
        jmp        endswitch__hla_637
case__hla_661::
        mov        eax, [esi] 
        add        [edi], eax 
        mov        eax, [esi+4] 
        adc        [edi+4], eax 
        mov        ax, [esi+8] 
        adc        [esi+8], ax 
        jc         false__hla_662
        mov        word ptr [edi+10], 0 
        jmp        endif__hla_662
false__hla_662:
        mov        word ptr [edi+10], 1 
endif__hla_662:
        mov        dword ptr [edi+12], 0 
        mov        byte ptr [ebx], 12 
        mov        dword ptr [ecx], offset32  _lword_ste
        push        ecx
        push        ebx

        push        edi

        call       _compactType
        add        esp, 12 
        jmp        endswitch__hla_637
case__hla_663::
        mov        eax, [esi] 
        add        [edi], eax 
        mov        eax, [esi+4] 
        adc        [edi+4], eax 
        mov        eax, [esi+8] 
        adc        [edi+8], eax 
        mov        eax, [esi+12] 
        adc        [edi+12], eax 
        mov        byte ptr [ebx], 6 
        mov        dword ptr [ecx], offset32  _uns128_ste
        push        ecx
        push        ebx

        push        edi

        call       _compactType
        add        esp, 12 
        jmp        endswitch__hla_637
case__hla_664::
        mov        eax, [esi] 
        add        [edi], eax 
        mov        eax, [esi+4] 
        adc        [edi+4], eax 
        mov        eax, [esi+8] 
        adc        [edi+8], eax 
        mov        eax, [esi+12] 
        adc        [edi+12], eax 
        mov        byte ptr [ebx], 12 
        mov        dword ptr [ecx], offset32  _lword_ste
        push        ecx
        push        ebx

        push        edi

        call       _compactType
        add        esp, 12 
        jmp        endswitch__hla_637
case__hla_665::
        mov        eax, [esi] 
        add        [edi], eax 
        mov        eax, [esi+4] 
        adc        [edi+4], eax 
        mov        eax, [esi+8] 
        adc        [edi+8], eax 
        mov        eax, [esi+12] 
        adc        [edi+12], eax 
        mov        byte ptr [ebx], 17 
        mov        dword ptr [ecx], offset32  _int128_ste
        push        ecx
        push        ebx

        push        edi

        call       _compactType
        add        esp, 12 
        jmp        endswitch__hla_637
case__hla_666::
        fld        real4 ptr [esi]
        fld        real4 ptr [edi]
        faddp      st(1), st(0) 
        fstp       real10 ptr [edi]
        mov        byte ptr [ebx], 22 
        mov        dword ptr [ecx], offset32  _real80_ste
        xor        eax, eax 
        mov        [edi+4], eax 
        mov        [edi+8], eax 
        mov        [edi+12], eax 
        jmp        endswitch__hla_637
case__hla_667::
        fld        real8 ptr [esi]
        fld        real8 ptr [edi]
        faddp      st(1), st(0) 
        fstp       real10 ptr [edi]
        mov        byte ptr [ebx], 22 
        mov        dword ptr [ecx], offset32  _real80_ste
        xor        eax, eax 
        mov        [edi+8], eax 
        mov        [edi+12], eax 
        jmp        endswitch__hla_637
case__hla_668::
        fld        real10 ptr [esi]
        fld        real10 ptr [edi]
        faddp      st(1), st(0) 
        fstp       real10 ptr [edi]
        xor        eax, eax 
        mov        [edi+10], ax 
        mov        [edi+12], eax 
        jmp        endswitch__hla_637
case__hla_669::
        mov        eax, [esi] 
        or         [edi], eax 
        mov        eax, [esi+4] 
        or         [edi+4], eax 
        mov        eax, [esi+8] 
        or         [edi+8], eax 
        mov        eax, [esi+12] 
        or         [edi+12], eax 
endswitch__hla_637:
default__hla_637:
        pop        ebx
        pop        ecx
        pop        edi
        pop        esi
x_addval:
        mov        esp, ebp 
        pop        ebp
        ret
_addval endp

_subval proc near32
        push        ebp
        mov        ebp, esp 
        push        esi
        push        edi
        push        ecx
        push        ebx
        mov        edi, [ebp+8] 
        mov        esi, [ebp+12] 
        mov        ebx, [ebp+16] 
        mov        ecx, [ebp+20] 
        movzx      eax, byte ptr [ebx] 
        cmp        eax, 2 
        jl         default__hla_670
        cmp        eax, 27 
        jg         default__hla_670
        jmp        dword ptr jmpTbl__hla_670[eax*4-8]
case__hla_671::
        mov        eax, [esi] 
        sub        [edi], eax 
        mov        eax, 0 
        sbb        eax, 0 
        mov        [edi+4], eax 
        mov        [edi+8], eax 
        mov        [edi+12], eax 
        jns        false__hla_672
        mov        byte ptr [ebx], 14 
        mov        dword ptr [ecx], offset32  _int16_ste
false__hla_672:
        push        ecx
        push        ebx

        push        edi

        call       _compactType
        add        esp, 12 
        jmp        endswitch__hla_670
case__hla_673::
        mov        eax, [esi] 
        sub        [edi], eax 
        mov        eax, [esi+4] 
        sbb        [edi+4], eax 
        mov        eax, [esi+8] 
        sbb        [edi+8], eax 
        mov        eax, [esi+12] 
        sbb        [edi+12], eax 
        push        ecx
        push        ebx

        push        edi

        call       _compactType
        add        esp, 12 
        jmp        endswitch__hla_670
case__hla_674::
        mov        eax, [esi] 
        sub        [edi], eax 
        mov        eax, 0 
        sbb        eax, 0 
        mov        [edi+4], eax 
        mov        [edi+8], eax 
        mov        [edi+12], eax 
        push        ecx
        push        ebx

        push        edi

        call       _compactType
        add        esp, 12 
        jmp        endswitch__hla_670
case__hla_675::
        mov        eax, [esi] 
        sub        [edi], eax 
        mov        eax, 0 
        sbb        eax, 0 
        mov        [edi+4], eax 
        mov        [edi+8], eax 
        mov        [edi+12], eax 
        jns        false__hla_676
        mov        byte ptr [ebx], 15 
        mov        dword ptr [ecx], offset32  _int32_ste
false__hla_676:
        push        ecx
        push        ebx

        push        edi

        call       _compactType
        add        esp, 12 
        jmp        endswitch__hla_670
case__hla_677::
        mov        ax, [esi] 
        sub        [edi], ax 
        pushfd
        mov        ax, [esi+2] 
        sbb        [edi+2], ax 
        mov        eax, [esi+4] 
        sbb        [edi+4], eax 
        mov        eax, [esi+8] 
        sbb        [edi+8], eax 
        mov        eax, [esi+12] 
        sbb        [edi+12], eax 
        push        ecx
        push        ebx

        push        edi

        call       _compactType
        add        esp, 12 
        jmp        endswitch__hla_670
case__hla_678::
        mov        eax, [esi] 
        sub        [edi], eax 
        mov        eax, [esi+4] 
        sbb        [edi+4], eax 
        mov        eax, [esi+8] 
        sbb        [edi+8], eax 
        mov        eax, [esi+12] 
        sbb        [edi+12], eax 
        push        ecx
        push        ebx

        push        edi

        call       _compactType
        add        esp, 12 
        jmp        endswitch__hla_670
case__hla_679::
        mov        eax, [esi] 
        sub        [edi], eax 
        mov        eax, 0 
        sbb        eax, 0 
        mov        [edi+4], eax 
        mov        [edi+8], eax 
        mov        [edi+12], eax 
        jns        false__hla_680
        mov        byte ptr [ebx], 16 
        mov        dword ptr [ecx], offset32  _int64_ste
false__hla_680:
        push        ecx
        push        ebx

        push        edi

        call       _compactType
        add        esp, 12 
        jmp        endswitch__hla_670
case__hla_681::
        mov        eax, [esi] 
        sub        [edi], eax 
        mov        eax, [esi+4] 
        sbb        [edi+4], eax 
        mov        eax, [esi+8] 
        sbb        [edi+8], eax 
        mov        eax, [esi+12] 
        sbb        [edi+12], eax 
        push        ecx
        push        ebx

        push        edi

        call       _compactType
        add        esp, 12 
        jmp        endswitch__hla_670
case__hla_682::
        mov        eax, [esi] 
        sub        [edi], eax 
        mov        eax, [esi+4] 
        sbb        [edi+4], eax 
        mov        eax, [esi+8] 
        sbb        [edi+8], eax 
        mov        eax, [esi+12] 
        sbb        [edi+12], eax 
        push        ecx
        push        ebx

        push        edi

        call       _compactType
        add        esp, 12 
        jmp        endswitch__hla_670
case__hla_683::
        mov        eax, [esi] 
        sub        [edi], eax 
        mov        eax, [esi+4] 
        sbb        [edi+4], eax 
        mov        eax, 0 
        sbb        eax, 0 
        mov        [edi+8], eax 
        mov        [edi+12], eax 
        jns        false__hla_684
        mov        byte ptr [ebx], 17 
        mov        dword ptr [ecx], offset32  _int128_ste
false__hla_684:
        push        ecx
        push        ebx

        push        edi

        call       _compactType
        add        esp, 12 
        jmp        endswitch__hla_670
case__hla_685::
        mov        eax, [esi] 
        sub        [edi], eax 
        mov        eax, [esi+4] 
        sbb        [edi+4], eax 
        mov        eax, [esi+8] 
        sbb        [edi+8], eax 
        mov        eax, [esi+12] 
        sbb        [edi+12], eax 
        push        ecx
        push        ebx

        push        edi

        call       _compactType
        add        esp, 12 
        jmp        endswitch__hla_670
case__hla_686::
        mov        eax, [esi] 
        sub        [edi], eax 
        mov        eax, [esi+4] 
        sbb        [edi+4], eax 
        mov        eax, 0 
        sbb        eax, 0 
        mov        [edi+8], eax 
        mov        [edi+12], eax 
        push        ecx
        push        ebx

        push        edi

        call       _compactType
        add        esp, 12 
        jmp        endswitch__hla_670
case__hla_687::
        mov        eax, [esi] 
        sub        [edi], eax 
        mov        eax, [esi+4] 
        sbb        [edi+4], eax 
        movzx      eax, word ptr [edi+8] 
        sbb        eax, 0 
        mov        [edi+8], eax 
        mov        [edi+12], eax 
        push        ecx
        push        ebx

        push        edi

        call       _compactType
        add        esp, 12 
        jmp        endswitch__hla_670
case__hla_688::
        mov        eax, [esi] 
        sub        [edi], eax 
        mov        eax, [esi+4] 
        sbb        [edi+4], eax 
        mov        eax, [esi+8] 
        sbb        [edi+8], eax 
        mov        eax, [esi+12] 
        sbb        [edi+12], eax 
        push        ecx
        push        ebx

        push        edi

        call       _compactType
        add        esp, 12 
        jmp        endswitch__hla_670
case__hla_689::
        mov        eax, [esi] 
        sub        [edi], eax 
        mov        eax, [esi+4] 
        sbb        [edi+4], eax 
        mov        eax, [esi+8] 
        sbb        [edi+8], eax 
        mov        eax, [esi+12] 
        sbb        [edi+12], eax 
        push        ecx
        push        ebx

        push        edi

        call       _compactType
        add        esp, 12 
        jmp        endswitch__hla_670
case__hla_690::
        mov        eax, [esi] 
        sub        [edi], eax 
        mov        eax, [esi+4] 
        sbb        [edi+4], eax 
        mov        eax, [esi+8] 
        sbb        [edi+8], eax 
        mov        eax, [esi+12] 
        sbb        [edi+12], eax 
        push        ecx
        push        ebx

        push        edi

        call       _compactType
        add        esp, 12 
        jmp        endswitch__hla_670
case__hla_691::
        fld        real4 ptr [esi]
        fld        real4 ptr [edi]
        faddp      st(1), st(0) 
        fstp       real4 ptr [edi]
        xor        eax, eax 
        mov        [edi+4], eax 
        mov        [edi+8], eax 
        mov        [edi+12], eax 
        jmp        endswitch__hla_670
case__hla_692::
        fld        real8 ptr [esi]
        fld        real8 ptr [edi]
        faddp      st(1), st(0) 
        fstp       real8 ptr [edi]
        xor        eax, eax 
        mov        [edi+8], eax 
        mov        [edi+12], eax 
        jmp        endswitch__hla_670
case__hla_693::
        fld        real10 ptr [esi]
        fld        real10 ptr [edi]
        faddp      st(1), st(0) 
        fstp       real10 ptr [edi]
        xor        eax, eax 
        mov        [edi+10], ax 
        mov        [edi+12], eax 
        jmp        endswitch__hla_670
case__hla_694::
        mov        eax, [esi] 
        not        eax
        and        [edi], eax 
        mov        eax, [esi+4] 
        not        eax
        and        [edi+4], eax 
        mov        eax, [esi+8] 
        not        eax
        and        [edi+8], eax 
        mov        eax, [esi+12] 
        not        eax
        and        [edi+12], eax 
endswitch__hla_670:
default__hla_670:
        pop        ebx
        pop        ecx
        pop        edi
        pop        esi
x_subval:
        mov        esp, ebp 
        pop        ebp
        ret
_subval endp

mul128__hla_695 proc near32
        push        edx
        mov        eax, [esi] 
        mul        dword ptr [edi]
        mov        [ebp-16], eax 
        mov        [ebp-12], edx 
        mov        eax, [esi] 
        mul        dword ptr [edi+4]
        add        [ebp-12], eax 
        adc        edx, 0 
        mov        [ebp-8], edx 
        mov        eax, [esi] 
        mul        dword ptr [edi+8]
        add        [ebp-8], eax 
        adc        edx, 0 
        mov        [ebp-4], edx 
        mov        eax, [esi] 
        mul        dword ptr [edi+12]
        add        [ebp-4], eax 
        mov        eax, [esi+4] 
        mul        dword ptr [edi]
        add        [ebp-12], eax 
        adc        [ebp-8], edx 
        mov        eax, [esi+4] 
        mul        dword ptr [edi+4]
        add        [ebp-8], eax 
        adc        [ebp-4], edx 
        mov        eax, [esi+4] 
        mul        dword ptr [edi+8]
        add        [ebp-4], eax 
        mov        eax, [esi+8] 
        mul        dword ptr [edi]
        add        [ebp-8], eax 
        adc        [ebp-4], edx 
        mov        eax, [esi+8] 
        mul        dword ptr [edi+4]
        add        [ebp-4], eax 
        mov        eax, [esi+12] 
        mul        dword ptr [edi]
        add        [ebp-4], eax 
        mov        eax, [ebp-16] 
        mov        [edi], eax 
        mov        eax, [ebp-12] 
        mov        [edi+4], eax 
        mov        eax, [ebp-8] 
        mov        [edi+8], eax 
        mov        eax, [ebp-4] 
        mov        [edi+12], eax 
        pop        edx
        ret
xmul128__hla_695:
mul128__hla_695 endp

_mulval proc near32
        push        ebp
        mov        ebp, esp 
        sub        esp, 16 
        push        ebx
        push        ecx
        push        esi
        push        edi
        mov        esi, [ebp+12] 
        mov        edi, [ebp+8] 
        mov        ecx, [ebp+20] 
        mov        ebx, [ebp+16] 
        movzx      eax, byte ptr [ebx] 
        cmp        eax, 2 
        jl         default__hla_696
        cmp        eax, 27 
        jg         default__hla_696
        jmp        dword ptr jmpTbl__hla_696[eax*4-8]
case__hla_697::
        call       mul128__hla_695
        mov        byte ptr [ebx], 6 
        mov        dword ptr [ecx], offset32  _uns128_ste
        cmp        dword ptr [edi+8], 0 
        jne        false__hla_698
        cmp        dword ptr [edi+12], 0 
        jne        false__hla_698
        mov        byte ptr [ebx], 5 
        mov        dword ptr [ecx], offset32  _uns64_ste
        cmp        dword ptr [edi+4], 0 
        jne        false__hla_700
        mov        byte ptr [ebx], 4 
        mov        dword ptr [ecx], offset32  _uns32_ste
        cmp        word ptr [edi+2], 0 
        jne        false__hla_701
        mov        byte ptr [ebx], 3 
        mov        dword ptr [ecx], offset32  _uns16_ste
        cmp        byte ptr [edi+1], 0 
        jne        false__hla_702
        mov        byte ptr [ebx], 2 
        mov        dword ptr [ecx], offset32  _uns8_ste
false__hla_702:
false__hla_701:
false__hla_700:
false__hla_698:
        jmp        endswitch__hla_696
case__hla_703::
        call       mul128__hla_695
        mov        byte ptr [ebx], 12 
        mov        dword ptr [ecx], offset32  _lword_ste
        cmp        word ptr [edi+10], 0 
        jne        false__hla_704
        cmp        dword ptr [edi+12], 0 
        jne        false__hla_704
        mov        byte ptr [ebx], 11 
        mov        dword ptr [ecx], offset32  _tbyte_ste
        cmp        word ptr [edi+8], 0 
        jne        false__hla_706
        mov        byte ptr [ebx], 10 
        mov        dword ptr [ecx], offset32  _qword_ste
        cmp        dword ptr [edi+4], 0 
        jne        false__hla_707
        mov        byte ptr [ebx], 9 
        mov        dword ptr [ecx], offset32  _dword_ste
        cmp        word ptr [edi+2], 0 
        jne        false__hla_708
        mov        byte ptr [ebx], 8 
        mov        dword ptr [ecx], offset32  _word_ste
        cmp        byte ptr [edi+1], 0 
        jne        false__hla_709
        mov        byte ptr [ebx], 7 
        mov        dword ptr [ecx], offset32  _byte_ste
false__hla_709:
false__hla_708:
false__hla_707:
false__hla_706:
false__hla_704:
        jmp        endswitch__hla_696
case__hla_710::
        mov        al, [edi+15] 
        xor        al, [esi+15] 
        pushfd
        cmp        byte ptr [edi+15], 0 
        jnl        false__hla_711
        xor        eax, eax 
        sub        eax, [edi] 
        mov        [edi], eax 
        mov        eax, 0 
        sbb        eax, [edi+4] 
        mov        [edi+4], eax 
        mov        eax, 0 
        sbb        eax, [edi+8] 
        mov        [edi+8], eax 
        mov        eax, 0 
        sbb        eax, [edi+12] 
        mov        [edi+12], eax 
false__hla_711:
        cmp        byte ptr [esi+15], 0 
        jnl        false__hla_712
        xor        eax, eax 
        sub        eax, [esi] 
        mov        [esi], eax 
        mov        eax, 0 
        sbb        eax, [esi+4] 
        mov        [esi+4], eax 
        mov        eax, 0 
        sbb        eax, [esi+8] 
        mov        [esi+8], eax 
        mov        eax, 0 
        sbb        eax, [esi+12] 
        mov        [esi+12], eax 
false__hla_712:
        call       mul128__hla_695
        popfd
        jns        false__hla_713
        xor        eax, eax 
        sub        eax, [edi] 
        mov        [edi], eax 
        mov        eax, 0 
        sbb        eax, [edi+4] 
        mov        [edi+4], eax 
        mov        eax, 0 
        sbb        eax, [edi+8] 
        mov        [edi+8], eax 
        mov        eax, 0 
        sbb        eax, [edi+12] 
        mov        [edi+12], eax 
false__hla_713:
        mov        byte ptr [ebx], 17 
        mov        dword ptr [ecx], offset32  _int128_ste
        movsx      eax, byte ptr [edi+7] 
        mov        al, ah 
        cmp        eax, [edi+8] 
        jne        false__hla_714
        cmp        eax, [edi+12] 
        jne        false__hla_714
        mov        byte ptr [ebx], 16 
        mov        dword ptr [ecx], offset32  _int64_ste
        movsx      eax, byte ptr [edi+3] 
        mov        al, ah 
        cmp        eax, [edi+4] 
        jne        false__hla_716
        mov        byte ptr [ebx], 15 
        mov        dword ptr [ecx], offset32  _int32_ste
        movsx      eax, byte ptr [edi+1] 
        mov        al, ah 
        cmp        [edi+2], ax 
        jne        false__hla_717
        mov        byte ptr [ebx], 14 
        mov        dword ptr [ecx], offset32  _int16_ste
        movsx      ax, byte ptr [edi] 
        cmp        [edi+1], ah 
        jne        false__hla_718
        mov        byte ptr [ebx], 13 
        mov        dword ptr [ecx], offset32  _int8_ste
false__hla_718:
false__hla_717:
false__hla_716:
false__hla_714:
        jmp        endswitch__hla_696
case__hla_719::
        fld        real4 ptr [esi]
        fld        real4 ptr [edi]
        fmulp      st(1), st(0) 
        fstp       real10 ptr [edi]
        mov        byte ptr [ebx], 22 
        mov        dword ptr [ecx], offset32  _real80_ste
        jmp        endswitch__hla_696
case__hla_720::
        fld        real8 ptr [esi]
        fld        real8 ptr [edi]
        fmulp      st(1), st(0) 
        fstp       real10 ptr [edi]
        mov        byte ptr [ebx], 22 
        mov        dword ptr [ecx], offset32  _real80_ste
        jmp        endswitch__hla_696
case__hla_721::
        fld        real10 ptr [esi]
        fld        real10 ptr [edi]
        fmulp      st(1), st(0) 
        fstp       real10 ptr [edi]
        jmp        endswitch__hla_696
case__hla_722::
        mov        eax, [esi] 
        and        [edi], eax 
        mov        eax, [esi+4] 
        and        [edi+4], eax 
        mov        eax, [esi+8] 
        and        [edi+8], eax 
        mov        eax, [esi+12] 
        and        [edi+12], eax 
endswitch__hla_696:
default__hla_696:
        pop        edi
        pop        esi
        pop        ecx
        pop        ebx
x_mulval:
        mov        esp, ebp 
        pop        ebp
        ret
_mulval endp

div128__hla_723 proc near32
        push        ebp
        mov        ebp, esp 
        sub        esp, 16 
        push        eax
        push        ecx
        push        edi
        mov        eax, 0 
        mov        [ebp-16], eax 
        mov        [ebp-12], eax 
        mov        [ebp-8], eax 
        mov        [ebp-4], eax 
        mov        ecx, 128 
false__hla_724:
repeat__hla_724:
        shl        dword ptr [ebp+32], 1 
        rcl        dword ptr [ebp+36], 1 
        rcl        dword ptr [ebp+40], 1 
        rcl        dword ptr [ebp+44], 1 
        rcl        dword ptr [ebp-16], 1 
        rcl        dword ptr [ebp-12], 1 
        rcl        dword ptr [ebp-8], 1 
        rcl        dword ptr [ebp-4], 1 
        mov        eax, [ebp-4] 
        cmp        eax, [ebp+28] 
        ja         true__hla_725
        jb         false__hla_725
        mov        eax, [ebp-8] 
        cmp        eax, [ebp+24] 
        ja         true__hla_725
        jb         false__hla_725
        mov        eax, [ebp-12] 
        cmp        eax, [ebp+20] 
        ja         true__hla_725
        jb         false__hla_725
        mov        eax, [ebp-16] 
        cmp        eax, [ebp+16] 
        jb         false__hla_725
true__hla_725:
        mov        eax, [ebp+16] 
        sub        [ebp-16], eax 
        mov        eax, [ebp+20] 
        sbb        [ebp-12], eax 
        mov        eax, [ebp+24] 
        sbb        [ebp-8], eax 
        mov        eax, [ebp+28] 
        sbb        [ebp-4], eax 
        add        dword ptr [ebp+32], 1 
        adc        dword ptr [ebp+36], 0 
        adc        dword ptr [ebp+40], 0 
        adc        dword ptr [ebp+44], 0 
false__hla_725:
        dec        ecx
continue__hla_724:
        jnz        repeat__hla_724
exitloop__hla_724:

        mov        edi, [ebp+12] 
        mov        eax, [ebp+32] 
        mov        [edi], eax 
        mov        eax, [ebp+36] 
        mov        [edi+4], eax 
        mov        eax, [ebp+40] 
        mov        [edi+8], eax 
        mov        eax, [ebp+44] 
        mov        [edi+12], eax 
        mov        edi, [ebp+8] 
        mov        eax, [ebp-16] 
        mov        [edi], eax 
        mov        eax, [ebp-12] 
        mov        [edi+4], eax 
        mov        eax, [ebp-8] 
        mov        [edi+8], eax 
        mov        eax, [ebp-4] 
        mov        [edi+12], eax 
        pop        edi
        pop        ecx
        pop        eax
xdiv128__hla_723:
        mov        esp, ebp 
        pop        ebp
        ret        40
div128__hla_723 endp

_divval proc near32
        push        ebp
        mov        ebp, esp 
        sub        esp, 16 
        push        ebx
        push        ecx
        push        esi
        push        edi
        mov        esi, [ebp+12] 
        mov        edi, [ebp+8] 
        mov        ecx, [ebp+20] 
        mov        ebx, [ebp+16] 
        movzx      eax, byte ptr [ebx] 
        cmp        eax, 2 
        jl         default__hla_726
        cmp        eax, 22 
        jg         default__hla_726
        jmp        dword ptr jmpTbl__hla_726[eax*4-8]
case__hla_727::
        mov        eax, [esi] 
        or         eax, [esi+4] 
        or         eax, [esi+8] 
        or         eax, [esi+12] 
        jnz        false__hla_728
        push        ebx
        mov        ebx, esp 
        sub        esp, 28 
        and        esp, -16 
        pushd      offset32 str__hla_516
        pushd      7733

        pushd      offset32 str__hla_729

        call       _HLAerror
        mov        esp, ebx 
        pop        ebx
        mov        byte ptr [esi], 1 
false__hla_728:
        push        dword ptr [edi+12]
        push        dword ptr [edi+8]
        push        dword ptr [edi+4]
        push        dword ptr [edi]
        push        dword ptr [esi+12]
        push        dword ptr [esi+8]
        push        dword ptr [esi+4]
        push        dword ptr [esi]
        push        edi
        push        ebp
        add        dword ptr [esp], -16 
        call       div128__hla_723
        mov        byte ptr [ebx], 6 
        mov        dword ptr [ecx], offset32  _uns128_ste
        cmp        dword ptr [edi+8], 0 
        jne        false__hla_730
        cmp        dword ptr [edi+12], 0 
        jne        false__hla_730
        mov        byte ptr [ebx], 5 
        mov        dword ptr [ecx], offset32  _uns64_ste
        cmp        dword ptr [edi+4], 0 
        jne        false__hla_732
        mov        byte ptr [ebx], 4 
        mov        dword ptr [ecx], offset32  _uns32_ste
        cmp        word ptr [edi+2], 0 
        jne        false__hla_733
        mov        byte ptr [ebx], 3 
        mov        dword ptr [ecx], offset32  _uns16_ste
        cmp        byte ptr [edi+1], 0 
        jne        false__hla_734
        mov        byte ptr [ebx], 2 
        mov        dword ptr [ecx], offset32  _uns8_ste
false__hla_734:
false__hla_733:
false__hla_732:
false__hla_730:
        jmp        endswitch__hla_726
case__hla_735::
        mov        eax, [esi] 
        or         eax, [esi+4] 
        or         eax, [esi+8] 
        or         eax, [esi+12] 
        jnz        false__hla_736
        push        ebx
        mov        ebx, esp 
        sub        esp, 28 
        and        esp, -16 
        pushd      offset32 str__hla_516
        pushd      7794

        pushd      offset32 str__hla_729

        call       _HLAerror
        mov        esp, ebx 
        pop        ebx
        mov        byte ptr [esi], 1 
false__hla_736:
        push        dword ptr [edi+12]
        push        dword ptr [edi+8]
        push        dword ptr [edi+4]
        push        dword ptr [edi]
        push        dword ptr [esi+12]
        push        dword ptr [esi+8]
        push        dword ptr [esi+4]
        push        dword ptr [esi]
        push        edi
        push        ebp
        add        dword ptr [esp], -16 
        call       div128__hla_723
        mov        byte ptr [ebx], 12 
        mov        dword ptr [ecx], offset32  _lword_ste
        cmp        word ptr [edi+10], 0 
        jne        false__hla_737
        cmp        dword ptr [edi+12], 0 
        jne        false__hla_737
        mov        byte ptr [ebx], 11 
        mov        dword ptr [ecx], offset32  _tbyte_ste
        cmp        word ptr [edi+8], 0 
        jne        false__hla_739
        mov        byte ptr [ebx], 10 
        mov        dword ptr [ecx], offset32  _qword_ste
        cmp        dword ptr [edi+4], 0 
        jne        false__hla_740
        mov        byte ptr [ebx], 9 
        mov        dword ptr [ecx], offset32  _dword_ste
        cmp        word ptr [edi+2], 0 
        jne        false__hla_741
        mov        byte ptr [ebx], 8 
        mov        dword ptr [ecx], offset32  _word_ste
        cmp        byte ptr [edi+1], 0 
        jne        false__hla_742
        mov        byte ptr [ebx], 7 
        mov        dword ptr [ecx], offset32  _byte_ste
false__hla_742:
false__hla_741:
false__hla_740:
false__hla_739:
false__hla_737:
        jmp        endswitch__hla_726
case__hla_743::
        mov        al, [edi+15] 
        xor        al, [esi+15] 
        pushfd
        cmp        byte ptr [edi+15], 0 
        jnl        false__hla_744
        xor        eax, eax 
        sub        eax, [edi] 
        mov        [edi], eax 
        mov        eax, 0 
        sbb        eax, [edi+4] 
        mov        [edi+4], eax 
        mov        eax, 0 
        sbb        eax, [edi+8] 
        mov        [edi+8], eax 
        mov        eax, 0 
        sbb        eax, [edi+12] 
        mov        [edi+12], eax 
false__hla_744:
        cmp        byte ptr [esi+15], 0 
        jnl        false__hla_745
        xor        eax, eax 
        sub        eax, [esi] 
        mov        [esi], eax 
        mov        eax, 0 
        sbb        eax, [esi+4] 
        mov        [esi+4], eax 
        mov        eax, 0 
        sbb        eax, [esi+8] 
        mov        [esi+8], eax 
        mov        eax, 0 
        sbb        eax, [esi+12] 
        mov        [esi+12], eax 
false__hla_745:
        mov        eax, [esi] 
        or         eax, [esi+4] 
        or         eax, [esi+8] 
        or         eax, [esi+12] 
        jnz        false__hla_746
        push        ebx
        mov        ebx, esp 
        sub        esp, 28 
        and        esp, -16 
        pushd      offset32 str__hla_516
        pushd      7911

        pushd      offset32 str__hla_729

        call       _HLAerror
        mov        esp, ebx 
        pop        ebx
        mov        byte ptr [esi], 1 
false__hla_746:
        push        dword ptr [edi+12]
        push        dword ptr [edi+8]
        push        dword ptr [edi+4]
        push        dword ptr [edi]
        push        dword ptr [esi+12]
        push        dword ptr [esi+8]
        push        dword ptr [esi+4]
        push        dword ptr [esi]
        push        edi
        push        ebp
        add        dword ptr [esp], -16 
        call       div128__hla_723
        popfd
        jns        false__hla_747
        xor        eax, eax 
        sub        eax, [edi] 
        mov        [edi], eax 
        mov        eax, 0 
        sbb        eax, [edi+4] 
        mov        [edi+4], eax 
        mov        eax, 0 
        sbb        eax, [edi+8] 
        mov        [edi+8], eax 
        mov        eax, 0 
        sbb        eax, [edi+12] 
        mov        [edi+12], eax 
false__hla_747:
        mov        byte ptr [ebx], 17 
        mov        dword ptr [ecx], offset32  _int128_ste
        movsx      eax, byte ptr [edi+7] 
        mov        al, ah 
        cmp        eax, [edi+8] 
        jne        false__hla_748
        cmp        eax, [edi+12] 
        jne        false__hla_748
        mov        byte ptr [ebx], 16 
        mov        dword ptr [ecx], offset32  _int64_ste
        movsx      eax, byte ptr [edi+3] 
        mov        al, ah 
        cmp        eax, [edi+4] 
        jne        false__hla_750
        mov        byte ptr [ebx], 15 
        mov        dword ptr [ecx], offset32  _int32_ste
        movsx      eax, byte ptr [edi+1] 
        mov        al, ah 
        cmp        [edi+2], ax 
        jne        false__hla_751
        mov        byte ptr [ebx], 14 
        mov        dword ptr [ecx], offset32  _int16_ste
        movsx      ax, byte ptr [edi] 
        cmp        [edi+1], ah 
        jne        false__hla_752
        mov        byte ptr [ebx], 13 
        mov        dword ptr [ecx], offset32  _int8_ste
false__hla_752:
false__hla_751:
false__hla_750:
false__hla_748:
        jmp        endswitch__hla_726
case__hla_753::
        cmp        dword ptr [esi], 0 
        jne        false__hla_754
        push        ebx
        mov        ebx, esp 
        sub        esp, 28 
        and        esp, -16 
        pushd      offset32 str__hla_516
        pushd      7990

        pushd      offset32 str__hla_729

        call       _HLAerror
        mov        esp, ebx 
        pop        ebx
        mov        dword ptr [esi], 1065353216 
false__hla_754:
        fld        real4 ptr [esi]
        fld        real4 ptr [edi]
        fdivrp     st(1), st(0) 
        fstp       real10 ptr [edi]
        mov        byte ptr [ebx], 22 
        mov        dword ptr [ecx], offset32  _real80_ste
        jmp        endswitch__hla_726
case__hla_755::
        cmp        dword ptr [esi], 0 
        jne        false__hla_756
        cmp        dword ptr [esi+4], 0 
        jne        false__hla_756
        push        ebx
        mov        ebx, esp 
        sub        esp, 28 
        and        esp, -16 
        pushd      offset32 str__hla_516
        pushd      8008

        pushd      offset32 str__hla_729

        call       _HLAerror
        mov        esp, ebx 
        pop        ebx
        mov        dword ptr [esi+4], 1072693248 
        mov        dword ptr [esi], 0 
false__hla_756:
        fld        real8 ptr [esi]
        fld        real8 ptr [edi]
        fdivrp     st(1), st(0) 
        fstp       real10 ptr [edi]
        mov        byte ptr [ebx], 22 
        mov        dword ptr [ecx], offset32  _real80_ste
        jmp        endswitch__hla_726
case__hla_758::
        cmp        dword ptr [esi], 0 
        jne        false__hla_759
        cmp        dword ptr [esi+4], 0 
        jne        false__hla_759
        cmp        word ptr [esi+8], 0 
        jne        false__hla_759
        push        ebx
        mov        ebx, esp 
        sub        esp, 28 
        and        esp, -16 
        pushd      offset32 str__hla_516
        pushd      8033

        pushd      offset32 str__hla_729

        call       _HLAerror
        mov        esp, ebx 
        pop        ebx
        mov        dword ptr [esi+6], 1073709056 
        mov        word ptr [esi+4], 0 
        mov        dword ptr [esi], 0 
false__hla_759:
        fld        real10 ptr [esi]
        fld        real10 ptr [edi]
        fdivrp     st(1), st(0) 
        fstp       real10 ptr [edi]
endswitch__hla_726:
default__hla_726:
        pop        edi
        pop        esi
        pop        ecx
        pop        ebx
x_divval:
        mov        esp, ebp 
        pop        ebp
        ret
_divval endp

_modval proc near32
        push        ebp
        mov        ebp, esp 
        sub        esp, 16 
        push        ebx
        push        ecx
        push        esi
        push        edi
        mov        esi, [ebp+12] 
        mov        edi, [ebp+8] 
        mov        ecx, [ebp+20] 
        mov        ebx, [ebp+16] 
        movzx      eax, byte ptr [ebx] 
        cmp        eax, 2 
        jl         default__hla_762
        cmp        eax, 17 
        jg         default__hla_762
        jmp        dword ptr jmpTbl__hla_762[eax*4-8]
case__hla_763::
        mov        eax, [esi] 
        or         eax, [esi+4] 
        or         eax, [esi+8] 
        or         eax, [esi+12] 
        jnz        false__hla_764
        push        ebx
        mov        ebx, esp 
        sub        esp, 28 
        and        esp, -16 
        pushd      offset32 str__hla_516
        pushd      8107

        pushd      offset32 str__hla_729

        call       _HLAerror
        mov        esp, ebx 
        pop        ebx
        mov        byte ptr [esi], 1 
false__hla_764:
        push        dword ptr [edi+12]
        push        dword ptr [edi+8]
        push        dword ptr [edi+4]
        push        dword ptr [edi]
        push        dword ptr [esi+12]
        push        dword ptr [esi+8]
        push        dword ptr [esi+4]
        push        dword ptr [esi]
        push        ebp
        add        dword ptr [esp], -16 
        push        edi
        call       div128__hla_723
        mov        byte ptr [ebx], 6 
        mov        dword ptr [ecx], offset32  _uns128_ste
        cmp        dword ptr [edi+8], 0 
        jne        false__hla_765
        cmp        dword ptr [edi+12], 0 
        jne        false__hla_765
        mov        byte ptr [ebx], 5 
        mov        dword ptr [ecx], offset32  _uns64_ste
        cmp        dword ptr [edi+4], 0 
        jne        false__hla_767
        mov        byte ptr [ebx], 4 
        mov        dword ptr [ecx], offset32  _uns32_ste
        cmp        word ptr [edi+2], 0 
        jne        false__hla_768
        mov        byte ptr [ebx], 3 
        mov        dword ptr [ecx], offset32  _uns16_ste
        cmp        byte ptr [edi+1], 0 
        jne        false__hla_769
        mov        byte ptr [ebx], 2 
        mov        dword ptr [ecx], offset32  _uns8_ste
false__hla_769:
false__hla_768:
false__hla_767:
false__hla_765:
        jmp        endswitch__hla_762
case__hla_770::
        mov        eax, [esi] 
        or         eax, [esi+4] 
        or         eax, [esi+8] 
        or         eax, [esi+12] 
        jnz        false__hla_771
        push        ebx
        mov        ebx, esp 
        sub        esp, 28 
        and        esp, -16 
        pushd      offset32 str__hla_516
        pushd      8169

        pushd      offset32 str__hla_729

        call       _HLAerror
        mov        esp, ebx 
        pop        ebx
        mov        byte ptr [esi], 1 
false__hla_771:
        push        dword ptr [edi+12]
        push        dword ptr [edi+8]
        push        dword ptr [edi+4]
        push        dword ptr [edi]
        push        dword ptr [esi+12]
        push        dword ptr [esi+8]
        push        dword ptr [esi+4]
        push        dword ptr [esi]
        push        ebp
        add        dword ptr [esp], -16 
        push        edi
        call       div128__hla_723
        mov        byte ptr [ebx], 12 
        mov        dword ptr [ecx], offset32  _lword_ste
        cmp        word ptr [edi+10], 0 
        jne        false__hla_772
        cmp        dword ptr [edi+12], 0 
        jne        false__hla_772
        mov        byte ptr [ebx], 11 
        mov        dword ptr [ecx], offset32  _tbyte_ste
        cmp        word ptr [edi+8], 0 
        jne        false__hla_774
        mov        byte ptr [ebx], 10 
        mov        dword ptr [ecx], offset32  _qword_ste
        cmp        dword ptr [edi+4], 0 
        jne        false__hla_775
        mov        byte ptr [ebx], 9 
        mov        dword ptr [ecx], offset32  _dword_ste
        cmp        word ptr [edi+2], 0 
        jne        false__hla_776
        mov        byte ptr [ebx], 8 
        mov        dword ptr [ecx], offset32  _word_ste
        cmp        byte ptr [edi+1], 0 
        jne        false__hla_777
        mov        byte ptr [ebx], 7 
        mov        dword ptr [ecx], offset32  _byte_ste
false__hla_777:
false__hla_776:
false__hla_775:
false__hla_774:
false__hla_772:
        jmp        endswitch__hla_762
case__hla_778::
        mov        al, [edi+15] 
        xor        al, [esi+15] 
        pushfd
        cmp        byte ptr [edi+15], 0 
        jnl        false__hla_779
        xor        eax, eax 
        sub        eax, [edi] 
        mov        [edi], eax 
        mov        eax, 0 
        sbb        eax, [edi+4] 
        mov        [edi+4], eax 
        mov        eax, 0 
        sbb        eax, [edi+8] 
        mov        [edi+8], eax 
        mov        eax, 0 
        sbb        eax, [edi+12] 
        mov        [edi+12], eax 
false__hla_779:
        cmp        byte ptr [esi+15], 0 
        jnl        false__hla_780
        xor        eax, eax 
        sub        eax, [esi] 
        mov        [esi], eax 
        mov        eax, 0 
        sbb        eax, [esi+4] 
        mov        [esi+4], eax 
        mov        eax, 0 
        sbb        eax, [esi+8] 
        mov        [esi+8], eax 
        mov        eax, 0 
        sbb        eax, [esi+12] 
        mov        [esi+12], eax 
false__hla_780:
        mov        eax, [esi] 
        or         eax, [esi+4] 
        or         eax, [esi+8] 
        or         eax, [esi+12] 
        jnz        false__hla_781
        push        ebx
        mov        ebx, esp 
        sub        esp, 28 
        and        esp, -16 
        pushd      offset32 str__hla_516
        pushd      8286

        pushd      offset32 str__hla_729

        call       _HLAerror
        mov        esp, ebx 
        pop        ebx
        mov        byte ptr [esi], 1 
false__hla_781:
        push        dword ptr [edi+12]
        push        dword ptr [edi+8]
        push        dword ptr [edi+4]
        push        dword ptr [edi]
        push        dword ptr [esi+12]
        push        dword ptr [esi+8]
        push        dword ptr [esi+4]
        push        dword ptr [esi]
        push        ebp
        add        dword ptr [esp], -16 
        push        edi
        call       div128__hla_723
        popfd
        jns        false__hla_782
        xor        eax, eax 
        sub        eax, [edi] 
        mov        [edi], eax 
        mov        eax, 0 
        sbb        eax, [edi+4] 
        mov        [edi+4], eax 
        mov        eax, 0 
        sbb        eax, [edi+8] 
        mov        [edi+8], eax 
        mov        eax, 0 
        sbb        eax, [edi+12] 
        mov        [edi+12], eax 
false__hla_782:
        mov        byte ptr [ebx], 17 
        mov        dword ptr [ecx], offset32  _int128_ste
        movsx      eax, byte ptr [edi+7] 
        mov        al, ah 
        cmp        eax, [edi+8] 
        jne        false__hla_783
        cmp        eax, [edi+12] 
        jne        false__hla_783
        mov        byte ptr [ebx], 16 
        mov        dword ptr [ecx], offset32  _int64_ste
        movsx      eax, byte ptr [edi+3] 
        mov        al, ah 
        cmp        eax, [edi+4] 
        jne        false__hla_785
        mov        byte ptr [ebx], 15 
        mov        dword ptr [ecx], offset32  _int32_ste
        movsx      eax, byte ptr [edi+1] 
        mov        al, ah 
        cmp        [edi+2], ax 
        jne        false__hla_786
        mov        byte ptr [ebx], 14 
        mov        dword ptr [ecx], offset32  _int16_ste
        movsx      ax, byte ptr [edi] 
        cmp        [edi+1], ah 
        jne        false__hla_787
        mov        byte ptr [ebx], 13 
        mov        dword ptr [ecx], offset32  _int8_ste
false__hla_787:
false__hla_786:
false__hla_785:
false__hla_783:
endswitch__hla_762:
default__hla_762:
        pop        edi
        pop        esi
        pop        ecx
        pop        ebx
x_modval:
        mov        esp, ebp 
        pop        ebp
        ret
_modval endp

_shlval proc near32
        push        ebp
        mov        ebp, esp 
        push        edi
        push        ecx
        mov        edi, [ebp+8] 
        mov        ecx, [ebp+12] 
        mov        ecx, [ecx] 
        test       ecx, ecx 
        jmp        continue__hla_788
while__hla_788:
        shl        dword ptr [edi], 1 
        rcl        dword ptr [edi+4], 1 
        rcl        dword ptr [edi+8], 1 
        rcl        dword ptr [edi+12], 1 
        dec        ecx
continue__hla_788:
        jnz        while__hla_788
exitloop__hla_788:

        push        dword ptr [ebp+20]
        push        dword ptr [ebp+16]

        push        edi

        call       _compactType
        add        esp, 12 
        pop        ecx
        pop        edi
x_shlval:
        mov        esp, ebp 
        pop        ebp
        ret
_shlval endp

_shrval proc near32
        push        ebp
        mov        ebp, esp 
        push        edi
        push        ecx
        mov        edi, [ebp+8] 
        mov        ecx, [ebp+12] 
        mov        ecx, [ecx] 
        test       ecx, ecx 
        jmp        continue__hla_790
while__hla_790:
        shr        dword ptr [edi+12], 1 
        rcr        dword ptr [edi+8], 1 
        rcr        dword ptr [edi+4], 1 
        rcr        dword ptr [edi], 1 
        dec        ecx
continue__hla_790:
        jnz        while__hla_790
exitloop__hla_790:

        push        dword ptr [ebp+20]
        push        dword ptr [ebp+16]

        push        edi

        call       _compactType
        add        esp, 12 
        pop        ecx
        pop        edi
x_shrval:
        mov        esp, ebp 
        pop        ebp
        ret
_shrval endp

_bigmaxUns proc near32
        push        ebp
        mov        ebp, esp 
        push        esi
        push        edi
        mov        esi, [ebp+12] 
        mov        edi, [ebp+16] 
        mov        eax, [esi+12] 
        cmp        eax, [edi+12] 
        jb         setRight__hla_792
        ja         setLeft__hla_793
        mov        eax, [esi+8] 
        cmp        eax, [edi+8] 
        jb         setRight__hla_792
        ja         setLeft__hla_793
        mov        eax, [esi+4] 
        cmp        eax, [edi+4] 
        jb         setRight__hla_792
        ja         setLeft__hla_793
        mov        eax, [esi] 
        cmp        eax, [edi] 
        jb         setRight__hla_792

setLeft__hla_793:
        mov        edi, [ebp+8] 
        mov        [edi], eax 
        mov        eax, [esi+4] 
        mov        [edi+4], eax 
        mov        eax, [esi+8] 
        mov        [edi+8], eax 
        mov        eax, [esi+12] 
        mov        [edi+12], eax 
        jmp        bmux__hla_794

setRight__hla_792:
        mov        esi, [ebp+8] 
        mov        eax, [edi] 
        mov        [esi], eax 
        mov        eax, [edi+4] 
        mov        [esi+4], eax 
        mov        eax, [edi+8] 
        mov        [esi+8], eax 
        mov        eax, [edi+12] 
        mov        [esi+12], eax 

bmux__hla_794:
        pop        edi
        pop        esi
x_bigmaxUns:
        mov        esp, ebp 
        pop        ebp
        ret
_bigmaxUns endp

_bigmaxInt proc near32
        push        ebp
        mov        ebp, esp 
        push        esi
        push        edi
        mov        esi, [ebp+12] 
        mov        edi, [ebp+16] 
        mov        eax, [esi+12] 
        cmp        eax, [edi+12] 
        jl         setRight__hla_795
        jg         setLeft__hla_796
        mov        eax, [esi+8] 
        cmp        eax, [edi+8] 
        jl         setRight__hla_795
        jg         setLeft__hla_796
        mov        eax, [esi+4] 
        cmp        eax, [edi+4] 
        jl         setRight__hla_795
        jg         setLeft__hla_796
        mov        eax, [esi] 
        cmp        eax, [edi] 
        jl         setRight__hla_795

setLeft__hla_796:
        mov        edi, [ebp+8] 
        mov        [edi], eax 
        mov        eax, [esi+4] 
        mov        [edi+4], eax 
        mov        eax, [esi+8] 
        mov        [edi+8], eax 
        mov        eax, [esi+12] 
        mov        [edi+12], eax 
        jmp        bmux__hla_797

setRight__hla_795:
        mov        esi, [ebp+8] 
        mov        eax, [edi] 
        mov        [esi], eax 
        mov        eax, [edi+4] 
        mov        [esi+4], eax 
        mov        eax, [edi+8] 
        mov        [esi+8], eax 
        mov        eax, [edi+12] 
        mov        [esi+12], eax 

bmux__hla_797:
        pop        edi
        pop        esi
x_bigmaxInt:
        mov        esp, ebp 
        pop        ebp
        ret
_bigmaxInt endp

_bigminUns proc near32
        push        ebp
        mov        ebp, esp 
        push        esi
        push        edi
        mov        esi, [ebp+12] 
        mov        edi, [ebp+16] 
        mov        eax, [esi+12] 
        cmp        eax, [edi+12] 
        ja         setRight__hla_798
        jb         setLeft__hla_799
        mov        eax, [esi+8] 
        cmp        eax, [edi+8] 
        ja         setRight__hla_798
        jb         setLeft__hla_799
        mov        eax, [esi+4] 
        cmp        eax, [edi+4] 
        ja         setRight__hla_798
        jb         setLeft__hla_799
        mov        eax, [esi] 
        cmp        eax, [edi] 
        ja         setRight__hla_798

setLeft__hla_799:
        mov        edi, [ebp+8] 
        mov        [edi], eax 
        mov        eax, [esi+4] 
        mov        [edi+4], eax 
        mov        eax, [esi+8] 
        mov        [edi+8], eax 
        mov        eax, [esi+12] 
        mov        [edi+12], eax 
        jmp        bmux__hla_800

setRight__hla_798:
        mov        esi, [ebp+8] 
        mov        eax, [edi] 
        mov        [esi], eax 
        mov        eax, [edi+4] 
        mov        [esi+4], eax 
        mov        eax, [edi+8] 
        mov        [esi+8], eax 
        mov        eax, [edi+12] 
        mov        [esi+12], eax 

bmux__hla_800:
        pop        edi
        pop        esi
x_bigminUns:
        mov        esp, ebp 
        pop        ebp
        ret
_bigminUns endp

_bigminInt proc near32
        push        ebp
        mov        ebp, esp 
        push        esi
        push        edi
        mov        esi, [ebp+12] 
        mov        edi, [ebp+16] 
        mov        eax, [esi+12] 
        cmp        eax, [edi+12] 
        jg         setRight__hla_801
        jl         setLeft__hla_802
        mov        eax, [esi+8] 
        cmp        eax, [edi+8] 
        jg         setRight__hla_801
        jl         setLeft__hla_802
        mov        eax, [esi+4] 
        cmp        eax, [edi+4] 
        jg         setRight__hla_801
        jl         setLeft__hla_802
        mov        eax, [esi] 
        cmp        eax, [edi] 
        jg         setRight__hla_801

setLeft__hla_802:
        mov        edi, [ebp+8] 
        mov        [edi], eax 
        mov        eax, [esi+4] 
        mov        [edi+4], eax 
        mov        eax, [esi+8] 
        mov        [edi+8], eax 
        mov        eax, [esi+12] 
        mov        [edi+12], eax 
        jmp        bmux__hla_803

setRight__hla_801:
        mov        esi, [ebp+8] 
        mov        eax, [edi] 
        mov        [esi], eax 
        mov        eax, [edi+4] 
        mov        [esi+4], eax 
        mov        eax, [edi+8] 
        mov        [esi+8], eax 
        mov        eax, [edi+12] 
        mov        [esi+12], eax 

bmux__hla_803:
        pop        edi
        pop        esi
x_bigminInt:
        mov        esp, ebp 
        pop        ebp
        ret
_bigminInt endp

NumToStr__hla_804 proc near32
        mov        eax, [esi+12] 
        xor        edx, edx 
        div        ten__hla_805
        mov        [esi+12], eax 
        mov        eax, [esi+8] 
        div        ten__hla_805
        mov        [esi+8], eax 
        mov        eax, [esi+4] 
        div        ten__hla_805
        mov        [esi+4], eax 
        mov        eax, [esi] 
        div        ten__hla_805
        mov        [esi], eax 
        or         eax, [esi+4] 
        or         eax, [esi+8] 
        or         eax, [esi+12] 
        jz         false__hla_806
        push        edx
        call       NumToStr__hla_804
        pop        edx
false__hla_806:
        or         dl, 48 
        mov        [edi], dl 
        inc        edi
        mov        byte ptr [edi], 0 
        ret
xNumToStr__hla_804:
NumToStr__hla_804 endp

_UnsToStr proc near32
        push        ebp
        mov        ebp, esp 
        push        edx
        push        edi
        push        esi
        mov        edi, [ebp+8] 
        mov        esi, [ebp+12] 
        call       NumToStr__hla_804
        pop        esi
        pop        edi
        pop        edx
x_UnsToStr:
        mov        esp, ebp 
        pop        ebp
        ret
_UnsToStr endp

_IntToStr proc near32
        push        ebp
        mov        ebp, esp 
        push        edx
        push        edi
        push        esi
        mov        edi, [ebp+8] 
        mov        esi, [ebp+12] 
        cmp        byte ptr [esi+15], 0 
        jnl        false__hla_807
        mov        byte ptr [edi], 45 
        inc        edi
        xor        eax, eax 
        sub        eax, [esi] 
        mov        [esi], eax 
        mov        eax, 0 
        sbb        eax, [esi+4] 
        mov        [esi+4], eax 
        mov        eax, 0 
        sbb        eax, [esi+8] 
        mov        [esi+8], eax 
        mov        eax, 0 
        sbb        eax, [esi+12] 
        mov        [esi+12], eax 
false__hla_807:
        call       NumToStr__hla_804
        pop        esi
        pop        edi
        pop        edx
x_IntToStr:
        mov        esp, ebp 
        pop        ebp
        ret
_IntToStr endp

MulReslt10__hla_808 proc near32
        push        eax
        push        ebx
        shl        dword ptr [ebp-16], 1 
        rcl        dword ptr [ebp-12], 1 
        rcl        dword ptr [ebp-8], 1 
        rcl        dword ptr [ebp-4], 1 
        jc         Overflow__hla_809
        mov        eax, [ebp-16] 
        mov        ebx, [ebp-12] 
        mov        ecx, [ebp-8] 
        mov        edx, [ebp-4] 
        shl        eax, 1 
        rcl        ebx, 1 
        rcl        ecx, 1 
        rcl        edx, 1 
        jc         Overflow__hla_809
        shl        eax, 1 
        rcl        ebx, 1 
        rcl        ecx, 1 
        rcl        edx, 1 
        jc         Overflow__hla_809
        add        [ebp-16], eax 
        adc        [ebp-12], ebx 
        adc        [ebp-8], ecx 
        adc        [ebp-4], edx 
        jc         Overflow__hla_809
        pop        ebx
        pop        eax
        and        eax, 15 
        add        [ebp-16], eax 
        adc        dword ptr [ebp-12], 0 
        adc        dword ptr [ebp-8], 0 
        adc        dword ptr [ebp-4], 0 
        jc         Overflow2__hla_810
        ret

Overflow2__hla_810:
        push        eax
        push        ebx

Overflow__hla_809:
        pop        ebx
        pop        eax
        push        ebx
        mov        ebx, esp 
        sub        esp, 28 
        and        esp, -16 
        pushd      offset32 str__hla_516
        pushd      8286

        pushd      offset32 str__hla_811

        call       _HLAerror
        mov        esp, ebx 
        pop        ebx
        ret
xMulReslt10__hla_808:
MulReslt10__hla_808 endp

_DecStrToInt proc near32
        push        ebp
        mov        ebp, esp 
        sub        esp, 16 
        push        ebx
        push        ecx
        push        edx
        xor        eax, eax 
        mov        [ebp-16], eax 
        mov        [ebp-12], eax 
        mov        [ebp-8], eax 
        mov        [ebp-4], eax 
        mov        ebx, [ebp+8] 
        jmp        start__hla_812

ForEachDigit__hla_813:
        call       MulReslt10__hla_808
        inc        ebx

start__hla_812:
        mov        al, [ebx] 
        cmp        al, 0 
        jne        ForEachDigit__hla_813
        mov        ebx, [ebp+12] 
        mov        eax, [ebp-16] 
        mov        [ebx], eax 
        mov        eax, [ebp-12] 
        mov        [ebx+4], eax 
        mov        eax, [ebp-8] 
        mov        [ebx+8], eax 
        mov        eax, [ebp-4] 
        mov        [ebx+12], eax 
        mov        ebx, [ebp+20] 
        mov        eax, [ebp+16] 
        mov        byte ptr [ebx], 6 
        mov        dword ptr [eax], offset32  _uns128_ste
        cmp        dword ptr [ebp-4], 0 
        jne        AllDone__hla_814
        cmp        dword ptr [ebp-8], 0 
        jne        AllDone__hla_814
        mov        byte ptr [ebx], 5 
        mov        dword ptr [eax], offset32  _uns64_ste
        cmp        dword ptr [ebp-12], 0 
        jne        AllDone__hla_814
        mov        byte ptr [ebx], 4 
        mov        dword ptr [eax], offset32  _uns32_ste
        cmp        word ptr [ebp-14], 0 
        jne        AllDone__hla_814
        mov        byte ptr [ebx], 3 
        mov        dword ptr [eax], offset32  _uns16_ste
        cmp        byte ptr [ebp-15], 0 
        jne        AllDone__hla_814
        mov        byte ptr [ebx], 2 
        mov        dword ptr [eax], offset32  _uns8_ste

AllDone__hla_814:
        pop        edx
        pop        ecx
        pop        ebx
x_DecStrToInt:
        mov        esp, ebp 
        pop        ebp
        ret
_DecStrToInt endp

_BinStrToInt proc near32
        push        ebp
        mov        ebp, esp 
        sub        esp, 16 
        push        ebx
        xor        eax, eax 
        mov        [ebp-16], eax 
        mov        [ebp-12], eax 
        mov        [ebp-8], eax 
        mov        [ebp-4], eax 
        mov        ebx, [ebp+8] 
        jmp        start__hla_815

ForEachDigit__hla_816:
        shr        al, 1 
        rcl        dword ptr [ebp-16], 1 
        rcl        dword ptr [ebp-12], 1 
        rcl        dword ptr [ebp-8], 1 
        rcl        dword ptr [ebp-4], 1 
        jnc        start__hla_815
        push        ebx
        mov        ebx, esp 
        sub        esp, 28 
        and        esp, -16 
        pushd      offset32 str__hla_516
        pushd      8286

        pushd      offset32 str__hla_817

        call       _HLAerror
        mov        esp, ebx 
        pop        ebx

start__hla_815:
        inc        ebx
        mov        al, [ebx] 
        cmp        al, 0 
        jne        ForEachDigit__hla_816
        mov        ebx, [ebp+12] 
        mov        eax, [ebp-16] 
        mov        [ebx], eax 
        mov        eax, [ebp-12] 
        mov        [ebx+4], eax 
        mov        eax, [ebp-8] 
        mov        [ebx+8], eax 
        mov        eax, [ebp-4] 
        mov        [ebx+12], eax 
        mov        ebx, [ebp+20] 
        mov        eax, [ebp+16] 
        mov        byte ptr [ebx], 12 
        mov        dword ptr [eax], offset32  _lword_ste
        cmp        dword ptr [ebp-4], 0 
        jne        AllDone__hla_818
        cmp        word ptr [ebp-6], 0 
        jne        AllDone__hla_818
        mov        byte ptr [ebx], 11 
        mov        dword ptr [eax], offset32  _tbyte_ste
        cmp        word ptr [ebp-8], 0 
        jne        AllDone__hla_818
        mov        byte ptr [ebx], 10 
        mov        dword ptr [eax], offset32  _qword_ste
        cmp        dword ptr [ebp-12], 0 
        jne        AllDone__hla_818
        mov        byte ptr [ebx], 9 
        mov        dword ptr [eax], offset32  _dword_ste
        cmp        word ptr [ebp-14], 0 
        jne        AllDone__hla_818
        mov        byte ptr [ebx], 8 
        mov        dword ptr [eax], offset32  _word_ste
        cmp        byte ptr [ebp-15], 0 
        jne        AllDone__hla_818
        mov        byte ptr [ebx], 7 
        mov        dword ptr [eax], offset32  _byte_ste

AllDone__hla_818:
        pop        ebx
x_BinStrToInt:
        mov        esp, ebp 
        pop        ebp
        ret
_BinStrToInt endp

_HexStrToInt proc near32
        push        ebp
        mov        ebp, esp 
        sub        esp, 16 
        push        ebx
        push        ecx
        xor        eax, eax 
        mov        [ebp-16], eax 
        mov        [ebp-12], eax 
        mov        [ebp-8], eax 
        mov        [ebp-4], eax 
        mov        ebx, [ebp+8] 
        jmp        start__hla_819

ForEachDigit__hla_820:
        cmp        al, 57 
        jna        false__hla_821
        add        al, 9 
false__hla_821:
        shl        al, 4 
        mov        ecx, 4 
false__hla_822:
repeat__hla_822:
        shl        al, 1 
        rcl        dword ptr [ebp-16], 1 
        rcl        dword ptr [ebp-12], 1 
        rcl        dword ptr [ebp-8], 1 
        rcl        dword ptr [ebp-4], 1 
        jnc        false__hla_823
        push        ebx
        mov        ebx, esp 
        sub        esp, 28 
        and        esp, -16 
        pushd      offset32 str__hla_516
        pushd      8286

        pushd      offset32 str__hla_824

        call       _HLAerror
        mov        esp, ebx 
        pop        ebx
false__hla_823:
        dec        ecx
continue__hla_822:
        jnz        repeat__hla_822
exitloop__hla_822:


start__hla_819:
        inc        ebx
        mov        al, [ebx] 
        cmp        al, 0 
        jne        ForEachDigit__hla_820
        mov        ebx, [ebp+12] 
        mov        eax, [ebp-16] 
        mov        [ebx], eax 
        mov        eax, [ebp-12] 
        mov        [ebx+4], eax 
        mov        eax, [ebp-8] 
        mov        [ebx+8], eax 
        mov        eax, [ebp-4] 
        mov        [ebx+12], eax 
        mov        ebx, [ebp+20] 
        mov        eax, [ebp+16] 
        mov        byte ptr [ebx], 12 
        mov        dword ptr [eax], offset32  _lword_ste
        cmp        dword ptr [ebp-4], 0 
        jne        AllDone__hla_825
        cmp        word ptr [ebp-6], 0 
        jne        AllDone__hla_825
        mov        byte ptr [ebx], 11 
        mov        dword ptr [eax], offset32  _tbyte_ste
        cmp        word ptr [ebp-8], 0 
        jne        AllDone__hla_825
        mov        byte ptr [ebx], 10 
        mov        dword ptr [eax], offset32  _qword_ste
        cmp        dword ptr [ebp-12], 0 
        jne        AllDone__hla_825
        mov        byte ptr [ebx], 9 
        mov        dword ptr [eax], offset32  _dword_ste
        cmp        word ptr [ebp-14], 0 
        jne        AllDone__hla_825
        mov        byte ptr [ebx], 8 
        mov        dword ptr [eax], offset32  _word_ste
        cmp        byte ptr [ebp-15], 0 
        jne        AllDone__hla_825
        mov        byte ptr [ebx], 7 
        mov        dword ptr [eax], offset32  _byte_ste

AllDone__hla_825:
        pop        ecx
        pop        ebx
x_HexStrToInt:
        mov        esp, ebp 
        pop        ebp
        ret
_HexStrToInt endp

_real80to64 proc near32
        push        ebp
        mov        ebp, esp 
        mov        eax, [ebp+8] 
        fld        real10 ptr [eax]
        fstp       real8 ptr [eax]
        mov        dword ptr [eax+8], 0 
        mov        dword ptr [eax+12], 0 
x_real80to64:
        mov        esp, ebp 
        pop        ebp
        ret
_real80to64 endp

_real80to32 proc near32
        push        ebp
        mov        ebp, esp 
        mov        eax, [ebp+8] 
        fld        real10 ptr [eax]
        fstp       real4 ptr [eax]
        mov        dword ptr [eax+4], 0 
        mov        dword ptr [eax+8], 0 
        mov        dword ptr [eax+12], 0 
x_real80to32:
        mov        esp, ebp 
        pop        ebp
        ret
_real80to32 endp

_unsf80 proc near32
        push        ebp
        mov        ebp, esp 
        mov        eax, [ebp+8] 
        fild       qword ptr [eax]
        mov        eax, [ebp+12] 
        fstp       real10 ptr [eax]
x_unsf80:
        mov        esp, ebp 
        pop        ebp
        ret
_unsf80 endp

_f80int proc near32
        push        ebp
        mov        ebp, esp 
        sub        esp, 4 
        fstcw      word ptr [ebp-4]
        fldcw      fcw__hla_826
        fld        real10 ptr [ebp+8]
        mov        eax, [ebp+20] 
        fistp      qword ptr [eax]
        fldcw      word ptr [ebp-4]
x_f80int:
        mov        esp, ebp 
        pop        ebp
        ret
_f80int endp

_fadd80 proc near32
        push        ebp
        mov        ebp, esp 
        fld        real10 ptr [ebp+12]
        fld        real10 ptr [ebp+24]
        faddp      st(1), st(0) 
        mov        eax, [ebp+8] 
        fstp       real10 ptr [eax]
        pop        ebp
        ret
x_fadd80:
_fadd80 endp

_fsub80 proc near32
        push        ebp
        mov        ebp, esp 
        fld        real10 ptr [ebp+12]
        fld        real10 ptr [ebp+24]
        fsubp      st(1), st(0) 
        mov        eax, [ebp+8] 
        fstp       real10 ptr [eax]
        pop        ebp
        ret
x_fsub80:
_fsub80 endp

_fmul80 proc near32
        push        ebp
        mov        ebp, esp 
        fld        real10 ptr [ebp+12]
        fld        real10 ptr [ebp+24]
        fmulp      st(1), st(0) 
        mov        eax, [ebp+8] 
        fstp       real10 ptr [eax]
        pop        ebp
        ret
x_fmul80:
_fmul80 endp

_fdiv80 proc near32
        push        ebp
        mov        ebp, esp 
        fld        real10 ptr [ebp+12]
        fld        real10 ptr [ebp+24]
        fdivp      st(1), st(0) 
        mov        eax, [ebp+8] 
        fstp       real10 ptr [eax]
        pop        ebp
        ret
x_fdiv80:
_fdiv80 endp

_fneg80 proc near32
        push        ebp
        mov        ebp, esp 
        fld        real10 ptr [ebp+12]
        fchs
        mov        eax, [ebp+8] 
        fstp       real10 ptr [eax]
        pop        ebp
        ret
x_fneg80:
_fneg80 endp

_fabs80 proc near32
        push        ebp
        mov        ebp, esp 
        fld        real10 ptr [ebp+12]
        fabs
        mov        eax, [ebp+8] 
        fstp       real10 ptr [eax]
        pop        ebp
        ret
x_fabs80:
_fabs80 endp

_fmax80 proc near32
        push        ebp
        mov        ebp, esp 
        fld        real10 ptr [ebp+12]
        fld        real10 ptr [ebp+24]
        fcom       st(1)
        fstsw      ax
        sahf
        mov        eax, [ebp+8] 
        jb         false__hla_827
        fstp       real10 ptr [ebp+24]
        fstp       real10 ptr [eax]
        jmp        endif__hla_827
false__hla_827:
        fstp       real10 ptr [eax]
        fstp       real10 ptr [ebp+12]
endif__hla_827:
        pop        ebp
        ret
x_fmax80:
_fmax80 endp

_fmin80 proc near32
        push        ebp
        mov        ebp, esp 
        fld        real10 ptr [ebp+12]
        fld        real10 ptr [ebp+24]
        fcom       st(1)
        fstsw      ax
        sahf
        mov        eax, [ebp+8] 
        jnb        false__hla_828
        fstp       real10 ptr [ebp+24]
        fstp       real10 ptr [eax]
        jmp        endif__hla_828
false__hla_828:
        fstp       real10 ptr [eax]
        fstp       real10 ptr [ebp+12]
endif__hla_828:
        pop        ebp
        ret
x_fmin80:
_fmin80 endp

_feq80  proc near32
        push        ebp
        mov        ebp, esp 
        fld        real10 ptr [ebp+20]
        fld        real10 ptr [ebp+8]
        fcompp     
        fstsw      ax
        sahf
        mov        eax, 0 
        setz       al
        pop        ebp
        ret
x_feq80:
_feq80  endp

_fne80  proc near32
        push        ebp
        mov        ebp, esp 
        fld        real10 ptr [ebp+20]
        fld        real10 ptr [ebp+8]
        fcompp     
        fstsw      ax
        sahf
        mov        eax, 0 
        setnz      al
        pop        ebp
        ret
x_fne80:
_fne80  endp

_flt80  proc near32
        push        ebp
        mov        ebp, esp 
        fld        real10 ptr [ebp+20]
        fld        real10 ptr [ebp+8]
        fcompp     
        fstsw      ax
        sahf
        mov        eax, 0 
        setb       al
        pop        ebp
        ret
x_flt80:
_flt80  endp

_fle80  proc near32
        push        ebp
        mov        ebp, esp 
        fld        real10 ptr [ebp+20]
        fld        real10 ptr [ebp+8]
        fcompp     
        fstsw      ax
        sahf
        mov        eax, 0 
        setbe      al
        pop        ebp
        ret
x_fle80:
_fle80  endp

_fgt80  proc near32
        push        ebp
        mov        ebp, esp 
        fld        real10 ptr [ebp+20]
        fld        real10 ptr [ebp+8]
        fcompp     
        fstsw      ax
        sahf
        mov        eax, 0 
        setnbe     al
        pop        ebp
        ret
x_fgt80:
_fgt80  endp

_fge80  proc near32
        push        ebp
        mov        ebp, esp 
        fld        real10 ptr [ebp+20]
        fld        real10 ptr [ebp+8]
        fcompp     
        fstsw      ax
        sahf
        mov        eax, 0 
        setnb      al
        pop        ebp
        ret
x_fge80:
_fge80  endp

_ceil80 proc near32
        push        ebp
        mov        ebp, esp 
        fstcw      fcwSave__hla_829
        push        word ptr fcwSave__hla_829
        pop        word ptr fcw__hla_830
        mov        fcw__hla_830, 3967 
        fldcw      fcw__hla_830
        mov        ax, [ebp+20] 
        and        ax, 32767 
        cmp        ax, 16383 
        jnb        false__hla_831
        test       byte ptr [ebp+21], 128 
        jns        false__hla_832
        fldz
        jmp        endif__hla_832
false__hla_832:
        cmp        dword ptr [ebp+12], 0 
        jnz        IsOne__hla_833
        cmp        dword ptr [ebp+16], 0 
        jnz        IsOne__hla_833
        cmp        word ptr [ebp+20], 0 
        jnz        IsOne__hla_833
        fldz
        jmp        WasZero__hla_834

IsOne__hla_833:
        fld1

WasZero__hla_834:
endif__hla_832:
        jmp        endif__hla_831
false__hla_831:
        fld        real10 ptr [ebp+12]
        frndint
        fld        real10 ptr [ebp+12]
        fcomp      st(1)
        fstsw      ax
        sahf
        jz         false__hla_835
        cmp        byte ptr [ebp+21], 0 
        jnge       false__hla_836
        fld1
        faddp      st(1), st(0) 
false__hla_836:
false__hla_835:
endif__hla_831:
        mov        eax, [ebp+8] 
        fstp       real10 ptr [eax]
        fldcw      fcwSave__hla_829
        pop        ebp
        ret
x_ceil80:
_ceil80 endp

_floor80 proc near32
        push        ebp
        mov        ebp, esp 
        fstcw      fcwSave__hla_837
        push        word ptr fcwSave__hla_837
        pop        word ptr fcw__hla_838
        or         fcw__hla_838, 3967 
        fldcw      fcw__hla_838
        mov        ax, [ebp+20] 
        and        ax, 32767 
        cmp        ax, 16383 
        jnb        false__hla_839
        fldz
        jmp        endif__hla_839
false__hla_839:
        fld        real10 ptr [ebp+12]
        frndint
        fld        real10 ptr [ebp+12]
        fcomp      st(1)
        fstsw      ax
        sahf
        jz         false__hla_840
        cmp        byte ptr [ebp+21], 0 
        jnl        false__hla_841
        fld1
        fsubp      st(1), st(0) 
false__hla_841:
false__hla_840:
endif__hla_839:
        mov        eax, [ebp+8] 
        fstp       real10 ptr [eax]
        fldcw      fcwSave__hla_837
        pop        ebp
        ret
x_floor80:
_floor80 endp

_cos80  proc near32
        push        ebp
        mov        ebp, esp 
        fld        real10 ptr [ebp+12]
        fcos
        mov        eax, [ebp+8] 
        fstp       real10 ptr [eax]
        pop        ebp
        ret
x_cos80:
_cos80  endp

_sin80  proc near32
        push        ebp
        mov        ebp, esp 
        fld        real10 ptr [ebp+12]
        fsin
        mov        eax, [ebp+8] 
        fstp       real10 ptr [eax]
        pop        ebp
        ret
x_sin80:
_sin80  endp

_tan80  proc near32
        push        ebp
        mov        ebp, esp 
        fld        real10 ptr [ebp+12]
        fsincos
        fdivp      st(1), st(0) 
        mov        eax, [ebp+8] 
        fstp       real10 ptr [eax]
        pop        ebp
        ret
x_tan80:
_tan80  endp

_log80  proc near32
        push        ebp
        mov        ebp, esp 
        fld1
        fld        real10 ptr [ebp+12]
        fyl2x
        fldl2e
        fdivp      st(1), st(0) 
        mov        eax, [ebp+8] 
        fstp       real10 ptr [eax]
        pop        ebp
        ret
x_log80:
_log80  endp

_log1080 proc near32
        push        ebp
        mov        ebp, esp 
        fld1
        fld        real10 ptr [ebp+12]
        fyl2x
        fldl2t
        fdivp      st(1), st(0) 
        mov        eax, [ebp+8] 
        fstp       real10 ptr [eax]
        pop        ebp
        ret
x_log1080:
_log1080 endp

_sqrt80 proc near32
        push        ebp
        mov        ebp, esp 
        fld        real10 ptr [ebp+12]
        fsqrt
        mov        eax, [ebp+8] 
        fstp       real10 ptr [eax]
        pop        ebp
        ret
x_sqrt80:
_sqrt80 endp

_exp80  proc near32
        push        ebp
        mov        ebp, esp 
        fld        real10 ptr [ebp+12]
        fldl2e
        fmulp      st(1), st(0) 
        fstcw      SaveCW__hla_842
        mov        MaskedCW__hla_843, 3967 
        fld        st(0)
        frndint
        fxch
        fsub       st(0), st(1) 
        f2xm1
        fld1
        faddp      st(1), st(0) 
        fxch
        fld1
        fscale
        fstp       st(1)
        fmulp      st(1), st(0) 
        fldcw      SaveCW__hla_842
        pop        ebp
        ret
x_exp80:
_exp80  endp

DigitsToRightOfDecPt__hla_846 proc near32
        dec        esi

DigitLoop__hla_847:
        xor        eax, eax 
false__hla_848:
repeat__hla_848:
        inc        esi
        mov        al, [esi] 
continue__hla_848:
        cmp        al, 95 
        je         repeat__hla_848
exitloop__hla_848:

        sub        al, 48 
        cmp        al, 10 
        jae        EndDigits__hla_849
        dec        edx
        test       ebx, ebx 
        jz         DigitLoop__hla_847
        mov        [ebp+ebx*1-20], al 
        dec        ebx
        jmp        DigitLoop__hla_847

EndDigits__hla_849:
        ret
xDigitsToRightOfDecPt__hla_846:
DigitsToRightOfDecPt__hla_846 endp

_atold  proc near32
        push        ebp
        mov        ebp, esp 
        sub        esp, 40 
        finit
        push        eax
        push        ebx
        push        ecx
        push        edx
        push        esi
        mov        esi, [ebp+12] 
        xor        eax, eax 
        mov        [ebp-20], eax 
        mov        [ebp-16], eax 
        mov        [ebp-12], eax 
        mov        [ebp-8], eax 
        mov        [ebp-4], eax 
        mov        [ebp-30], eax 
        mov        [ebp-26], eax 
        mov        [ebp-22], ax 
        dec        esi

whileDelimLoop__hla_850:
        xor        eax, eax 
false__hla_851:
repeat__hla_851:
        inc        esi
        mov        al, [esi] 
continue__hla_851:
        cmp        al, 95 
        je         repeat__hla_851
exitloop__hla_851:

        cmp        eax, 128 
        jnae       false__hla_852
        clc
        jmp        endif__hla_852
false__hla_852:
        bt         dword ptr Delimiters__hla_845, eax 
endif__hla_852:
        jc         whileDelimLoop__hla_850
        mov        cl, 0 
        cmp        al, 45 
        jne        false__hla_853
        xor        eax, eax 
false__hla_854:
repeat__hla_854:
        inc        esi
        mov        al, [esi] 
continue__hla_854:
        cmp        al, 95 
        je         repeat__hla_854
exitloop__hla_854:

        mov        cl, 1 
        jmp        endif__hla_853
false__hla_853:
        cmp        al, 43 
        jne        false__hla_855
        xor        eax, eax 
false__hla_856:
repeat__hla_856:
        inc        esi
        mov        al, [esi] 
continue__hla_856:
        cmp        al, 95 
        je         repeat__hla_856
exitloop__hla_856:

false__hla_855:
endif__hla_853:
        mov        edx, -18 
        mov        ebx, 18 
        push        esi
        cmp        al, 46 
        jne        false__hla_857
        xor        eax, eax 
false__hla_858:
repeat__hla_858:
        inc        esi
        mov        al, [esi] 
continue__hla_858:
        cmp        al, 95 
        je         repeat__hla_858
exitloop__hla_858:

false__hla_857:
        cmp        al, 48 
        jb         Failed__hla_859
        cmp        al, 57 
        ja         Failed__hla_859
        pop        esi
        dec        esi
        xor        eax, eax 
false__hla_860:
repeat__hla_860:
        inc        esi
        mov        al, [esi] 
continue__hla_860:
        cmp        al, 95 
        je         repeat__hla_860
exitloop__hla_860:

        jmp        continue__hla_861
while__hla_861:
        xor        eax, eax 
false__hla_863:
repeat__hla_863:
        inc        esi
        mov        al, [esi] 
continue__hla_863:
        cmp        al, 95 
        je         repeat__hla_863
exitloop__hla_863:

continue__hla_861:
        cmp        al, 48 
        je         while__hla_861
exitloop__hla_861:

        cmp        al, 46 
        jne        false__hla_864
        inc        edx
false__hla_865:
repeat__hla_865:
        dec        edx
        xor        eax, eax 
false__hla_866:
repeat__hla_866:
        inc        esi
        mov        al, [esi] 
continue__hla_866:
        cmp        al, 95 
        je         repeat__hla_866
exitloop__hla_866:

continue__hla_865:
        cmp        al, 48 
        je         repeat__hla_865
exitloop__hla_865:

        jmp        endif__hla_864
false__hla_864:

while__hla_867:
continue__hla_868:
        sub        al, 48 
        cmp        al, 10 
        jae        false__hla_867
true__hla_867:
        inc        edx
        test       ebx, ebx 
        je         false__hla_869
        mov        [ebp+ebx*1-20], al 
        dec        ebx
false__hla_869:
        xor        eax, eax 
false__hla_870:
repeat__hla_870:
        inc        esi
        mov        al, [esi] 
continue__hla_870:
        cmp        al, 95 
        je         repeat__hla_870
exitloop__hla_870:

        jmp        while__hla_867
exitloop__hla_867:
exitloop__hla_868:
false__hla_867:

        cmp        al, -2 
        jne        false__hla_871
        xor        eax, eax 
false__hla_872:
repeat__hla_872:
        inc        esi
        mov        al, [esi] 
continue__hla_872:
        cmp        al, 95 
        je         repeat__hla_872
exitloop__hla_872:

false__hla_871:
endif__hla_864:
        dec        esi
        xor        eax, eax 
false__hla_873:
repeat__hla_873:
        inc        esi
        mov        al, [esi] 
continue__hla_873:
        cmp        al, 95 
        je         repeat__hla_873
exitloop__hla_873:


while__hla_874:
continue__hla_875:
        sub        al, 48 
        cmp        al, 10 
        jae        false__hla_874
true__hla_874:
        test       ebx, ebx 
        je         false__hla_876
        mov        [ebp+ebx*1-20], al 
        dec        ebx
false__hla_876:
        xor        eax, eax 
false__hla_877:
repeat__hla_877:
        inc        esi
        mov        al, [esi] 
continue__hla_877:
        cmp        al, 95 
        je         repeat__hla_877
exitloop__hla_877:

        jmp        while__hla_874
exitloop__hla_874:
exitloop__hla_875:
false__hla_874:

        dec        esi
        xor        eax, eax 
false__hla_878:
repeat__hla_878:
        inc        esi
        mov        al, [esi] 
continue__hla_878:
        cmp        al, 95 
        je         repeat__hla_878
exitloop__hla_878:

        cmp        al, 101 
        je         true__hla_879
        cmp        al, 69 
        jne        false__hla_879
true__hla_879:
        xor        eax, eax 
false__hla_880:
repeat__hla_880:
        inc        esi
        mov        al, [esi] 
continue__hla_880:
        cmp        al, 95 
        je         repeat__hla_880
exitloop__hla_880:

        cmp        al, 45 
        setz       ch
        cmp        al, 43 
        je         true__hla_881
        cmp        al, 45 
        jne        false__hla_881
true__hla_881:
        xor        eax, eax 
false__hla_882:
repeat__hla_882:
        inc        esi
        mov        al, [esi] 
continue__hla_882:
        cmp        al, 95 
        je         repeat__hla_882
exitloop__hla_882:

false__hla_881:
        sub        al, 48 
        cmp        al, 10 
        jae        Failed__hla_859
        xor        ebx, ebx 

ExpLoop__hla_883:
        movzx      eax, byte ptr [esi] 
        sub        al, 48 
        cmp        al, 10 
        jae        ExpDone__hla_884
        imul       ebx, ebx, 10 
        add        ebx, eax 
        inc        esi
        jmp        ExpLoop__hla_883

ExpDone__hla_884:
        cmp        ch, 1 
        jne        false__hla_885
        neg        ebx
false__hla_885:
        add        edx, ebx 
false__hla_879:
        cmp        edx, 4930 
        jg         Failed__hla_859
        cmp        edx, -4930 
        jl         Failed__hla_859
        mov        al, [ebp-2] 
        shl        al, 4 
        or         al, [ebp-3] 
        mov        [ebp-22], al 
        mov        al, [ebp-4] 
        shl        al, 4 
        or         al, [ebp-5] 
        mov        [ebp-23], al 
        mov        al, [ebp-6] 
        shl        al, 4 
        or         al, [ebp-7] 
        mov        [ebp-24], al 
        mov        al, [ebp-8] 
        shl        al, 4 
        or         al, [ebp-9] 
        mov        [ebp-25], al 
        mov        al, [ebp-10] 
        shl        al, 4 
        or         al, [ebp-11] 
        mov        [ebp-26], al 
        mov        al, [ebp-12] 
        shl        al, 4 
        or         al, [ebp-13] 
        mov        [ebp-27], al 
        mov        al, [ebp-14] 
        shl        al, 4 
        or         al, [ebp-15] 
        mov        [ebp-28], al 
        mov        al, [ebp-16] 
        shl        al, 4 
        or         al, [ebp-17] 
        mov        [ebp-29], al 
        mov        al, [ebp-18] 
        shl        al, 4 
        or         al, [ebp-19] 
        mov        [ebp-30], al 
        fbld       tbyte ptr [ebp-30]
        mov        ebx, -10 
        cmp        edx, 0 
        jnl        false__hla_886
        neg        edx
        shl        edx, 19 
        jmp        continue__hla_887
while__hla_887:
        add        ebx, 10 
        shl        edx, 1 
        jnc        false__hla_889
        fld        real10 ptr PotTbl__hla_844[ebx]
        fdivp      st(1), st(0) 
false__hla_889:
continue__hla_887:
        test       edx, edx 
        jne        while__hla_887
exitloop__hla_887:

        jmp        endif__hla_886
false__hla_886:
        shl        edx, 19 
        jmp        continue__hla_890
while__hla_890:
        add        ebx, 10 
        shl        edx, 1 
        jnc        false__hla_892
true__hla_892:
        fld        real10 ptr PotTbl__hla_844[ebx]
        fmulp      st(1), st(0) 
false__hla_892:
continue__hla_890:
        test       edx, edx 
        jne        while__hla_890
exitloop__hla_890:

endif__hla_886:
        cmp        cl, 1 
        jne        false__hla_893
        fchs
false__hla_893:
        jmp        GoodEndOfFP__hla_894

Failed__hla_859:
        fldz

GoodEndOfFP__hla_894:
        mov        eax, [ebp+8] 
        fstp       real10 ptr [eax]

ExitAtold__hla_895:
        pop        esi
        pop        edx
        pop        ecx
        pop        ebx
        pop        eax
        mov        esp, ebp 
        pop        ebp
        ret
x_atold:
_atold  endp

htoa__hla_896 proc near32
        push        eax
        mov        ah, al 
        shr        al, 4 
        or         al, 48 
        stosb
        mov        al, ah 
        and        al, 15 
        or         al, 48 
        stosb
        pop        eax
        ret
xhtoa__hla_896:
htoa__hla_896 endp

FPDigits__hla_897 proc near32
        fldz
        fcomp      st(1)
        fstsw      ax
        sahf
        jnz        false__hla_905
        mov        eax, 808464432 
        stosd
        stosd
        stosd
        stosd
        stosd
        stosd
        xor        edx, edx 
        mov        bl, 32 
        jmp        endif__hla_905
false__hla_905:
        mov        bl, 32 
        jna        false__hla_906
        fabs
        mov        bl, 45 
false__hla_906:
        xor        edx, edx 
        fld1
        fcomp      st(1)
        fstsw      ax
        sahf
        jnae       false__hla_907
forever__hla_909:
continue__hla_908:
        fld        real10 ptr OneEm10__hla_901
        fcomp      st(1)
        fstsw      ax
        sahf
        jbe        exitloop__hla_908
        sub        edx, 10 
        fld        real10 ptr OneE10__hla_900
        fmulp      st(1), st(0) 
        jmp        forever__hla_909
exitloop__hla_908:

forever__hla_912:
continue__hla_911:
        fld1
        fcomp      st(1)
        fstsw      ax
        sahf
        jbe        exitloop__hla_911
        dec        edx
        fld        real10 ptr Ten__hla_902
        fmulp      st(1), st(0) 
        jmp        forever__hla_912
exitloop__hla_911:

        fld        real10 ptr FiveEm18__hla_903
        faddp      st(1), st(0) 
        fld        real10 ptr Ten__hla_902
        fcomp      st(1)
        fstsw      ax
        sahf
        jnbe       false__hla_914
        fld        real10 ptr Ten__hla_902
        fdivp      st(1), st(0) 
        inc        edx
false__hla_914:
        jmp        endif__hla_907
false__hla_907:
forever__hla_916:
continue__hla_915:
        fld        real10 ptr OneE10__hla_900
        fcomp      st(1)
        fstsw      ax
        sahf
        ja         exitloop__hla_915
        add        edx, 10 
        fld        real10 ptr OneE10__hla_900
        fdivp      st(1), st(0) 
        jmp        forever__hla_916
exitloop__hla_915:

forever__hla_919:
continue__hla_918:
        fld        real10 ptr Ten__hla_902
        fcomp      st(1)
        fstsw      ax
        sahf
        ja         exitloop__hla_918
        inc        edx
        fld        real10 ptr Ten__hla_902
        fdivp      st(1), st(0) 
        jmp        forever__hla_919
exitloop__hla_918:

endif__hla_907:
        fld        st(0)
        sub        esp, 20 
        fld        real10 ptr TenTo17__hla_898
        fmulp      st(1), st(0) 
        fbstp      tbyte ptr [esp]
        cmp        byte ptr [esp+9], 153 
        jna        false__hla_921
        fld        real10 ptr TenTo16__hla_899
        fmulp      st(1), st(0) 
        fbstp      tbyte ptr [esp]
        inc        edx
        jmp        endif__hla_921
false__hla_921:
        fstp       st(0)
endif__hla_921:
        mov        ecx, 8 
false__hla_922:
repeat__hla_922:
        mov        al, [esp+ecx*1] 
        call       htoa__hla_896
        dec        ecx
continue__hla_922:
        cmp        ecx, 0 
        jnl        repeat__hla_922
exitloop__hla_922:

        add        esp, 20 
endif__hla_905:
        mov        eax, edx 
        ret
xFPDigits__hla_897:
FPDigits__hla_897 endp

_e80Str proc near32
        push        ebp
        mov        ebp, esp 
        pushfd
        pushad
        cld
        finit
        cmp        dword ptr [ebp+18], 0 
        jne        false__hla_926
        cmp        dword ptr [ebp+14], 0 
        jne        false__hla_926
        mov        ax, [ebp+12] 
        and        ax, 65520 
        jne        false__hla_926
true__hla_926:
        mov        ebx, [ebp+8] 
        mov        byte ptr [ebx], 48 
        mov        byte ptr [ebx+1], 46 
        mov        byte ptr [ebx+2], 48 
        mov        byte ptr [ebx+3], 0 
        jmp        endif__hla_927
false__hla_926:
        fld        real10 ptr [ebp+12]
        lea        edi, Digits__hla_923 
        call       FPDigits__hla_897
        mov        Exponent__hla_924, eax 
        mov        Sign__hla_925, bl 
        mov        edi, [ebp+8] 
        xor        edx, edx 
        mov        al, Sign__hla_925 
        cmp        al, 45 
        je         false__hla_928
        mov        al, 32 
false__hla_928:
        stosb
        mov        al, Digits__hla_923 
        stosb
        mov        al, 46 
        stosb
        mov        ecx, 17 
        lea        esi, Digits__hla_923[1] 
        rep movsb
        mov        al, 101 
        stosb
        mov        al, 43 
        cmp        Exponent__hla_924, 0 
        jnl        false__hla_929
        mov        al, 45 
        neg        Exponent__hla_924
false__hla_929:
        stosb
        mov        eax, Exponent__hla_924 
        xor        edx, edx 
        mov        ebx, 1000 
        div        ebx
        or         al, 48 
        stosb
        mov        eax, edx 
        xor        edx, edx 
        mov        ebx, 100 
        div        ebx
        or         al, 48 
        stosb
        mov        eax, edx 
        xor        edx, edx 
        mov        ebx, 10 
        div        ebx
        or         al, 48 
        stosb
        mov        al, dl 
        or         al, 48 
        stosb
        mov        al, 0 
        stosb
endif__hla_927:
        popad
        popfd
        pop        ebp
        ret
x_e80Str:
_e80Str endp




		end

