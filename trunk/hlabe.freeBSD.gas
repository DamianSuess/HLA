// Assembly code emitted by HLA compiler
// Version 2.7 build 3234 (prototype)
// HLA compiler written by Randall Hyde
// GAS compatible output


        .global    numCodeRelocs
        .global    dataSize
        .global    QuitMain__hla_
        .global    numDataRelocs
        .global    _hlabe_compile
        .global    compileMACHO
        .global    DfltExHndlr__hla_
        .global    bssSize
        .global    compileELF
        .global    symbolTable
        .global    codeSize
        .global    hlabe_compile
        .global    currentSection
        .global    lexer
        .global    equatesTable
        .global    compileCOFF
        .global    printLineNumberChain
        .global    optimizeDisps
        .global    InstallSignals__hla_


  .text


        .extern    MEM_FREE
        .extern    STR_CPY
        .extern    STR_INIT
        .extern    STR_CPYZ
        .extern    EX_PRINTEXCEPTIONERROR
        .extern    MEM_ALLOC1
        .extern    FILEIO_OPENNEW
        .extern    STR_A_CPY
        .extern    STDOUT_PUTSSIZE
        .extern    CONV_GETDELIMITERS
        .extern    CONV_SETDELIMITERS
        .extern    FILEIO_CLOSE
        .extern    STDERR_PUTI32
        .extern    MEM_ZALLOC
        .extern    STR_LENGTH
        .extern    STDERR_PUTS
        .extern    STDERR_PUTC
        .extern    _HLA_GET_EXCEPTIONPTREBP
        .extern    STDERR_PUTU32
        .extern    STDOUT_PUTU32
        .extern    _HLA_PUSH_EXCEPTIONPTR
        .extern    FILEIO_WRITE
        .extern    STDERR_NEWLN
        .extern    STDOUT_NEWLN
        .extern    DefaultExceptionHandler__hla_
        .extern    abstract__hla_
        .extern    STDOUT_PUTZS
        .extern    CONV_ATOH128
        .extern    STR_A_BUFTOSTR2
        .extern    _HLA_SET_EXCEPTIONPTR
        .extern    STDERR_PUTU8
        .extern    STDOUT_PUTU8
        .extern    ZSTR_CPY
        .extern    CONV_ATOU128
        .extern    TABLE_GETNODE
        .extern    TIME_UTCDATETIME
        .extern    MEM_REALLOC1
        .extern    BuildExcepts__hla_
        .extern    CONV_ATOH80
        .extern    CONV_ATOH64
        .extern    TIME_TOUNIXTIME
        .extern    CONV_ATOH32
        .extern    STDOUT_PUTS
        .extern    STDOUT_PUTD
        .extern    STDOUT_PUTC
        .extern    CONV_ATOU64
        .extern    CONV_ATOU32
        .extern    CSET_SETUNION
        .extern    Raise__hla_
        .extern    TABLE_CREATE
        .extern    shortDfltExcept__hla_
        .extern    TABLE_LOOKUP






  .text



        .type      DfltExHndlr__hla_,@function

DfltExHndlr__hla_:
        pushl      %ebp 
        movl       %esp, %ebp 
        jmp        DefaultExceptionHandler__hla_
xDfltExHndlr__hla___hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
End_DfltExHndlr__hla__3332:
  .size DfltExHndlr__hla_,End_DfltExHndlr__hla__3332-DfltExHndlr__hla_



        .type      InstallSignals__hla_,@function

InstallSignals__hla_:
        pushl      %ebp 
        movl       %esp, %ebp 
xInstallSignals__hla___hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
End_InstallSignals__hla__3335:
  .size InstallSignals__hla_,End_InstallSignals__hla__3335-InstallSignals__hla_



        .type      freeTableRecord__hla_3342,@function

freeTableRecord__hla_3342:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      4(%ebx) 
        call       MEM_FREE
xfreeTableRecord__hla_3342__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
End_freeTableRecord__hla_3342_3347:
  .size freeTableRecord__hla_3342,End_freeTableRecord__hla_3342_3347-freeTableRecord__hla_3342



        .type      printLineNumberChain,@function

printLineNumberChain:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        mov        25(%ebx), %ebx 
        jmp        continue__hla_3350
while__hla_3350:
        pushl      $9 
        call       STDERR_PUTC
        pushl      4(%ebx) 
        call       STDERR_PUTS
        pushl      $58 
        call       STDERR_PUTC
        pushl      8(%ebx) 
        call       STDERR_PUTU32
        mov        (%ebx), %ebx 
        cmpl       $0, %ebx 
        je         false__hla_3352
        pushl      $str__hla_3353 
        call       STDERR_PUTS
false__hla_3352:
continue__hla_3350:
        cmpl       $0, %ebx 
        jne        while__hla_3350
exitloop__hla_3350:

        call       STDERR_NEWLN
        popl       %ebx 
xprintLineNumberChain__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
End_printLineNumberChain_3356:
  .size printLineNumberChain,End_printLineNumberChain_3356-printLineNumberChain



        .type      skipToEoln__hla_3369,@function

skipToEoln__hla_3369:
        jmp        continue__hla_3372
while__hla_3372:
        incl       %ebx 
continue__hla_3372:
        cmpl       end_source__hla_3365, %ebx 
        jnb        L3374__hla_
        cmpb       $10, (%ebx) 
        jne        while__hla_3372
L3374__hla_:
exitloop__hla_3372:

        incl       %ebx 
        incl       lineNumber__hla_3359 
        ret
End_skipToEoln__hla_3369_3377:
  .size skipToEoln__hla_3369,End_skipToEoln__hla_3369_3377-skipToEoln__hla_3369



        .type      skipSpaces__hla_3380,@function

skipSpaces__hla_3380:
        decl       %ebx 

skipSpcs__hla_3383:
        incl       %ebx 
        cmpl       end_source__hla_3365, %ebx 
        jae        skippedSpaces__hla_3384
        mov        (%ebx), %al 
        cmpb       $32, %al 
        je         skipSpcs__hla_3383
        cmpb       $9, %al 
        je         skipSpcs__hla_3383
        cmpb       $13, %al 
        je         skipSpcs__hla_3383

skippedSpaces__hla_3384:
        ret
End_skipSpaces__hla_3380_3387:
  .size skipSpaces__hla_3380,End_skipSpaces__hla_3380_3387-skipSpaces__hla_3380



        .type      skipSpaces2__hla_3390,@function

skipSpaces2__hla_3390:
        decl       %ebx 

skipSpcs__hla_3393:
        incl       %ebx 
        cmpl       end_source__hla_3365, %ebx 
        jae        skippedSpaces__hla_3394
        mov        (%ebx), %al 
        cmpb       $32, %al 
        je         skipSpcs__hla_3393
        cmpb       $9, %al 
        je         skipSpcs__hla_3393
        cmpb       $13, %al 
        je         skipSpcs__hla_3393
        ret

skippedSpaces__hla_3394:
        pushl      $str__hla_3395 
        call       STDOUT_PUTS
        mov        $20, %eax 
        jmp        Raise__hla_
End_skipSpaces2__hla_3390_3398:
  .size skipSpaces2__hla_3390,End_skipSpaces2__hla_3390_3398-skipSpaces2__hla_3390



        .type      grabID__hla_3401,@function

grabID__hla_3401:
        mov        4(%esp), %ecx 
forever__hla_3406:
continue__hla_3405:
        cmpl       end_source__hla_3365, %ebx 
        jae        exitloop__hla_3405
        movzbl     (%ebx), %eax 
        btl        %eax, idSet__hla_3402 
        jnc        exitloop__hla_3405
        mov        %al, (%ecx) 
        incl       %ebx 
        incl       %ecx 
        jmp        forever__hla_3406
exitloop__hla_3405:

        movb       $0, (%ecx) 
        mov        4(%esp), %edx 
        subl       %edx, %ecx 
        mov        %ecx, -4(%edx) 
        pushl      %esi 
        pushl      %edi 
false__hla_3409:
repeat__hla_3409:
        pushl      %edx 
        movl       $equatesTable, %esi 
        mov        (%esi), %edi 
        call *     8(%edi) 
        cmpl       $0, %eax 
        je         false__hla_3410
        mov        4(%eax), %eax 
        pushl      %eax 
        pushl      %edx 
        call       STR_CPY
false__hla_3410:
continue__hla_3409:
        cmpl       $0, %eax 
        jne        repeat__hla_3409
exitloop__hla_3409:

        popl       %edi 
        popl       %esi 
        cmpl       end_source__hla_3365, %ebx 
        setb       %al 
        movzbl     %al, %eax 
        ret        $4
End_grabID__hla_3401_3413:
  .size grabID__hla_3401,End_grabID__hla_3401_3413-grabID__hla_3401



        .type      unknownStmt__hla_3416,@function

unknownStmt__hla_3416:
        pushl      $str__hla_3419 
        call       STDOUT_PUTS
        mov        start_stmt__hla_3366, %ebx 
        jmp        continue__hla_3420
while__hla_3420:
        pushl      (%ebx) 
        call       STDOUT_PUTC
        incl       %ebx 
continue__hla_3420:
        cmpl       end_source__hla_3365, %ebx 
        jnb        L3422__hla_
        cmpb       $10, (%ebx) 
        jne        while__hla_3420
L3422__hla_:
exitloop__hla_3420:

        incl       %ebx 
        incl       lineNumber__hla_3359 
        call       STDOUT_NEWLN
        ret
End_unknownStmt__hla_3416_3425:
  .size unknownStmt__hla_3416,End_unknownStmt__hla_3416_3425-unknownStmt__hla_3416



        .type      getOperand__hla_3431,@function

getOperand__hla_3431:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $1028, %esp 
        pushl      %esi 
        call       skipSpaces2__hla_3390
        movzbl     (%ebx), %eax 
        cmpl       $36, %eax 
        jl         default__hla_3434
        cmpl       $122, %eax 
        jg         default__hla_3434
        jmp *      jmpTbl__hla_3434-144(,%eax,4) 
case__hla_3435:
        lea        1(%ebx), %esi 
        call       CONV_ATOH32
        movl       %esi, %ebx 
        xorl       %edx, %edx 
        jmp        endswitch__hla_3434
case__hla_3436:
        lea        (%ebx), %esi 
        call       CONV_ATOU32
        movl       %esi, %ebx 
        xorl       %edx, %edx 
        jmp        endswitch__hla_3434
case__hla_3437:
        pushl      %ebp 
        addl       $-1028, (%esp) 
        pushl      $1024 
        call       STR_INIT
        mov        %eax, -4(%ebp) 
        pushl      -4(%ebp) 
        call       grabID__hla_3401
        pushl      -4(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        call *     4(%edi) 
        cmpl       $0, 4(%eax) 
        jne        false__hla_3438
        movl       %eax, %edx 
        pushl      $24 
        call       MEM_ALLOC1
        mov        %eax, 4(%edx) 
        movb       $4, 21(%eax) 
        mov        8(%edx), %ecx 
        mov        %ecx, 4(%eax) 
        movl       $0, 12(%eax) 
        movl       $0, (%eax) 
        movb       $0, 20(%eax) 
        jmp        endif__hla_3438
false__hla_3438:
        mov        4(%eax), %edx 
        orb        $4, 21(%edx) 
        movl       %eax, %edx 
endif__hla_3438:
        xorl       %eax, %eax 
        jmp        endswitch__hla_3434
case__hla_3439:
        addl       $1, %ebx 
        call       RelExpr__hla_3428
        pushl      %eax 
        call       skipSpaces2__hla_3390
        cmpb       $41, %al 
        je         false__hla_3440
        pushl      $str__hla_3441 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3359 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $9, %eax 
        jmp        Raise__hla_
false__hla_3440:
        addl       $1, %ebx 
        popl       %eax 
        jmp        endswitch__hla_3434
default__hla_3434:
        pushl      $str__hla_3442 
        call       STDOUT_PUTS
        pushl      %eax 
        call       STDOUT_PUTC
        pushl      $str__hla_3443 
        call       STDOUT_PUTS
        pushl      lineNumber__hla_3359 
        call       STDOUT_PUTU32
        call       STDOUT_NEWLN
        mov        $20, %eax 
        jmp        Raise__hla_
endswitch__hla_3434:
        popl       %esi 
xgetOperand__hla_3431__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
End_getOperand__hla_3431_3446:
  .size getOperand__hla_3431,End_getOperand__hla_3431_3446-getOperand__hla_3431



        .type      RelExpr__hla_3428,@function

RelExpr__hla_3428:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $8, %esp 
        call       getOperand__hla_3431
        mov        %eax, -4(%ebp) 
        mov        %edx, -8(%ebp) 
forever__hla_3450:
continue__hla_3449:
        movzbl     (%ebx), %eax 
        cmpl       $43, %eax 
        je         case__hla_3452
        cmpl       $45, %eax 
        je         case__hla_3455
        jmp        default__hla_3451
case__hla_3452:
        addl       $1, %ebx 
        call       getOperand__hla_3431
        cmpl       $0, %edx 
        je         false__hla_3453
        pushl      $str__hla_3454 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3359 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3453:
        addl       %eax, -4(%ebp) 
        jmp        endswitch__hla_3451
case__hla_3455:
        addl       $1, %ebx 
        call       getOperand__hla_3431
        cmpl       $0, %edx 
        je         false__hla_3456
        pushl      $str__hla_3454 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3359 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3456:
        negl       %eax 
        addl       %eax, -4(%ebp) 
        jmp        endswitch__hla_3451
default__hla_3451:
        jmp        exitloop__hla_3449
endswitch__hla_3451:
        jmp        forever__hla_3450
exitloop__hla_3449:

        mov        -4(%ebp), %eax 
        mov        -8(%ebp), %edx 
xRelExpr__hla_3428__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
End_RelExpr__hla_3428_3459:
  .size RelExpr__hla_3428,End_RelExpr__hla_3428_3459-RelExpr__hla_3428



        .type      EvalExpr__hla_3462,@function

EvalExpr__hla_3462:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %edx 
        call       RelExpr__hla_3428
        cmpl       $0, %edx 
        je         false__hla_3465
        pushl      $str__hla_3466 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3359 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3465:
        popl       %edx 
xEvalExpr__hla_3462__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
End_EvalExpr__hla_3462_3469:
  .size EvalExpr__hla_3462,End_EvalExpr__hla_3462_3469-EvalExpr__hla_3462



        .type      parseBytes__hla_3472,@function

parseBytes__hla_3472:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $12, %esp 
        call       skipSpaces2__hla_3390
        cmpb       $34, (%ebx) 
        jne        false__hla_3475
        addl       $1, %ebx 
        mov        %ebx, -4(%ebp) 
        jmp        continue__hla_3476
while__hla_3476:
        addl       $1, %ebx 
continue__hla_3476:
        cmpb       $34, (%ebx) 
        jne        while__hla_3476
exitloop__hla_3476:

        mov        %ebx, -8(%ebp) 
        call       skipSpaces2__hla_3390
        cmpb       $44, (%ebx) 
        jne        false__hla_3478
        addl       $1, %ebx 
        mov        -8(%ebp), %eax 
        subl       -4(%ebp), %eax 
        addl       8(%ebp), %eax 
        pushl      %eax 
        call       parseBytes__hla_3472
        jmp        endif__hla_3478
false__hla_3478:
        mov        -8(%ebp), %ecx 
        subl       -4(%ebp), %ecx 
        addl       8(%ebp), %ecx 
        addl       $17, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC1
        subl       $17, %ecx 
        pushl      %edx 
        mov        tknListTail__hla_3360, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %ecx, 13(%eax) 
        mov        %eax, tknListTail__hla_3360 
        popl       %edx 
        addl       $17, %eax 
endif__hla_3478:
        pushl      %esi 
        pushl      %edi 
        pushl      %ecx 
        cld
        mov        -4(%ebp), %esi 
        movl       %eax, %edi 
        addl       8(%ebp), %edi 
        mov        -8(%ebp), %ecx 
        subl       %esi, %ecx 
        cld
        rep movsb
        popl       %ecx 
        popl       %edi 
        popl       %esi 
        jmp        endif__hla_3475
false__hla_3475:
        call       EvalExpr__hla_3462
        cmpl       $256, %eax 
        jnae       false__hla_3479
        pushl      $str__hla_3480 
        call       STDOUT_PUTS
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_3479:
        mov        %al, -9(%ebp) 
        call       skipSpaces2__hla_3390
        cmpb       $44, (%ebx) 
        jne        false__hla_3481
        addl       $1, %ebx 
        mov        8(%ebp), %eax 
        addl       $1, %eax 
        pushl      %eax 
        call       parseBytes__hla_3472
        jmp        endif__hla_3481
false__hla_3481:
        mov        8(%ebp), %ecx 
        addl       $18, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC1
        subl       $17, %ecx 
        pushl      %edx 
        mov        tknListTail__hla_3360, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %ecx, 13(%eax) 
        mov        %eax, tknListTail__hla_3360 
        popl       %edx 
        addl       $17, %eax 
endif__hla_3481:
        pushl      %ebx 
        pushl      %edx 
        mov        -9(%ebp), %bl 
        mov        8(%ebp), %edx 
        mov        %bl, (%eax,%edx,1) 
        popl       %edx 
        popl       %ebx 
endif__hla_3475:
xparseBytes__hla_3472__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
End_parseBytes__hla_3472_3484:
  .size parseBytes__hla_3472,End_parseBytes__hla_3472_3484-parseBytes__hla_3472



        .type      parseWords__hla_3487,@function

parseWords__hla_3487:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $12, %esp 
        pushl      %edx 
        call       skipSpaces2__hla_3390
        call       EvalExpr__hla_3462
        cmpl       $65536, %eax 
        jnae       false__hla_3490
        pushl      $str__hla_3491 
        call       STDOUT_PUTS
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_3490:
        mov        %ax, -10(%ebp) 
        call       skipSpaces2__hla_3390
        cmpb       $44, (%ebx) 
        jne        false__hla_3492
        addl       $1, %ebx 
        mov        8(%ebp), %eax 
        addl       $2, %eax 
        pushl      %eax 
        call       parseWords__hla_3487
        jmp        endif__hla_3492
false__hla_3492:
        mov        8(%ebp), %ecx 
        addl       $19, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC1
        subl       $17, %ecx 
        mov        tknListTail__hla_3360, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %ecx, 13(%eax) 
        mov        %eax, tknListTail__hla_3360 
        addl       $17, %eax 
        pushl      %ebx 
        mov        -10(%ebp), %bx 
        mov        8(%ebp), %edx 
        mov        %bx, (%eax,%edx,1) 
        popl       %ebx 
endif__hla_3492:
        popl       %edx 
xparseWords__hla_3487__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
End_parseWords__hla_3487_3495:
  .size parseWords__hla_3487,End_parseWords__hla_3487_3495-parseWords__hla_3487



        .type      parseDwords__hla_3498,@function

parseDwords__hla_3498:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $16, %esp 
        pushl      %edx 
        call       skipSpaces2__hla_3390
        call       RelExpr__hla_3428
        mov        %eax, -12(%ebp) 
        cmpl       $0, %edx 
        jne        false__hla_3501
        pushl      $21 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3360, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        movl       $4, 13(%eax) 
        mov        %eax, tknListTail__hla_3360 
        mov        -12(%ebp), %edx 
        mov        %edx, 17(%eax) 
        clc
        jmp        endif__hla_3501
false__hla_3501:
        pushl      $21 
        call       MEM_ALLOC1
        pushl      %edx 
        mov        tknListTail__hla_3360, %edx 
        movb       $5, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %eax, tknListTail__hla_3360 
        popl       %edx 
        mov        %edx, 13(%eax) 
        mov        -12(%ebp), %edx 
        mov        %edx, 17(%eax) 
        stc
endif__hla_3501:
        popl       %edx 
xparseDwords__hla_3498__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
End_parseDwords__hla_3498_3504:
  .size parseDwords__hla_3498,End_parseDwords__hla_3498_3504-parseDwords__hla_3498



        .type      EvalQWord__hla_3510,@function

EvalQWord__hla_3510:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %esi 
        mov        (%ebx), %al 
        cmpb       $36, %al 
        jne        false__hla_3513
        addl       $1, %ebx 
        lea        (%ebx), %esi 
        call       CONV_ATOH64
        movl       %esi, %ebx 
        jmp        endif__hla_3513
false__hla_3513:
        lea        (%ebx), %esi 
        call       CONV_ATOU64
        movl       %esi, %ebx 
endif__hla_3513:
        popl       %esi 
xEvalQWord__hla_3510__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
End_EvalQWord__hla_3510_3516:
  .size EvalQWord__hla_3510,End_EvalQWord__hla_3510_3516-EvalQWord__hla_3510



        .type      parseQWords__hla_3507,@function

parseQWords__hla_3507:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $16, %esp 
        pushl      %edx 
        call       skipSpaces2__hla_3390
        call       EvalQWord__hla_3510
        mov        %eax, -16(%ebp) 
        mov        %edx, -12(%ebp) 
        call       skipSpaces2__hla_3390
        cmpb       $44, (%ebx) 
        jne        false__hla_3519
        addl       $1, %ebx 
        mov        8(%ebp), %eax 
        addl       $8, %eax 
        pushl      %eax 
        call       parseQWords__hla_3507
        jmp        endif__hla_3519
false__hla_3519:
        mov        8(%ebp), %ecx 
        addl       $25, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC1
        subl       $17, %ecx 
        mov        tknListTail__hla_3360, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %ecx, 13(%eax) 
        mov        %eax, tknListTail__hla_3360 
        addl       $17, %eax 
        pushl      %ebx 
        mov        -16(%ebp), %ebx 
        mov        8(%ebp), %edx 
        mov        %ebx, (%eax,%edx,1) 
        mov        -12(%ebp), %ebx 
        mov        %ebx, 4(%eax,%edx,1) 
        popl       %ebx 
endif__hla_3519:
        popl       %edx 
xparseQWords__hla_3507__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
End_parseQWords__hla_3507_3522:
  .size parseQWords__hla_3507,End_parseQWords__hla_3507_3522-parseQWords__hla_3507



        .type      EvalTByte__hla_3528,@function

EvalTByte__hla_3528:
        pushl      %esi 
        mov        (%ebx), %al 
        cmpb       $36, %al 
        jne        false__hla_3531
        addl       $1, %ebx 
        lea        (%ebx), %esi 
        pushl      %ebp 
        addl       $-24, (%esp) 
        call       CONV_ATOH80
        movl       %esi, %ebx 
        jmp        endif__hla_3531
false__hla_3531:
        lea        (%ebx), %esi 
        pushl      %ebp 
        addl       $-24, (%esp) 
        call       CONV_ATOU128
        movl       %esi, %ebx 
        movzwl     -14(%ebp), %eax 
        orl        -12(%ebp), %eax 
        testl      %eax, %eax 
        je         false__hla_3532
        pushl      $str__hla_3533 
        call       STDOUT_PUTS
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_3532:
endif__hla_3531:
        popl       %esi 
        ret
End_EvalTByte__hla_3528_3536:
  .size EvalTByte__hla_3528,End_EvalTByte__hla_3528_3536-EvalTByte__hla_3528



        .type      parseTBytes__hla_3525,@function

parseTBytes__hla_3525:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $24, %esp 
        pushl      %edx 
        call       skipSpaces2__hla_3390
        call       EvalTByte__hla_3528
        call       skipSpaces2__hla_3390
        cmpb       $44, (%ebx) 
        jne        false__hla_3539
        addl       $1, %ebx 
        mov        8(%ebp), %eax 
        addl       $10, %eax 
        pushl      %eax 
        call       parseTBytes__hla_3525
        jmp        endif__hla_3539
false__hla_3539:
        mov        8(%ebp), %ecx 
        addl       $27, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC1
        subl       $17, %ecx 
        mov        tknListTail__hla_3360, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %ecx, 13(%eax) 
        mov        %eax, tknListTail__hla_3360 
        addl       $17, %eax 
        pushl      %ebx 
        mov        -24(%ebp), %ebx 
        mov        8(%ebp), %edx 
        mov        %ebx, (%eax,%edx,1) 
        mov        -20(%ebp), %ebx 
        mov        %ebx, 4(%eax,%edx,1) 
        mov        -16(%ebp), %bx 
        mov        %bx, 8(%eax,%edx,1) 
        popl       %ebx 
endif__hla_3539:
        popl       %edx 
xparseTBytes__hla_3525__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
End_parseTBytes__hla_3525_3542:
  .size parseTBytes__hla_3525,End_parseTBytes__hla_3525_3542-parseTBytes__hla_3525



        .type      EvalLWord__hla_3548,@function

EvalLWord__hla_3548:
        pushl      %esi 
        mov        (%ebx), %al 
        cmpb       $36, %al 
        jne        false__hla_3551
        addl       $1, %ebx 
        lea        (%ebx), %esi 
        pushl      %ebp 
        addl       $-24, (%esp) 
        call       CONV_ATOH128
        movl       %esi, %ebx 
        jmp        endif__hla_3551
false__hla_3551:
        lea        (%ebx), %esi 
        pushl      %ebp 
        addl       $-24, (%esp) 
        call       CONV_ATOU128
        movl       %esi, %ebx 
endif__hla_3551:
        popl       %esi 
        ret
End_EvalLWord__hla_3548_3554:
  .size EvalLWord__hla_3548,End_EvalLWord__hla_3548_3554-EvalLWord__hla_3548



        .type      parseLWords__hla_3545,@function

parseLWords__hla_3545:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $24, %esp 
        pushl      %edx 
        call       skipSpaces2__hla_3390
        call       EvalLWord__hla_3548
        call       skipSpaces2__hla_3390
        cmpb       $44, (%ebx) 
        jne        false__hla_3557
        addl       $1, %ebx 
        mov        8(%ebp), %eax 
        addl       $16, %eax 
        pushl      %eax 
        call       parseTBytes__hla_3525
        jmp        endif__hla_3557
false__hla_3557:
        mov        8(%ebp), %ecx 
        addl       $33, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC1
        subl       $17, %ecx 
        mov        tknListTail__hla_3360, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %ecx, 13(%eax) 
        mov        %eax, tknListTail__hla_3360 
        addl       $17, %eax 
        pushl      %ebx 
        mov        -24(%ebp), %ebx 
        mov        8(%ebp), %edx 
        mov        %ebx, (%eax,%edx,1) 
        mov        -20(%ebp), %ebx 
        mov        %ebx, 4(%eax,%edx,1) 
        mov        -16(%ebp), %ebx 
        mov        %ebx, 8(%eax,%edx,1) 
        mov        -12(%ebp), %ebx 
        mov        %ebx, 12(%eax,%edx,1) 
        popl       %ebx 
endif__hla_3557:
        popl       %edx 
xparseLWords__hla_3545__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
End_parseLWords__hla_3545_3560:
  .size parseLWords__hla_3545,End_parseLWords__hla_3545_3560-parseLWords__hla_3545



        .type      coalesce__hla_3563,@function

coalesce__hla_3563:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $32, %esp 
        mov        %eax, -16(%ebp) 
        mov        %ecx, -20(%ebp) 
        mov        %edx, -24(%ebp) 
        mov        %esi, -28(%ebp) 
        mov        %edi, -32(%ebp) 
        mov        8(%ebp), %edx 
        mov        (%edx), %esi 
        mov        %esi, -8(%ebp) 
        mov        (%esi), %eax 
        mov        %eax, -4(%ebp) 
        mov        13(%edx), %ecx 
        addl       13(%esi), %ecx 
        mov        %ecx, -12(%ebp) 
        addl       $17, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC1
        mov        13(%esi), %ecx 
        addl       $17, %ecx 
        movl       %eax, %edi 
        cld
        rep movsb
        mov        -12(%ebp), %ecx 
        mov        %ecx, 13(%eax) 
        mov        8(%ebp), %esi 
        mov        13(%esi), %ecx 
        addl       $17, %esi 
        cld
        rep movsb
        mov        -4(%ebp), %edx 
        mov        %eax, 4(%edx) 
        mov        %edx, (%eax) 
        movl       $0, 4(%eax) 
        mov        %eax, tknListTail__hla_3360 
        pushl      8(%ebp) 
        call       MEM_FREE
        pushl      -8(%ebp) 
        call       MEM_FREE
        mov        -16(%ebp), %eax 
        mov        -20(%ebp), %ecx 
        mov        -24(%ebp), %edx 
        mov        -28(%ebp), %esi 
        mov        -32(%ebp), %edi 
xcoalesce__hla_3563__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
End_coalesce__hla_3563_3568:
  .size coalesce__hla_3563,End_coalesce__hla_3563_3568-coalesce__hla_3563



        .type      initStmt__hla_3571,@function

initStmt__hla_3571:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ecx 
        pushl      8(%ebp) 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3360, %ecx 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        mov        %eax, 4(%ecx) 
        mov        %eax, tknListTail__hla_3360 
        popl       %ecx 
xinitStmt__hla_3571__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
End_initStmt__hla_3571_3576:
  .size initStmt__hla_3571,End_initStmt__hla_3571_3576-initStmt__hla_3571



        .type      parseSourceFileList__hla_3579,@function

parseSourceFileList__hla_3579:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %edx 
        call       skipSpaces2__hla_3390
        cmpb       $59, (%ebx) 
        jne        false__hla_3583
        pushl      %ecx 
        pushl      %esi 
        pushl      %edi 
        addl       $1, %ebx 
        call       skipSpaces2__hla_3390
        movl       %ebx, %ecx 
        subl       $1, %ebx 
false__hla_3584:
repeat__hla_3584:
        addl       $1, %ebx 
        movzbl     (%ebx), %eax 
        btl        %eax, filenameDelims__hla_3580 
continue__hla_3584:
        jnc        repeat__hla_3584
exitloop__hla_3584:

        movl       %ebx, %eax 
        subl       %ecx, %eax 
        cmpl       $512, %eax 
        jna        false__hla_3585
        pushl      $str__hla_3586 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3359 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_3585:
        pushl      $12 
        call       MEM_ALLOC1
        mov        8(%ebp), %edx 
        mov        %eax, (%edx) 
        movl       %eax, %edx 
        pushl      %ecx 
        pushl      %ebx 
        call       STR_A_BUFTOSTR2
        addl       $1, %ebx 
        mov        %eax, 4(%edx) 
        cmpb       $44, (%ebx) 
        jne        false__hla_3587
        addl       $1, %ebx 
false__hla_3587:
        call       skipSpaces2__hla_3390
        movl       %ebx, %esi 
        call       CONV_ATOU32
        movl       %esi, %ebx 
        mov        %eax, 8(%edx) 
        movl       $0, (%edx) 
        lea        (%edx), %eax 
        popl       %edi 
        popl       %esi 
        popl       %ecx 
        pushl      %eax 
        call       parseSourceFileList__hla_3579
        jmp        endif__hla_3583
false__hla_3583:
        mov        8(%ebp), %edx 
        movl       $0, (%edx) 
endif__hla_3583:
        popl       %edx 
xparseSourceFileList__hla_3579__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
End_parseSourceFileList__hla_3579_3590:
  .size parseSourceFileList__hla_3579,End_parseSourceFileList__hla_3579_3590-parseSourceFileList__hla_3579



        .type      getDisp__hla_3593,@function

getDisp__hla_3593:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %eax 
        call       skipSpaces__hla_3380
        call       RelExpr__hla_3428
        popl       %ecx 
        mov        %eax, 21(%ecx) 
        mov        %edx, 17(%ecx) 
        movl       $0, 13(%ecx) 
        lea        25(%ecx), %eax 
        pushl      %eax 
        call       parseSourceFileList__hla_3579
        call       skipToEoln__hla_3369
xgetDisp__hla_3593__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
End_getDisp__hla_3593_3598:
  .size getDisp__hla_3593,End_getDisp__hla_3593_3598-getDisp__hla_3593



        .type      emitDummy__hla_3601,@function

emitDummy__hla_3601:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %eax 
        pushl      %ecx 
        pushl      $13 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3360, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $21, 8(%eax) 
        mov        %eax, tknListTail__hla_3360 
        popl       %ecx 
        popl       %eax 
xemitDummy__hla_3601__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
End_emitDummy__hla_3601_3606:
  .size emitDummy__hla_3601,End_emitDummy__hla_3601_3606-emitDummy__hla_3601



        .type      lexer,@function

lexer:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $5144, %esp 
        movl       $0, -12(%ebp) 
        movl       $0, -4(%ebp) 
        pushl      %ebp 
        addl       $-1036, (%esp) 
        pushl      $1024 
        call       STR_INIT
        mov        %eax, -8(%ebp) 
        mov        20(%ebp), %eax 
        mov        %eax, end_source__hla_3365 
        pushl      $13 
        call       MEM_ALLOC1
        movl       $0, 4(%eax) 
        movl       $0, (%eax) 
        movb       $0, 8(%eax) 
        mov        %eax, -5136(%ebp) 
        mov        %eax, codeListTail__hla_3362 
        mov        %eax, tknListTail__hla_3360 
        movl       $codeListTail__hla_3362, lastTailPtr__hla_3361 
        movb       $1, currentSection 
        pushl      $13 
        call       MEM_ALLOC1
        movl       $0, 4(%eax) 
        movl       $0, (%eax) 
        movb       $0, 8(%eax) 
        mov        %eax, -5140(%ebp) 
        mov        %eax, dataListTail__hla_3363 
        pushl      $13 
        call       MEM_ALLOC1
        movl       $0, 4(%eax) 
        movl       $0, (%eax) 
        movb       $0, 8(%eax) 
        mov        %eax, -5144(%ebp) 
        mov        %eax, bssListTail__hla_3364 
        mov        24(%ebp), %ebx 
forever__hla_3610:
continue__hla_3609:
        mov        %ebx, start_stmt__hla_3366 
        decl       %ebx 

skipSpcs__hla_3611:
        incl       %ebx 
        cmpl       end_source__hla_3365, %ebx 
        jae        exitloop__hla_3609
        mov        (%ebx), %al 
        cmpb       $32, %al 
        je         skipSpcs__hla_3611
        cmpb       $9, %al 
        je         skipSpcs__hla_3611
        cmpb       $13, %al 
        je         skipSpcs__hla_3611
        cmpb       $10, %al 
        jne        false__hla_3613
        incl       %ebx 
        incl       lineNumber__hla_3359 
        jmp        continue__hla_3609
false__hla_3613:
        cmpb       $59, %al 
        jne        false__hla_3614
        call       skipToEoln__hla_3369
        jmp        continue__hla_3609
false__hla_3614:
        cmpb       $46, %al 
        jne        false__hla_3615
        addl       $1, %ebx 
        movzbl     (%ebx), %eax 
        cmpl       $97, %eax 
        jl         default__hla_3616
        cmpl       $122, %eax 
        jg         default__hla_3616
        jmp *      jmpTbl__hla_3616-388(,%eax,4) 
case__hla_3617:
        pushl      $17 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3360, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $1, 8(%eax) 
        mov        %eax, tknListTail__hla_3360 
        addl       $1, %ebx 
        call       EvalExpr__hla_3462
        mov        tknListTail__hla_3360, %ecx 
        mov        %eax, 13(%ecx) 
        call       skipToEoln__hla_3369
        jmp        endswitch__hla_3616
case__hla_3618:
        addl       $1, %ebx 
        pushl      $0 
        call       parseBytes__hla_3472
        subl       $17, %eax 
        mov        (%eax), %ecx 
        cmpl       $0, %ecx 
        jne        _0e23_skipAssertion___hla_3623
        pushl      _0e24_msg___hla_3621 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0e23_skipAssertion___hla_3623:
        cmpb       $2, 8(%ecx) 
        jne        false__hla_3624
        pushl      %eax 
        call       coalesce__hla_3563
false__hla_3624:
        call       skipToEoln__hla_3369
        jmp        endswitch__hla_3616
case__hla_3625:
        call       emitDummy__hla_3601
        movb       $1, currentSection 
        mov        lastTailPtr__hla_3361, %eax 
        mov        tknListTail__hla_3360, %ecx 
        mov        %ecx, (%eax) 
        movl       $codeListTail__hla_3362, lastTailPtr__hla_3361 
        mov        codeListTail__hla_3362, %eax 
        mov        %eax, tknListTail__hla_3360 
        pushl      $13 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3360, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $10, 8(%eax) 
        mov        %eax, tknListTail__hla_3360 
        call       skipToEoln__hla_3369
        jmp        endswitch__hla_3616
case__hla_3626:
        addl       $1, %ebx 
        pushl      $0 
        call       parseDwords__hla_3498
        jc         false__hla_3627
        mov        (%eax), %ecx 
        cmpl       $0, %ecx 
        jne        _0e2c_skipAssertion___hla_3632
        pushl      _0e2d_msg___hla_3630 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0e2c_skipAssertion___hla_3632:
        cmpb       $2, 8(%ecx) 
        jne        false__hla_3633
        pushl      %eax 
        call       coalesce__hla_3563
false__hla_3633:
false__hla_3627:
        call       skipToEoln__hla_3369
        jmp        endswitch__hla_3616
case__hla_3634:
        addl       $1, %ebx 
        call       skipSpaces2__hla_3390
        pushl      -8(%ebp) 
        call       grabID__hla_3401
        pushl      -8(%ebp) 
        movl       $equatesTable, %esi 
        mov        (%esi), %edi 
        call *     4(%edi) 
        cmpl       $0, 4(%eax) 
        jne        false__hla_3635
        pushl      %eax 
        call       skipSpaces2__hla_3390
        cmpb       $44, (%ebx) 
        je         false__hla_3636
        pushl      $str__hla_3637 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3359 
        call       STDERR_PUTU32
        pushl      $str__hla_3638 
        call       STDERR_PUTS
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3636:
        addl       $1, %ebx 
        call       skipSpaces2__hla_3390
        pushl      -8(%ebp) 
        call       grabID__hla_3401
        pushl      -8(%ebp) 
        call       STR_A_CPY
        popl       %edx 
        mov        %eax, 4(%edx) 
        jmp        endif__hla_3635
false__hla_3635:
        pushl      $str__hla_3639 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3359 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
endif__hla_3635:
        jmp        endswitch__hla_3616
case__hla_3640:
        addl       $1, %ebx 
        call       skipSpaces2__hla_3390
        pushl      -8(%ebp) 
        call       grabID__hla_3401
        pushl      -8(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        call *     4(%edi) 
        cmpl       $0, 4(%eax) 
        je         false__hla_3641
        movl       %eax, %edx 
        pushl      $17 
        call       MEM_ALLOC1
        movb       $4, 8(%eax) 
        mov        %edx, 13(%eax) 
        mov        tknListTail__hla_3360, %ecx 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        mov        %eax, 4(%ecx) 
        mov        %eax, tknListTail__hla_3360 
        jmp        endif__hla_3641
false__hla_3641:
        pushl      $str__hla_3642 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3359 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
endif__hla_3641:
        call       skipToEoln__hla_3369
        jmp        endswitch__hla_3616
case__hla_3643:
        addl       $1, %ebx 
        pushl      $0 
        call       parseLWords__hla_3545
        subl       $17, %eax 
        mov        (%eax), %ecx 
        cmpl       $0, %ecx 
        jne        _0e3c_skipAssertion___hla_3648
        pushl      _0e3d_msg___hla_3646 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0e3c_skipAssertion___hla_3648:
        cmpb       $2, 8(%ecx) 
        jne        false__hla_3649
        pushl      %eax 
        call       coalesce__hla_3563
false__hla_3649:
        call       skipToEoln__hla_3369
        jmp        endswitch__hla_3616
case__hla_3650:
        addl       $1, %ebx 
        call       skipSpaces2__hla_3390
        pushl      -8(%ebp) 
        call       grabID__hla_3401
        pushl      -8(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        call *     4(%edi) 
        cmpl       $0, 4(%eax) 
        jne        false__hla_3651
        movl       %eax, %ecx 
        pushl      $24 
        call       MEM_ALLOC1
        mov        %eax, 4(%ecx) 
        movb       $2, 21(%eax) 
        movl       $0, 12(%eax) 
        movl       $0, (%eax) 
        mov        8(%ecx), %ecx 
        mov        %ecx, 4(%eax) 
        movb       $0, 20(%eax) 
        jmp        endif__hla_3651
false__hla_3651:
        mov        4(%eax), %ecx 
        testb      $1, 21(%ecx) 
        jz         false__hla_3652
        pushl      $str__hla_3653 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3359 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3652:
        orb        $2, 21(%ecx) 
endif__hla_3651:
        call       skipToEoln__hla_3369
        jmp        endswitch__hla_3616
case__hla_3654:
        addl       $1, %ebx 
        pushl      $0 
        call       parseQWords__hla_3507
        subl       $17, %eax 
        mov        (%eax), %ecx 
        cmpl       $0, %ecx 
        jne        _0e47_skipAssertion___hla_3659
        pushl      _0e48_msg___hla_3657 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0e47_skipAssertion___hla_3659:
        cmpb       $2, 8(%ecx) 
        jne        false__hla_3660
        pushl      %eax 
        call       coalesce__hla_3563
false__hla_3660:
        call       skipToEoln__hla_3369
        jmp        endswitch__hla_3616
case__hla_3661:
        pushl      $17 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3360, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $6, 8(%eax) 
        mov        %eax, tknListTail__hla_3360 
        addl       $1, %ebx 
        call       EvalExpr__hla_3462
        mov        tknListTail__hla_3360, %ecx 
        mov        %eax, 13(%ecx) 
        call       skipToEoln__hla_3369
        jmp        endswitch__hla_3616
case__hla_3662:
        call       emitDummy__hla_3601
        movb       $2, currentSection 
        mov        lastTailPtr__hla_3361, %eax 
        mov        tknListTail__hla_3360, %ecx 
        mov        %ecx, (%eax) 
        movl       $dataListTail__hla_3363, lastTailPtr__hla_3361 
        mov        dataListTail__hla_3363, %eax 
        mov        %eax, tknListTail__hla_3360 
        pushl      $13 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3360, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $12, 8(%eax) 
        mov        %eax, tknListTail__hla_3360 
        call       skipToEoln__hla_3369
        jmp        endswitch__hla_3616
case__hla_3663:
        addl       $1, %ebx 
        pushl      $0 
        call       parseTBytes__hla_3525
        subl       $17, %eax 
        mov        (%eax), %ecx 
        cmpl       $0, %ecx 
        jne        _0e50_skipAssertion___hla_3668
        pushl      _0e51_msg___hla_3666 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0e50_skipAssertion___hla_3668:
        cmpb       $2, 8(%ecx) 
        jne        false__hla_3669
        pushl      %eax 
        call       coalesce__hla_3563
false__hla_3669:
        call       skipToEoln__hla_3369
        jmp        endswitch__hla_3616
case__hla_3670:
        addl       $1, %ebx 
        mov        (%ebx), %al 
        cmpb       $98, %al 
        jne        false__hla_3671
        pushl      $25 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3360, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $7, 8(%eax) 
        mov        %eax, tknListTail__hla_3360 
        addl       $1, %ebx 
        call       EvalExpr__hla_3462
        mov        tknListTail__hla_3360, %ecx 
        mov        %eax, 17(%ecx) 
        call       skipSpaces2__hla_3390
        cmpb       $44, (%ebx) 
        je         false__hla_3672
        pushl      $str__hla_3673 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3359 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3672:
        addl       $1, %ebx 
        call       EvalExpr__hla_3462
        mov        tknListTail__hla_3360, %ecx 
        mov        %eax, 21(%ecx) 
        movl       $1, 13(%ecx) 
        jmp        endif__hla_3671
false__hla_3671:
        cmpb       $119, %al 
        jne        false__hla_3674
        pushl      $25 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3360, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $8, 8(%eax) 
        mov        %eax, tknListTail__hla_3360 
        addl       $1, %ebx 
        call       EvalExpr__hla_3462
        mov        tknListTail__hla_3360, %ecx 
        mov        %eax, 17(%ecx) 
        call       skipSpaces2__hla_3390
        cmpb       $44, (%ebx) 
        je         false__hla_3675
        pushl      $str__hla_3676 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3359 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3675:
        addl       $1, %ebx 
        call       EvalExpr__hla_3462
        mov        tknListTail__hla_3360, %ecx 
        mov        %eax, 21(%ecx) 
        movl       $2, 13(%ecx) 
        jmp        endif__hla_3671
false__hla_3674:
        cmpb       $100, %al 
        jne        false__hla_3677
        pushl      $25 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3360, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $9, 8(%eax) 
        mov        %eax, tknListTail__hla_3360 
        addl       $1, %ebx 
        call       EvalExpr__hla_3462
        mov        tknListTail__hla_3360, %ecx 
        mov        %eax, 17(%ecx) 
        call       skipSpaces2__hla_3390
        cmpb       $44, (%ebx) 
        je         false__hla_3678
        pushl      $str__hla_3679 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3359 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3678:
        addl       $1, %ebx 
        call       EvalExpr__hla_3462
        mov        tknListTail__hla_3360, %ecx 
        mov        %eax, 21(%ecx) 
        movl       $4, 13(%ecx) 
        jmp        endif__hla_3671
false__hla_3677:
        call       unknownStmt__hla_3416
endif__hla_3671:
        call       skipToEoln__hla_3369
        jmp        endswitch__hla_3616
case__hla_3680:
        call       emitDummy__hla_3601
        movb       $3, currentSection 
        mov        lastTailPtr__hla_3361, %eax 
        mov        tknListTail__hla_3360, %ecx 
        mov        %ecx, (%eax) 
        movl       $bssListTail__hla_3364, lastTailPtr__hla_3361 
        mov        bssListTail__hla_3364, %eax 
        mov        %eax, tknListTail__hla_3360 
        pushl      $13 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3360, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $13, 8(%eax) 
        mov        %eax, tknListTail__hla_3360 
        call       skipToEoln__hla_3369
        jmp        endswitch__hla_3616
case__hla_3681:
        addl       $1, %ebx 
        pushl      $0 
        call       parseWords__hla_3487
        subl       $17, %eax 
        mov        (%eax), %ecx 
        cmpl       $0, %ecx 
        jne        _0e62_skipAssertion___hla_3686
        pushl      _0e63_msg___hla_3684 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0e62_skipAssertion___hla_3686:
        cmpb       $2, 8(%ecx) 
        jne        false__hla_3687
        pushl      %eax 
        call       coalesce__hla_3563
false__hla_3687:
        call       skipToEoln__hla_3369
        jmp        endswitch__hla_3616
case__hla_3688:
        addl       $1, %ebx 
        call       skipSpaces2__hla_3390
        pushl      -8(%ebp) 
        call       grabID__hla_3401
        pushl      -8(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        call *     4(%edi) 
        cmpl       $0, 4(%eax) 
        jne        false__hla_3689
        movl       %eax, %ecx 
        pushl      $24 
        call       MEM_ALLOC1
        mov        %eax, 4(%ecx) 
        movb       $1, 21(%eax) 
        movl       $0, 12(%eax) 
        movl       $0, (%eax) 
        mov        8(%ecx), %ecx 
        mov        %ecx, 4(%eax) 
        mov        currentSection, %cl 
        mov        %cl, 20(%eax) 
        jmp        endif__hla_3689
false__hla_3689:
        mov        4(%eax), %ecx 
        testb      $1, 21(%ecx) 
        jz         false__hla_3690
        mov        8(%eax), %eax 
        pushl      $str__hla_3691 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTS
        pushl      $str__hla_3692 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3359 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
        jmp        endif__hla_3690
false__hla_3690:
        testb      $8, 21(%ecx) 
        jz         false__hla_3693
        orb        $2, 21(%ecx) 
        jmp        endif__hla_3693
false__hla_3693:
        orb        $1, 21(%ecx) 
endif__hla_3693:
endif__hla_3690:
        movl       %ecx, %eax 
        mov        currentSection, %cl 
        mov        %cl, 20(%eax) 
endif__hla_3689:
        call       skipToEoln__hla_3369
        jmp        endswitch__hla_3616
case__hla_3694:
        call       skipToEoln__hla_3369
        jmp        endswitch__hla_3616
default__hla_3616:
        call       unknownStmt__hla_3416
endswitch__hla_3616:
        jmp        endif__hla_3615
false__hla_3615:
        cmpb       $58, %al 
        jne        false__hla_3695
        addl       $1, %ebx 
        call       skipSpaces2__hla_3390
        pushl      -8(%ebp) 
        call       grabID__hla_3401
        pushl      $17 
        call       MEM_ALLOC1
        movl       %eax, %edx 
        pushl      -8(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        call *     4(%edi) 
        cmpl       $0, 4(%eax) 
        jne        false__hla_3696
        movl       %eax, %ecx 
        pushl      $24 
        call       MEM_ALLOC1
        mov        %eax, 4(%ecx) 
        movb       $8, 21(%eax) 
        movl       $0, 12(%eax) 
        movl       $0, (%eax) 
        mov        8(%ecx), %edx 
        mov        %edx, 4(%eax) 
        mov        currentSection, %dl 
        mov        %dl, 20(%eax) 
        movb       $0, 22(%eax) 
        movl       $0, 16(%eax) 
        movl       %ecx, %eax 
        jmp        endif__hla_3696
false__hla_3696:
        mov        4(%eax), %ecx 
        testb      $8, 21(%ecx) 
        jz         false__hla_3697
        pushl      $str__hla_3698 
        call       STDERR_PUTS
        pushl      8(%eax) 
        call       STDERR_PUTS
        pushl      $str__hla_3699 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3359 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3697:
        testb      $1, 21(%ecx) 
        jz         false__hla_3700
        andb       $254, 21(%ecx) 
        orb        $2, 21(%ecx) 
false__hla_3700:
        orb        $8, 21(%ecx) 
        mov        currentSection, %dl 
        mov        %dl, 20(%ecx) 
        movb       $0, 22(%ecx) 
        movl       $0, 16(%ecx) 
endif__hla_3696:
        movl       %eax, %edx 
        pushl      $17 
        call       MEM_ALLOC1
        movb       $3, 8(%eax) 
        mov        %edx, 13(%eax) 
        mov        tknListTail__hla_3360, %ecx 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        mov        %eax, 4(%ecx) 
        mov        %eax, tknListTail__hla_3360 
        call       skipToEoln__hla_3369
        jmp        endif__hla_3615
false__hla_3695:
        lea        10(%ebx), %ecx 
        cmpl       end_source__hla_3365, %ecx 
        jna        false__hla_3701
        call       unknownStmt__hla_3416
        jmp        endif__hla_3701
false__hla_3701:
        cmpb       $106, %al 
        jne        false__hla_3702
        mov        1(%ebx), %eax 
        movl       %eax, %edx 
        bswap      %edx 
        cmpb       $32, %ah 
        jne        false__hla_3703
        cmpb       $97, %al 
        je         ja_instr__hla_3704
        cmpb       $98, %al 
        je         jb_instr__hla_3705
        cmpb       $99, %al 
        je         jc_instr__hla_3706
        cmpb       $101, %al 
        je         je_instr__hla_3707
        cmpb       $103, %al 
        je         jg_instr__hla_3708
        cmpb       $108, %al 
        je         jl_instr__hla_3709
        cmpb       $111, %al 
        je         jo_instr__hla_3710
        cmpb       $112, %al 
        je         jp_instr__hla_3711
        cmpb       $115, %al 
        je         js_instr__hla_3712
        cmpb       $122, %al 
        je         jz_instr__hla_3713
        call       unknownStmt__hla_3416
        jmp        Done__hla_3714

jnbe_instr__hla_3715:
        addl       $2, %ebx 

ja_instr__hla_3704:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3571
        movb       $16, 8(%eax) 
        movb       $119, 29(%eax) 
        movw       $34575, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3593
        jmp        Done__hla_3714

jnae_instr__hla_3716:
        addl       $2, %ebx 

jb_instr__hla_3705:

jc_instr__hla_3706:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3571
        movb       $16, 8(%eax) 
        movb       $114, 29(%eax) 
        movw       $33295, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3593
        jmp        Done__hla_3714

je_instr__hla_3707:

jz_instr__hla_3713:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3571
        movb       $16, 8(%eax) 
        movb       $116, 29(%eax) 
        movw       $33807, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3593
        jmp        Done__hla_3714

jnle_instr__hla_3717:
        addl       $2, %ebx 

jg_instr__hla_3708:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3571
        movb       $16, 8(%eax) 
        movb       $127, 29(%eax) 
        movw       $36623, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3593
        jmp        Done__hla_3714

jnge_instr__hla_3718:
        addl       $2, %ebx 

jl_instr__hla_3709:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3571
        movb       $16, 8(%eax) 
        movb       $124, 29(%eax) 
        movw       $35855, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3593
        jmp        Done__hla_3714

jo_instr__hla_3710:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3571
        movb       $16, 8(%eax) 
        movb       $112, 29(%eax) 
        movw       $32783, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3593
        jmp        Done__hla_3714

jpe_instr__hla_3719:
        addl       $1, %ebx 

jp_instr__hla_3711:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3571
        movb       $16, 8(%eax) 
        movb       $122, 29(%eax) 
        movw       $35343, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3593
        jmp        Done__hla_3714

js_instr__hla_3712:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3571
        movb       $16, 8(%eax) 
        movb       $120, 29(%eax) 
        movw       $34831, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3593
        jmp        Done__hla_3714
        jmp        endif__hla_3703
false__hla_3703:
        cmpb       $32, %dh 
        jne        false__hla_3720
        cmpw       $28781, %ax 
        je         jmp_instr__hla_3721
        cmpw       $25953, %ax 
        je         jae_instr__hla_3722
        cmpw       $25954, %ax 
        je         jbe_instr__hla_3723
        cmpw       $25959, %ax 
        je         jge_instr__hla_3724
        cmpw       $25964, %ax 
        je         jle_instr__hla_3725
        cmpw       $24942, %ax 
        je         jna_instr__hla_3726
        cmpw       $25198, %ax 
        je         jnb_instr__hla_3727
        cmpw       $25454, %ax 
        je         jnc_instr__hla_3728
        cmpw       $25966, %ax 
        je         jne_instr__hla_3729
        cmpw       $26478, %ax 
        je         jng_instr__hla_3730
        cmpw       $27758, %ax 
        je         jnl_instr__hla_3731
        cmpw       $28526, %ax 
        je         jno_instr__hla_3732
        cmpw       $28782, %ax 
        je         jnp_instr__hla_3733
        cmpw       $29550, %ax 
        je         jns_instr__hla_3734
        cmpw       $31342, %ax 
        je         jnz_instr__hla_3735
        cmpw       $25968, %ax 
        je         jpe_instr__hla_3719
        cmpw       $28528, %ax 
        je         jpo_instr__hla_3736
        call       unknownStmt__hla_3416
        jmp        Done__hla_3714

jmp_instr__hla_3721:
        pushl      $32 
        call       initStmt__hla_3571
        movb       $18, 8(%eax) 
        movb       $235, 29(%eax) 
        movb       $233, 30(%eax) 
        movb       $1, 31(%eax) 
        addl       $3, %ebx 
        call       getDisp__hla_3593
        jmp        Done__hla_3714

jnc_instr__hla_3728:

jnb_instr__hla_3727:

jae_instr__hla_3722:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3571
        movb       $16, 8(%eax) 
        movb       $115, 29(%eax) 
        movw       $33551, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3593
        jmp        Done__hla_3714

jna_instr__hla_3726:

jbe_instr__hla_3723:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3571
        movb       $16, 8(%eax) 
        movb       $118, 29(%eax) 
        movw       $34319, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3593
        jmp        Done__hla_3714

jnl_instr__hla_3731:

jge_instr__hla_3724:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3571
        movb       $16, 8(%eax) 
        movb       $125, 29(%eax) 
        movw       $36111, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3593
        jmp        Done__hla_3714

jng_instr__hla_3730:

jle_instr__hla_3725:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3571
        movb       $16, 8(%eax) 
        movb       $126, 29(%eax) 
        movw       $36367, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3593
        jmp        Done__hla_3714

jne_instr__hla_3729:

jnz_instr__hla_3735:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3571
        movb       $16, 8(%eax) 
        movb       $117, 29(%eax) 
        movw       $34063, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3593
        jmp        Done__hla_3714

jno_instr__hla_3732:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3571
        movb       $16, 8(%eax) 
        movb       $113, 29(%eax) 
        movw       $33039, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3593
        jmp        Done__hla_3714

jnp_instr__hla_3733:

jpo_instr__hla_3736:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3571
        movb       $16, 8(%eax) 
        movb       $123, 29(%eax) 
        movw       $35599, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3593
        jmp        Done__hla_3714

jns_instr__hla_3734:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3571
        movb       $16, 8(%eax) 
        movb       $121, 29(%eax) 
        movw       $35087, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3593
        jmp        Done__hla_3714
        jmp        endif__hla_3703
false__hla_3720:
        cmpb       $32, %dl 
        jne        false__hla_3737
        cmpl       $543514990, %eax 
        je         jnae_instr__hla_3716
        cmpl       $543515246, %eax 
        je         jnbe_instr__hla_3715
        cmpl       $543516526, %eax 
        je         jnge_instr__hla_3718
        cmpl       $543517806, %eax 
        je         jnle_instr__hla_3717
        cmpl       $544897123, %eax 
        je         jcxz_instr__hla_3738
        call       unknownStmt__hla_3416
        jmp        Done__hla_3714

jcxz_instr__hla_3738:
        addl       $4, %ebx 
        pushl      $31 
        call       initStmt__hla_3571
        movb       $15, 8(%eax) 
        movw       $58215, 29(%eax) 
        call       getDisp__hla_3593
        jmp        Done__hla_3714
        jmp        endif__hla_3703
false__hla_3737:
        cmpl       $2054710117, %eax 
        jne        false__hla_3739
        cmpb       $32, 5(%ebx) 
        jne        false__hla_3739
        addl       $5, %ebx 
        pushl      $30 
        call       initStmt__hla_3571
        movb       $14, 8(%eax) 
        movb       $227, 29(%eax) 
        call       getDisp__hla_3593
        jmp        Done__hla_3714
        jmp        endif__hla_3703
false__hla_3739:
        call       unknownStmt__hla_3416
endif__hla_3703:
        jmp        endif__hla_3701
false__hla_3702:
        cmpb       $108, %al 
        jne        false__hla_3741
        lea        7(%ebx), %ecx 
        cmpl       end_source__hla_3365, %ecx 
        jnb        false__hla_3741
        cmpb       $111, 1(%ebx) 
        jne        false__hla_3741
        cmpb       $111, 2(%ebx) 
        jne        false__hla_3741
        cmpb       $112, 3(%ebx) 
        jne        false__hla_3741
        mov        4(%ebx), %al 
        cmpb       $32, %al 
        je         L3747__hla_
        cmpb       $101, %al 
        jne        L3750__hla_
        cmpb       $32, 5(%ebx) 
        je         L3747__hla_
L3750__hla_:
        cmpb       $122, %al 
        jne        L3751__hla_
        cmpb       $32, 5(%ebx) 
        je         L3747__hla_
L3751__hla_:
        mov        5(%ebx), %ah 
        cmpb       $110, %al 
        jne        false__hla_3741
        cmpb       $101, %ah 
        jne        L3754__hla_
        cmpb       $32, 6(%ebx) 
        je         L3753__hla_
L3754__hla_:
        cmpb       $122, %ah 
        jne        false__hla_3741
        cmpb       $32, 6(%ebx) 
        jne        false__hla_3741
L3753__hla_:
L3747__hla_:
        cmpb       $32, %al 
        jne        false__hla_3756
        addl       $4, %ebx 
        pushl      $30 
        call       initStmt__hla_3571
        movb       $14, 8(%eax) 
        movb       $226, 29(%eax) 
        call       getDisp__hla_3593
        jmp        Done__hla_3714
        jmp        endif__hla_3756
false__hla_3756:
        cmpb       $101, %al 
        je         L3758__hla_
        cmpb       $122, %al 
        jne        false__hla_3757
L3758__hla_:
        addl       $5, %ebx 
        pushl      $30 
        call       initStmt__hla_3571
        movb       $14, 8(%eax) 
        movb       $225, 29(%eax) 
        call       getDisp__hla_3593
        jmp        Done__hla_3714
        jmp        endif__hla_3756
false__hla_3757:
        cmpb       $110, %al 
        jne        false__hla_3759
        cmpb       $101, %ah 
        je         L3761__hla_
        cmpb       $122, %ah 
        jne        false__hla_3759
L3761__hla_:
        addl       $6, %ebx 
        pushl      $30 
        call       initStmt__hla_3571
        movb       $14, 8(%eax) 
        movb       $224, 29(%eax) 
        call       getDisp__hla_3593
        jmp        Done__hla_3714
        jmp        endif__hla_3756
false__hla_3759:
        call       skipToEoln__hla_3369
endif__hla_3756:
        jmp        endif__hla_3701
false__hla_3741:
        cmpb       $99, %al 
        jne        false__hla_3762
        addl       $5, %ebx 
        cmpl       end_source__hla_3365, %ebx 
        jnb        false__hla_3762
        cmpb       $97, -4(%ebx) 
        jne        false__hla_3762
        cmpb       $108, -3(%ebx) 
        jne        false__hla_3762
        cmpb       $108, -2(%ebx) 
        jne        false__hla_3762
        cmpb       $32, -1(%ebx) 
        jne        false__hla_3762
        pushl      $30 
        call       initStmt__hla_3571
        movb       $17, 8(%eax) 
        movb       $232, 29(%eax) 
        call       getDisp__hla_3593
        jmp        endif__hla_3701
false__hla_3762:
        call       unknownStmt__hla_3416
endif__hla_3701:

Done__hla_3714:
endif__hla_3615:
        jmp        forever__hla_3610
exitloop__hla_3609:

        call       emitDummy__hla_3601
xlexer__hla_:
        pushl      %edi 
        pushl      %ecx 
        mov        16(%ebp), %edi 
        mov        -5136(%ebp), %ecx 
        mov        %ecx, (%edi) 
        mov        12(%ebp), %edi 
        mov        -5140(%ebp), %ecx 
        mov        %ecx, (%edi) 
        mov        8(%ebp), %edi 
        mov        -5144(%ebp), %ecx 
        mov        %ecx, (%edi) 
        popl       %ecx 
        popl       %edi 
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $20
End_lexer_3770:
  .size lexer,End_lexer_3770-lexer



        .type      addCOFFsym__hla_3773,@function

addCOFFsym__hla_3773:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        cld
        pushl      numCOFFsyms__hla_3310 
        imul       $18, numCOFFsyms__hla_3310, %ebx 
        movzbl     12(%ebp), %eax 
        addl       $1, %eax 
        imul       $18, %eax, %eax 
        addl       %ebx, %eax 
        cmpl       coffSymSize__hla_3311, %eax 
        jna        false__hla_3776
        shll       $1, coffSymSize__hla_3311 
        pushl      COFFsyms__hla_3309 
        pushl      coffSymSize__hla_3311 
        call       MEM_REALLOC1
        mov        %eax, COFFsyms__hla_3309 
false__hla_3776:
        addl       COFFsyms__hla_3309, %ebx 
        mov        32(%ebp), %esi 
        pushl      %esi 
        call       STR_LENGTH
        movl       %eax, %ecx 
        cmpl       $8, %eax 
        jnbe       false__hla_3777
        movl       $0, (%ebx) 
        movl       $0, 4(%ebx) 
        lea        (%ebx), %edi 
        cld
        rep movsb
        jmp        endif__hla_3777
false__hla_3777:
        mov        strTblOffset__hla_3319, %edx 
        lea        1(%edx,%ecx,1), %eax 
        mov        %eax, strTblOffset__hla_3319 
        cmpl       strTblSize__hla_3320, %eax 
        jna        false__hla_3778
        pushl      %eax 
        shll       $1, strTblSize__hla_3320 
        pushl      stringTable__hla_3318 
        pushl      strTblSize__hla_3320 
        call       MEM_REALLOC1
        mov        %eax, stringTable__hla_3318 
        popl       %eax 
false__hla_3778:
        movl       %edx, %edi 
        addl       stringTable__hla_3318, %edi 
        cld
        rep movsb
        movb       $0, (%edi) 
        movl       $0, (%ebx) 
        mov        %edx, 4(%ebx) 
endif__hla_3777:
        mov        28(%ebp), %eax 
        mov        %eax, 8(%ebx) 
        mov        24(%ebp), %ax 
        mov        %ax, 12(%ebx) 
        mov        20(%ebp), %ax 
        mov        %ax, 14(%ebx) 
        mov        16(%ebp), %al 
        mov        %al, 16(%ebx) 
        movzbl     12(%ebp), %eax 
        mov        %al, 17(%ebx) 
        testb      %al, %al 
        je         false__hla_3779
        mov        8(%ebp), %esi 
        imul       $18, numCOFFsyms__hla_3310, %edi 
        addl       $18, %edi 
        addl       COFFsyms__hla_3309, %edi 
        imul       $18, %eax, %ecx 
        cld
        rep movsb
false__hla_3779:
        movzbl     12(%ebp), %eax 
        addl       $1, %eax 
        addl       %eax, numCOFFsyms__hla_3310 
        popl       %eax 
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
xaddCOFFsym__hla_3773__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $28
End_addCOFFsym__hla_3773_3782:
  .size addCOFFsym__hla_3773,End_addCOFFsym__hla_3773_3782-addCOFFsym__hla_3773



        .type      addELFsym__hla_3785,@function

addELFsym__hla_3785:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        cld
        imul       $16, numELFsyms__hla_3313, %ebx 
        lea        16(%ebx), %eax 
        cmpl       elfSymSize__hla_3314, %eax 
        jna        false__hla_3788
        shll       $1, elfSymSize__hla_3314 
        pushl      ELFsyms__hla_3312 
        pushl      elfSymSize__hla_3314 
        call       MEM_REALLOC1
        mov        %eax, ELFsyms__hla_3312 
false__hla_3788:
        addl       ELFsyms__hla_3312, %ebx 
        xorl       %edx, %edx 
        mov        28(%ebp), %esi 
        cmpl       $0, %esi 
        je         false__hla_3789
        pushl      %esi 
        call       STR_LENGTH
        movl       %eax, %ecx 
        mov        strTblOffset__hla_3319, %edx 
        lea        1(%edx,%ecx,1), %eax 
        mov        %eax, strTblOffset__hla_3319 
        cmpl       strTblSize__hla_3320, %eax 
        jna        false__hla_3790
        shll       $1, strTblSize__hla_3320 
        pushl      stringTable__hla_3318 
        pushl      strTblSize__hla_3320 
        call       MEM_REALLOC1
        mov        %eax, stringTable__hla_3318 
false__hla_3790:
        movl       %edx, %edi 
        addl       stringTable__hla_3318, %edi 
        cld
        rep movsb
        movb       $0, (%edi) 
false__hla_3789:
        mov        %edx, (%ebx) 
        mov        24(%ebp), %eax 
        mov        %eax, 4(%ebx) 
        mov        20(%ebp), %eax 
        mov        %eax, 8(%ebx) 
        mov        16(%ebp), %al 
        mov        %al, 12(%ebx) 
        mov        8(%ebp), %al 
        andb       $3, %al 
        mov        %al, 13(%ebx) 
        mov        12(%ebp), %ax 
        mov        %ax, 14(%ebx) 
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
xaddELFsym__hla_3785__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $24
End_addELFsym__hla_3785_3793:
  .size addELFsym__hla_3785,End_addELFsym__hla_3785_3793-addELFsym__hla_3785



        .type      addMachoSym__hla_3796,@function

addMachoSym__hla_3796:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %eax 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        imul       $12, numMachoSyms__hla_3317, %ebx 
        lea        12(%ebx), %eax 
        cmpl       MachoSymSize__hla_3316, %eax 
        jna        false__hla_3799
        shll       $1, MachoSymSize__hla_3316 
        pushl      MachoSyms__hla_3315 
        pushl      MachoSymSize__hla_3316 
        call       MEM_REALLOC1
        mov        %eax, MachoSyms__hla_3315 
false__hla_3799:
        addl       MachoSyms__hla_3315, %ebx 
        mov        20(%ebp), %esi 
        cmpl       $0, %esi 
        jne        _0ed8_skipAssertion___hla_3804
        pushl      _0ed9_msg___hla_3802 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0ed8_skipAssertion___hla_3804:
        pushl      %esi 
        call       STR_LENGTH
        movl       %eax, %ecx 
        mov        strTblOffset__hla_3319, %edx 
        lea        1(%edx,%ecx,1), %eax 
        mov        %eax, strTblOffset__hla_3319 
        cmpl       strTblSize__hla_3320, %eax 
        jna        false__hla_3805
        shll       $1, strTblSize__hla_3320 
        pushl      stringTable__hla_3318 
        pushl      strTblSize__hla_3320 
        call       MEM_REALLOC1
        mov        %eax, stringTable__hla_3318 
false__hla_3805:
        movl       %edx, %edi 
        addl       stringTable__hla_3318, %edi 
        cld
        rep movsb
        movb       $0, (%edi) 
        mov        %edx, (%ebx) 
        mov        16(%ebp), %eax 
        mov        %eax, 8(%ebx) 
        mov        12(%ebp), %al 
        mov        %al, 4(%ebx) 
        mov        8(%ebp), %al 
        mov        %al, 5(%ebx) 
        movw       $0, 6(%ebx) 
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
        popl       %eax 
xaddMachoSym__hla_3796__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $16
End_addMachoSym__hla_3796_3808:
  .size addMachoSym__hla_3796,End_addMachoSym__hla_3796_3808-addMachoSym__hla_3796



        .type      buildRaw__hla_3811,@function

buildRaw__hla_3811:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %edi 
        pushl      %esi 
        mov        24(%ebp), %esi 
        cmpb       $0, 8(%ebp) 
        jne        false__hla_3814
        mov        20(%ebp), %eax 
        cmpl       $65535, %eax 
        jnae       false__hla_3815
        mov        %eax, (%esi) 
        addl       $10, %esi 
false__hla_3815:
false__hla_3814:
        mov        32(%ebp), %ebx 
        mov        16(%ebp), %edi 
        jmp        continue__hla_3816
while__hla_3816:
        movzbl     8(%ebx), %eax 
        cmpl       $21, %eax 
        jg         default__hla_3818
        jmp *      jmpTbl__hla_3818(,%eax,4) 
case__hla_3819:
        jmp        endswitch__hla_3818
case__hla_3820:
        mov        9(%ebx), %ecx 
        movl       %ecx, %edx 
        mov        13(%ebx), %eax 
        subl       $1, %eax 
        addl       %eax, %ecx 
        notl       %eax 
        andl       %eax, %ecx 
        subl       %edx, %ecx 
        jz         false__hla_3821
        cmpb       $1, 12(%ebp) 
        jne        false__hla_3822
        jmp        continue__hla_3823
while__hla_3823:
        mov        $2401421, %eax 
        stosl
        mov        $0, %ax 
        stosw
        stosb
        subl       $7, %ecx 
continue__hla_3823:
        cmpl       $7, %ecx 
        jae        while__hla_3823
exitloop__hla_3823:

        cmpl       $6, %ecx 
        jne        false__hla_3825
        mov        $39821, %eax 
        stosl
        mov        $0, %ax 
        stosw
false__hla_3825:
        cmpl       $5, %ecx 
        jne        false__hla_3826
        mov        $2385037, %eax 
        stosl
        mov        $144, %al 
        stosb
false__hla_3826:
        cmpl       $4, %ecx 
        jne        false__hla_3827
        mov        $2385037, %eax 
        stosl
false__hla_3827:
        cmpl       $3, %ecx 
        jne        false__hla_3828
        mov        $18829, %ax 
        stosw
        mov        $0, %al 
        stosb
false__hla_3828:
        cmpl       $2, %ecx 
        jne        false__hla_3829
        mov        $65419, %ax 
        stosw
false__hla_3829:
        cmpl       $1, %ecx 
        jne        false__hla_3830
        mov        $144, %al 
        stosb
false__hla_3830:
        jmp        endif__hla_3822
false__hla_3822:
        xorl       %eax, %eax 
        cld
        rep stosb
endif__hla_3822:
false__hla_3821:
        jmp        endswitch__hla_3818
case__hla_3831:
        cmpb       $3, 12(%ebp) 
        je         false__hla_3832
        pushl      $str__hla_3833 
        call       STDERR_PUTS
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3832:
        jmp        endswitch__hla_3818
case__hla_3834:
        pushl      %esi 
        mov        13(%ebx), %ecx 
        testl      %ecx, %ecx 
        je         false__hla_3835
        lea        17(%ebx), %esi 
        cld
        rep movsb
false__hla_3835:
        popl       %esi 
        jmp        endswitch__hla_3818
case__hla_3836:
        cmpb       $1, 12(%ebp) 
        je         false__hla_3837
        pushl      $str__hla_3838 
        call       STDERR_PUTS
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3837:
        jmp        endswitch__hla_3818
case__hla_3839:
        cmpb       $2, 12(%ebp) 
        je         false__hla_3840
        pushl      $str__hla_3841 
        call       STDERR_PUTS
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3840:
        jmp        endswitch__hla_3818
case__hla_3842:
        mov        17(%ebx), %ecx 
        mov        21(%ebx), %eax 
        cmpl       $2, 13(%ebx) 
        jb         byteDup__hla_3843
        ja         dwordDup__hla_3844
        cld
        rep stosw
        jmp        done__hla_3845

byteDup__hla_3843:
        cld
        rep stosb
        jmp        done__hla_3845

dwordDup__hla_3844:
        cld
        rep stosl

done__hla_3845:
        jmp        endswitch__hla_3818
case__hla_3846:
        mov        29(%ebx), %al 
        stosb
        mov        13(%ebx), %eax 
        stosb
        jmp        endswitch__hla_3818
case__hla_3847:
        mov        29(%ebx), %ax 
        stosw
        mov        13(%ebx), %eax 
        stosb
        jmp        endswitch__hla_3818
case__hla_3848:
        cmpb       $1, 32(%ebx) 
        jne        false__hla_3849
        mov        29(%ebx), %al 
        stosb
        mov        13(%ebx), %eax 
        addl       21(%ebx), %eax 
        stosb
        jmp        endif__hla_3849
false__hla_3849:
        mov        30(%ebx), %ax 
        stosw
        mov        13(%ebx), %eax 
        addl       21(%ebx), %eax 
        stosl
        cmpl       $0, 17(%ebx) 
        je         false__hla_3850
        mov        17(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        20(%eax), %dl 
        testb      $1, 21(%eax) 
        jnz        L3852__hla_
        cmpb       12(%ebp), %dl 
        je         false__hla_3851
L3852__hla_:
        mov        8(%ebp), %dl 
        testb      %dl, %dl 
        jne        false__hla_3853
        mov        8(%eax), %eax 
        mov        %eax, 4(%esi) 
        mov        9(%ebx), %eax 
        addl       $2, %eax 
        mov        %eax, (%esi) 
        movw       $20, 8(%esi) 
        addl       $10, %esi 
        mov        21(%ebx), %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3853
false__hla_3853:
        cmpb       $1, %dl 
        jnae       false__hla_3854
        cmpb       $2, %dl 
        jnbe       false__hla_3854
        mov        9(%ebx), %edx 
        addl       $2, %edx 
        mov        %edx, (%esi) 
        mov        8(%eax), %eax 
        shll       $8, %eax 
        orl        $2, %eax 
        mov        %eax, 4(%esi) 
        addl       $8, %esi 
        mov        21(%ebx), %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3853
false__hla_3854:
        cmpb       $3, %dl 
        jne        false__hla_3856
        mov        9(%ebx), %edx 
        addl       $2, %edx 
        mov        %edx, (%esi) 
        mov        8(%eax), %eax 
        orl        $218103808, %eax 
        mov        %eax, 4(%esi) 
        addl       $8, %esi 
        mov        9(%ebx), %eax 
        addl       $6, %eax 
        negl       %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3853
false__hla_3856:
        pushl      $str__hla_3857 
        call       STDERR_PUTS
endif__hla_3853:
false__hla_3851:
false__hla_3850:
endif__hla_3849:
        jmp        endswitch__hla_3818
case__hla_3858:
        cmpb       $1, 31(%ebx) 
        jne        false__hla_3859
        mov        29(%ebx), %al 
        stosb
        mov        13(%ebx), %eax 
        addl       21(%ebx), %eax 
        stosb
        jmp        endif__hla_3859
false__hla_3859:
        mov        30(%ebx), %al 
        stosb
        mov        13(%ebx), %eax 
        addl       21(%ebx), %eax 
        stosl
        cmpl       $0, 17(%ebx) 
        je         false__hla_3860
        mov        17(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        20(%eax), %dl 
        mov        21(%eax), %dh 
        andb       $3, %dh 
        testb      $1, %dh 
        jnz        L3862__hla_
        cmpb       12(%ebp), %dl 
        jne        L3862__hla_
        testb      %dh, %dh 
        je         false__hla_3861
        cmpb       $1, 8(%ebp) 
        jnae       false__hla_3861
        cmpb       $2, 8(%ebp) 
        jnbe       false__hla_3861
L3862__hla_:
        mov        8(%ebp), %dl 
        testb      %dl, %dl 
        jne        false__hla_3866
        mov        8(%eax), %eax 
        mov        %eax, 4(%esi) 
        mov        9(%ebx), %eax 
        addl       $1, %eax 
        mov        %eax, (%esi) 
        movw       $20, 8(%esi) 
        addl       $10, %esi 
        mov        21(%ebx), %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3866
false__hla_3866:
        cmpb       $1, %dl 
        jnae       false__hla_3867
        cmpb       $2, %dl 
        jnbe       false__hla_3867
        mov        9(%ebx), %edx 
        addl       $1, %edx 
        mov        %edx, (%esi) 
        mov        8(%eax), %edx 
        shll       $8, %edx 
        orl        $2, %edx 
        mov        %edx, 4(%esi) 
        addl       $8, %esi 
        testb      $1, 21(%eax) 
        jz         false__hla_3869
        movl       $-4, -4(%edi) 
false__hla_3869:
        jmp        endif__hla_3866
false__hla_3867:
        cmpb       $3, %dl 
        jne        false__hla_3870
        mov        9(%ebx), %edx 
        addl       $1, %edx 
        mov        %edx, (%esi) 
        mov        8(%eax), %eax 
        orl        $218103808, %eax 
        mov        %eax, 4(%esi) 
        addl       $8, %esi 
        mov        9(%ebx), %eax 
        addl       $5, %eax 
        negl       %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3866
false__hla_3870:
        pushl      $str__hla_3857 
        call       STDERR_PUTS
endif__hla_3866:
false__hla_3861:
false__hla_3860:
endif__hla_3859:
        jmp        endswitch__hla_3818
case__hla_3871:
        mov        29(%ebx), %al 
        stosb
        mov        13(%ebx), %eax 
        addl       21(%ebx), %eax 
        stosl
        cmpl       $0, 17(%ebx) 
        je         false__hla_3872
        mov        17(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        20(%eax), %dl 
        mov        21(%eax), %dh 
        andb       $3, %dh 
        testb      $1, %dh 
        jnz        L3874__hla_
        cmpb       12(%ebp), %dl 
        jne        L3874__hla_
        testb      %dh, %dh 
        je         false__hla_3873
        cmpb       $1, 8(%ebp) 
        jnae       false__hla_3873
        cmpb       $2, 8(%ebp) 
        jnbe       false__hla_3873
L3874__hla_:
        mov        8(%ebp), %dl 
        testb      %dl, %dl 
        jne        false__hla_3878
        mov        8(%eax), %eax 
        mov        %eax, 4(%esi) 
        mov        9(%ebx), %eax 
        addl       $1, %eax 
        mov        %eax, (%esi) 
        movw       $20, 8(%esi) 
        addl       $10, %esi 
        mov        21(%ebx), %eax 
        addl       13(%ebx), %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3878
false__hla_3878:
        cmpb       $1, %dl 
        jnae       false__hla_3879
        cmpb       $2, %dl 
        jnbe       false__hla_3879
        mov        9(%ebx), %edx 
        addl       $1, %edx 
        mov        %edx, (%esi) 
        mov        21(%eax), %dl 
        mov        8(%eax), %eax 
        shll       $8, %eax 
        orl        $2, %eax 
        mov        %eax, 4(%esi) 
        addl       $8, %esi 
        movl       $-4, -4(%edi) 
        jmp        endif__hla_3878
false__hla_3879:
        cmpb       $3, %dl 
        jne        false__hla_3881
        mov        9(%ebx), %edx 
        addl       $1, %edx 
        mov        %edx, (%esi) 
        mov        8(%eax), %eax 
        orl        $218103808, %eax 
        mov        %eax, 4(%esi) 
        addl       $8, %esi 
        mov        9(%ebx), %eax 
        addl       $5, %eax 
        negl       %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3878
false__hla_3881:
        pushl      $str__hla_3857 
        call       STDERR_PUTS
endif__hla_3878:
false__hla_3873:
false__hla_3872:
        jmp        endswitch__hla_3818
case__hla_3882:
        cmpl       $0, 13(%ebx) 
        je         false__hla_3883
        mov        8(%ebp), %dl 
        testb      %dl, %dl 
        jne        false__hla_3884
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        8(%eax), %eax 
        mov        %eax, 4(%esi) 
        mov        9(%ebx), %eax 
        mov        %eax, (%esi) 
        movw       $6, 8(%esi) 
        addl       $10, %esi 
        mov        17(%ebx), %eax 
        stosl
        jmp        endif__hla_3884
false__hla_3884:
        cmpb       $1, %dl 
        jnae       false__hla_3885
        cmpb       $2, %dl 
        jnbe       false__hla_3885
        mov        9(%ebx), %edx 
        mov        %edx, (%esi) 
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        8(%eax), %edx 
        shll       $8, %edx 
        orl        $1, %edx 
        mov        %edx, 4(%esi) 
        addl       $8, %esi 
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        17(%ebx), %eax 
        stosl
        jmp        endif__hla_3884
false__hla_3885:
        cmpb       $3, %dl 
        jne        false__hla_3887
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        9(%ebx), %edx 
        subl       28(%ebp), %edx 
        testb      $1, 21(%eax) 
        jnz        L3889__hla_
        cmpl       $0, 17(%ebx) 
        jne        false__hla_3888
L3889__hla_:
        mov        %edx, (%esi) 
        testb      $1, 21(%eax) 
        jz         false__hla_3890
        mov        8(%eax), %eax 
        orl        $201326592, %eax 
        mov        %eax, 4(%esi) 
        addl       $8, %esi 
        mov        17(%ebx), %eax 
        stosl
        jmp        endif__hla_3890
false__hla_3890:
        movzbl     20(%eax), %eax 
        cmpb       $1, %al 
        jne        false__hla_3891
        mov        $1, %al 
        jmp        endif__hla_3891
false__hla_3891:
        cmpb       $2, %al 
        jne        false__hla_3892
        mov        $2, %al 
        jmp        endif__hla_3891
false__hla_3892:
        cmpb       $3, %al 
        jne        false__hla_3893
        mov        $3, %al 
        jmp        endif__hla_3891
false__hla_3893:
        pushl      $str__hla_3894 
        call       STDOUT_PUTS
        pushl      %eax 
        call       STDOUT_PUTU8
        call       STDOUT_NEWLN
        mov        $8, %eax 
        jmp        Raise__hla_
endif__hla_3891:
        orl        $67108864, %eax 
        mov        %eax, 4(%esi) 
        addl       $8, %esi 
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        12(%eax), %eax 
        stosl
endif__hla_3890:
        jmp        endif__hla_3888
false__hla_3888:
        mov        %edx, (%esi) 
        orl        $-1610612736, (%esi) 
        mov        12(%eax), %eax 
        mov        %eax, 4(%esi) 
        addl       17(%ebx), %eax 
        stosl
        addl       $8, %esi 
endif__hla_3888:
        jmp        endif__hla_3884
false__hla_3887:
        pushl      $str__hla_3857 
        call       STDERR_PUTS
endif__hla_3884:
false__hla_3883:
        jmp        endswitch__hla_3818
case__hla_3895:
        mov        13(%ebx), %ecx 
        testl      %ecx, %ecx 
        je         false__hla_3896
        xorl       %eax, %eax 
        cld
        rep stosb
false__hla_3896:
        jmp        endswitch__hla_3818
default__hla_3818:
        pushl      $str__hla_3897 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTU8
        call       STDERR_NEWLN
endswitch__hla_3818:
        mov        4(%ebx), %ebx 
continue__hla_3816:
        cmpl       $0, %ebx 
        jne        while__hla_3816
exitloop__hla_3816:

        popl       %esi 
        popl       %edi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
xbuildRaw__hla_3811__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $28
End_buildRaw__hla_3811_3900:
  .size buildRaw__hla_3811,End_buildRaw__hla_3811_3900-buildRaw__hla_3811



        .type      sectionPass__hla_3908,@function

sectionPass__hla_3908:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        mov        8(%ebp), %ecx 
        mov        16(%ebp), %ebx 
        jmp        continue__hla_3911
while__hla_3911:
        mov        %ecx, 9(%ebx) 
        movzbl     8(%ebx), %eax 
        cmpl       $21, %eax 
        jg         default__hla_3913
        jmp *      jmpTbl__hla_3913(,%eax,4) 
case__hla_3914:
        jmp        endswitch__hla_3913
case__hla_3915:
        movb       $1, currentSection 
        jmp        endswitch__hla_3913
case__hla_3916:
        movb       $2, currentSection 
        jmp        endswitch__hla_3913
case__hla_3917:
        movb       $3, currentSection 
        jmp        endswitch__hla_3913
case__hla_3918:
        mov        13(%ebx), %eax 
        subl       $1, %eax 
        addl       %eax, %ecx 
        notl       %eax 
        andl       %eax, %ecx 
        jmp        endswitch__hla_3913
case__hla_3919:
        addl       13(%ebx), %ecx 
        jmp        endswitch__hla_3913
case__hla_3920:
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        %ecx, 12(%eax) 
        mov        currentSection, %dl 
        mov        %dl, 20(%eax) 
        jmp        endswitch__hla_3913
case__hla_3921:
        addl       13(%ebx), %ecx 
        jmp        endswitch__hla_3913
case__hla_3922:
        mov        13(%ebx), %eax 
        imull      17(%ebx), %eax 
        addl       %eax, %ecx 
        jmp        endswitch__hla_3913
case__hla_3923:
        addl       $2, %ecx 
        mov        17(%ebx), %eax 
        cmpl       $0, %eax 
        je         false__hla_3924
        mov        4(%eax), %edx 
        cmpl       $0, %edx 
        je         false__hla_3925
        mov        21(%edx), %dl 
        testb      $1, %dl 
        jz         false__hla_3926
        pushl      $str__hla_3927 
        call       STDERR_PUTS
        pushl      8(%eax) 
        call       STDERR_PUTS
        pushl      $str__hla_3928 
        call       STDERR_PUTS
        call       printLineNumberChain
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_3926:
false__hla_3925:
false__hla_3924:
        jmp        endswitch__hla_3913
case__hla_3929:
        addl       $1, %ecx 
        mov        12(%ebp), %eax 
        addl       %eax, %ecx 
        mov        %al, 32(%ebx) 
        cmpb       $1, %al 
        jna        false__hla_3930
        addl       $1, %ecx 
false__hla_3930:
        jmp        endswitch__hla_3913
case__hla_3931:
        mov        12(%ebp), %eax 
        lea        1(%ecx,%eax,1), %ecx 
        mov        %al, 31(%ebx) 
        jmp        endswitch__hla_3913
case__hla_3932:
        addl       $3, %ecx 
        jmp        endswitch__hla_3913
case__hla_3933:
        addl       $5, %ecx 
        jmp        endswitch__hla_3913
case__hla_3934:
        addl       $4, %ecx 
        jmp        endswitch__hla_3913
default__hla_3913:
        pushl      $str__hla_3897 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTU8
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
endswitch__hla_3913:
        mov        4(%ebx), %ebx 
continue__hla_3911:
        cmpl       $0, %ebx 
        jne        while__hla_3911
exitloop__hla_3911:

        movl       %ecx, %eax 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
xsectionPass__hla_3908__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $12
End_sectionPass__hla_3908_3937:
  .size sectionPass__hla_3908,End_sectionPass__hla_3908_3937-sectionPass__hla_3908



        .type      firstPass__hla_3905,@function

firstPass__hla_3905:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $8, %esp 
        movb       $1, currentSection 
        movl       $0, codeStart__hla_3321 
        pushl      24(%ebp) 
        pushl      12(%ebp) 
        pushl      codeStart__hla_3321 
        call       sectionPass__hla_3908
        mov        %eax, codeEnd__hla_3322 
        cmpb       $3, 8(%ebp) 
        jne        false__hla_3940
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, dataStart__hla_3323 
        jmp        endif__hla_3940
false__hla_3940:
        movl       $0, dataStart__hla_3323 
endif__hla_3940:
        movb       $2, currentSection 
        pushl      20(%ebp) 
        pushl      12(%ebp) 
        pushl      dataStart__hla_3323 
        call       sectionPass__hla_3908
        mov        %eax, dataEnd__hla_3324 
        cmpb       $3, 8(%ebp) 
        jne        false__hla_3941
        addl       $15, %eax 
        andl       $-16, %eax 
        jmp        endif__hla_3941
false__hla_3941:
        xorl       %eax, %eax 
endif__hla_3941:
        mov        %eax, bssStart__hla_3325 
        movb       $3, currentSection 
        pushl      16(%ebp) 
        pushl      12(%ebp) 
        pushl      %eax 
        call       sectionPass__hla_3908
        mov        %eax, bssEnd__hla_3326 
xfirstPass__hla_3905__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $20
End_firstPass__hla_3905_3944:
  .size firstPass__hla_3905,End_firstPass__hla_3905_3944-firstPass__hla_3905



        .type      computeDisplacement__hla_3950,@function

computeDisplacement__hla_3950:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        mov        12(%ebp), %ecx 
        mov        8(%ebp), %ebx 
        mov        17(%ebx), %eax 
        mov        4(%eax), %edx 
        testb      $9, 21(%edx) 
        jnz        false__hla_3953
        pushl      $str__hla_3954 
        call       STDERR_PUTS
        pushl      8(%eax) 
        call       STDERR_PUTS
        call       STDERR_NEWLN
        call       printLineNumberChain
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_3953:
        mov        20(%edx), %al 
        mov        21(%edx), %ah 
        andb       $3, %ah 
        testb      %al, %al 
        jne        false__hla_3955
        mov        $1, %eax 
        jmp        endif__hla_3955
false__hla_3955:
        cmpb       $1, %ah 
        jne        false__hla_3956
        mov        $4, %eax 
        jmp        endif__hla_3955
false__hla_3956:
        cmpb       currentSection, %al 
        je         false__hla_3957
        mov        $4, %eax 
        jmp        endif__hla_3955
false__hla_3957:
        mov        12(%edx), %eax 
        subl       %ecx, %eax 
        mov        %eax, 13(%ebx) 
        cmpl       $-128, %eax 
        jnge       false__hla_3958
        cmpl       $127, %eax 
        jnle       false__hla_3958
        mov        $1, %eax 
        jmp        endif__hla_3958
false__hla_3958:
        mov        $4, %eax 
endif__hla_3958:
endif__hla_3955:
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
xcomputeDisplacement__hla_3950__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $8
End_computeDisplacement__hla_3950_3962:
  .size computeDisplacement__hla_3950,End_computeDisplacement__hla_3950_3962-computeDisplacement__hla_3950



        .type      doPhase__hla_3965,@function

doPhase__hla_3965:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $4, %esp 
        mov        8(%ebp), %ecx 
        mov        20(%ebp), %ebx 
        jmp        continue__hla_3968
while__hla_3968:
        mov        9(%ebx), %eax 
        mov        %eax, -4(%ebp) 
        mov        %ecx, 9(%ebx) 
        movzbl     8(%ebx), %eax 
        cmpl       $21, %eax 
        jg         default__hla_3970
        jmp *      jmpTbl__hla_3970(,%eax,4) 
case__hla_3971:
        jmp        endswitch__hla_3970
case__hla_3972:
        movb       $1, currentSection 
        jmp        endswitch__hla_3970
case__hla_3973:
        movb       $2, currentSection 
        jmp        endswitch__hla_3970
case__hla_3974:
        movb       $3, currentSection 
        jmp        endswitch__hla_3970
case__hla_3975:
        mov        -4(%ebp), %eax 
        cmpl       9(%ebx), %eax 
        je         false__hla_3976
        mov        16(%ebp), %eax 
        movb       $1, (%eax) 
false__hla_3976:
        jmp        endswitch__hla_3970
case__hla_3977:
        mov        13(%ebx), %eax 
        subl       $1, %eax 
        addl       %eax, %ecx 
        notl       %eax 
        andl       %eax, %ecx 
        mov        4(%ebx), %eax 
        cmpl       9(%eax), %ecx 
        je         false__hla_3978
        mov        16(%ebp), %edx 
        movb       $1, (%edx) 
false__hla_3978:
        jmp        endswitch__hla_3970
case__hla_3979:
        addl       13(%ebx), %ecx 
        jmp        endswitch__hla_3970
case__hla_3980:
        addl       13(%ebx), %ecx 
        jmp        endswitch__hla_3970
case__hla_3981:
        mov        13(%ebx), %eax 
        imull      17(%ebx), %eax 
        addl       %eax, %ecx 
        jmp        endswitch__hla_3970
case__hla_3982:
        addl       $2, %ecx 
        mov        -4(%ebp), %eax 
        addl       $2, %eax 
        pushl      %eax 
        pushl      %ebx 
        call       computeDisplacement__hla_3950
        jmp        endswitch__hla_3970
case__hla_3983:
        mov        $2, %eax 
        mov        $1, %edx 
        cmpb       $4, 32(%ebx) 
        jne        false__hla_3984
        addl       $3, %edx 
        addl       $4, %eax 
false__hla_3984:
        addl       %eax, %ecx 
        addl       -4(%ebp), %eax 
        pushl      %eax 
        pushl      %ebx 
        call       computeDisplacement__hla_3950
        cmpb       %dl, %al 
        je         false__hla_3985
        cmpb       12(%ebp), %al 
        jne        false__hla_3985
        mov        %al, 32(%ebx) 
        mov        16(%ebp), %edx 
        movb       $1, (%edx) 
false__hla_3985:
        jmp        endswitch__hla_3970
case__hla_3987:
        addl       $1, %ecx 
        movzbl     31(%ebx), %edx 
        addl       %edx, %ecx 
        mov        -4(%ebp), %eax 
        addl       $1, %eax 
        addl       %edx, %eax 
        pushl      %eax 
        pushl      %ebx 
        call       computeDisplacement__hla_3950
        cmpb       %dl, %al 
        je         false__hla_3988
        cmpb       12(%ebp), %al 
        jne        false__hla_3988
        mov        12(%ebp), %al 
        mov        %al, 31(%ebx) 
        mov        16(%ebp), %edx 
        movb       $1, (%edx) 
false__hla_3988:
        jmp        endswitch__hla_3970
case__hla_3990:
        addl       $3, %ecx 
        mov        -4(%ebp), %eax 
        addl       $3, %eax 
        pushl      %eax 
        pushl      %ebx 
        call       computeDisplacement__hla_3950
        jmp        endswitch__hla_3970
case__hla_3991:
        addl       $5, %ecx 
        mov        -4(%ebp), %eax 
        addl       $5, %eax 
        pushl      %eax 
        pushl      %ebx 
        call       computeDisplacement__hla_3950
        jmp        endswitch__hla_3970
case__hla_3992:
        addl       $4, %ecx 
        jmp        endswitch__hla_3970
default__hla_3970:
        pushl      $str__hla_3897 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTU8
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
endswitch__hla_3970:
        mov        4(%ebx), %ebx 
continue__hla_3968:
        cmpl       $0, %ebx 
        jne        while__hla_3968
exitloop__hla_3968:

        mov        20(%ebp), %ebx 
        jmp        continue__hla_3993
while__hla_3993:
        cmpb       $3, 8(%ebx) 
        jne        false__hla_3995
        mov        9(%ebx), %edx 
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        cmpl       12(%eax), %edx 
        je         false__hla_3996
        mov        %edx, 12(%eax) 
        mov        16(%ebp), %edx 
        movb       $1, (%edx) 
false__hla_3996:
false__hla_3995:
        mov        4(%ebx), %ebx 
continue__hla_3993:
        cmpl       $0, %ebx 
        jne        while__hla_3993
exitloop__hla_3993:

xdoPhase__hla_3965__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $16
End_doPhase__hla_3965_3999:
  .size doPhase__hla_3965,End_doPhase__hla_3965_3999-doPhase__hla_3965



        .type      dispPhase__hla_3947,@function

dispPhase__hla_3947:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $20, %esp 
        mov        %ebx, -4(%ebp) 
        mov        %ecx, -8(%ebp) 
        mov        %edx, -12(%ebp) 
        movl       $0, -16(%ebp) 
false__hla_4002:
repeat__hla_4002:
        movb       $0, -17(%ebp) 
        movl       $0, codeStart__hla_3321 
        pushl      24(%ebp) 
        pushl      %ebp 
        addl       $-17, (%esp) 
        pushl      12(%ebp) 
        pushl      codeStart__hla_3321 
        call       doPhase__hla_3965
        mov        %ecx, codeEnd__hla_3322 
        cmpb       $3, 8(%ebp) 
        jne        false__hla_4003
        addl       $15, %ecx 
        andl       $-16, %ecx 
        jmp        endif__hla_4003
false__hla_4003:
        xorl       %ecx, %ecx 
endif__hla_4003:
        mov        %ecx, dataStart__hla_3323 
        pushl      20(%ebp) 
        pushl      %ebp 
        addl       $-17, (%esp) 
        pushl      12(%ebp) 
        pushl      %ecx 
        call       doPhase__hla_3965
        mov        %ecx, dataEnd__hla_3324 
        cmpb       $3, 8(%ebp) 
        jne        false__hla_4004
        addl       $15, %ecx 
        andl       $-16, %ecx 
        mov        %ecx, bssStart__hla_3325 
        pushl      16(%ebp) 
        pushl      %ebp 
        addl       $-17, (%esp) 
        pushl      12(%ebp) 
        pushl      %ecx 
        call       doPhase__hla_3965
        mov        %ecx, bssEnd__hla_3326 
false__hla_4004:
        addl       $1, -16(%ebp) 
        cmpl       $16384, -16(%ebp) 
        ja         exitloop__hla_4002
continue__hla_4002:
        cmpb       $0, -17(%ebp) 
        jne        repeat__hla_4002
exitloop__hla_4002:

        mov        -16(%ebp), %eax 
        mov        -4(%ebp), %ebx 
        mov        -8(%ebp), %ecx 
        mov        -12(%ebp), %edx 
xdispPhase__hla_3947__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $20
End_dispPhase__hla_3947_4008:
  .size dispPhase__hla_3947,End_dispPhase__hla_3947_4008-dispPhase__hla_3947



        .type      cleanupPass__hla_4014,@function

cleanupPass__hla_4014:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %esi 
        mov        16(%ebp), %ebx 
        xorl       %esi, %esi 
        jmp        continue__hla_4017
while__hla_4017:
        mov        9(%ebx), %ecx 
        movzbl     8(%ebx), %eax 
        cmpl       $21, %eax 
        jg         default__hla_4019
        jmp *      jmpTbl__hla_4019(,%eax,4) 
case__hla_4020:
        jmp        endswitch__hla_4019
case__hla_4021:
        mov        13(%ebx), %edx 
        mov        4(%edx), %eax 
        movb       $1, 22(%eax) 
        movl       %ecx, %edx 
        subl       12(%eax), %edx 
        mov        %edx, 16(%eax) 
        jmp        endswitch__hla_4019
case__hla_4022:
        mov        13(%ebx), %edx 
        mov        4(%edx), %eax 
        mov        %ecx, 12(%eax) 
        testb      $9, 21(%eax) 
        jnz        false__hla_4023
        pushl      $str__hla_4024 
        call       STDERR_PUTS
        pushl      8(%edx) 
        call       STDERR_PUTS
        pushl      $str__hla_4025 
        call       STDERR_PUTS
        call       printLineNumberChain
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_4023:
        jmp        endswitch__hla_4019
case__hla_4026:
        mov        13(%ebx), %eax 
        cmpl       $-128, %eax 
        jl         L4028__hla_
        cmpl       $127, %eax 
        jng        false__hla_4027
L4028__hla_:
        pushl      $str__hla_4029 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTI32
        pushl      $str__hla_4030 
        call       STDERR_PUTS
        call       printLineNumberChain
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_4027:
        jmp        endswitch__hla_4019
case__hla_4031:
        mov        13(%ebx), %eax 
        cmpl       $-128, %eax 
        jl         L4033__hla_
        cmpl       $127, %eax 
        jng        false__hla_4032
L4033__hla_:
        pushl      $str__hla_4029 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTI32
        pushl      $str__hla_4030 
        call       STDERR_PUTS
        call       printLineNumberChain
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_4032:
        jmp        endswitch__hla_4019
case__hla_4034:
        cmpb       $4, 32(%ebx) 
        jne        false__hla_4035
        cmpl       $0, 17(%ebx) 
        je         false__hla_4036
        mov        17(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        20(%eax), %dl 
        mov        21(%eax), %dh 
        andb       $3, %dh 
        cmpb       $1, %dh 
        je         L4038__hla_
        cmpb       12(%ebp), %dl 
        je         false__hla_4037
L4038__hla_:
        addl       $1, %esi 
false__hla_4037:
false__hla_4036:
false__hla_4035:
        jmp        endswitch__hla_4019
case__hla_4039:
        cmpb       $4, 31(%ebx) 
        jne        false__hla_4040
        cmpl       $0, 17(%ebx) 
        je         false__hla_4041
        mov        17(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        20(%eax), %dl 
        mov        21(%eax), %dh 
        andb       $3, %dh 
        cmpb       $1, %dh 
        je         L4043__hla_
        cmpb       12(%ebp), %dl 
        jne        L4043__hla_
        testb      %dh, %dh 
        je         false__hla_4042
        cmpb       $1, 8(%ebp) 
        jnae       false__hla_4042
        cmpb       $2, 8(%ebp) 
        jnbe       false__hla_4042
L4043__hla_:
        addl       $1, %esi 
false__hla_4042:
false__hla_4041:
false__hla_4040:
        jmp        endswitch__hla_4019
case__hla_4047:
        cmpl       $0, 17(%ebx) 
        je         false__hla_4048
        mov        17(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        20(%eax), %dl 
        mov        21(%eax), %dh 
        andb       $3, %dh 
        testb      $1, %dh 
        jnz        L4050__hla_
        cmpb       12(%ebp), %dl 
        jne        L4050__hla_
        testb      %dh, %dh 
        je         false__hla_4049
        cmpb       $1, 8(%ebp) 
        jnae       false__hla_4049
        cmpb       $2, 8(%ebp) 
        jnbe       false__hla_4049
L4050__hla_:
        addl       $1, %esi 
false__hla_4049:
false__hla_4048:
        jmp        endswitch__hla_4019
case__hla_4054:
        addl       $1, %esi 
        jmp        endswitch__hla_4019
default__hla_4019:
        pushl      $str__hla_3897 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTU8
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
endswitch__hla_4019:
        mov        4(%ebx), %ebx 
continue__hla_4017:
        cmpl       $0, %ebx 
        jne        while__hla_4017
exitloop__hla_4017:

        movl       %ecx, %eax 
        movl       %esi, %edx 
        popl       %esi 
        popl       %ecx 
        popl       %ebx 
xcleanupPass__hla_4014__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $12
End_cleanupPass__hla_4014_4057:
  .size cleanupPass__hla_4014,End_cleanupPass__hla_4014_4057-cleanupPass__hla_4014



        .type      finalPass__hla_4011,@function

finalPass__hla_4011:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $8, %esp 
        pushl      %eax 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      20(%ebp) 
        pushl      $1 
        pushl      8(%ebp) 
        call       cleanupPass__hla_4014
        mov        %eax, codeEnd__hla_3322 
        mov        %edx, numCodeRelocs 
        pushl      16(%ebp) 
        pushl      $2 
        pushl      8(%ebp) 
        call       cleanupPass__hla_4014
        mov        %eax, dataEnd__hla_3324 
        mov        %edx, numDataRelocs 
        pushl      12(%ebp) 
        pushl      $3 
        pushl      8(%ebp) 
        call       cleanupPass__hla_4014
        mov        %eax, bssEnd__hla_3326 
        testl      %edx, %edx 
        je         false__hla_4060
        pushl      $str__hla_4061 
        call       STDERR_PUTS
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_4060:
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4062 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        mov        4(%eax), %ebx 
        cmpl       $0, %ebx 
        jne        _0fdf_skipAssertion___hla_4067
        pushl      _0fe0_msg___hla_4065 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0fdf_skipAssertion___hla_4067:
        mov        21(%ebx), %cl 
        andb       $13, %cl 
        cmpb       $4, %cl 
        jne        false__hla_4068
        pushl      $str__hla_4069 
        call       STDERR_PUTS
        pushl      8(%eax) 
        call       STDERR_PUTS
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_4068:
continue__hla_4062:
        popl       %ebp 
        ret        $4
exitfor__hla_4062:

        popl       %edx 
        popl       %ecx 
        popl       %ebx 
        popl       %eax 
xfinalPass__hla_4011__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $16
End_finalPass__hla_4011_4072:
  .size finalPass__hla_4011,End_finalPass__hla_4011_4072-finalPass__hla_4011



        .type      optimizeDisps,@function

optimizeDisps:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $12, %esp 
        cmpb       $0, verboseDebug__hla_3327 
        je         false__hla_4075
        pushl      $str__hla_4076 
        call       STDOUT_PUTS
false__hla_4075:
        pushl      24(%ebp) 
        pushl      20(%ebp) 
        pushl      16(%ebp) 
        pushl      $1 
        pushl      8(%ebp) 
        call       firstPass__hla_3905
        pushl      24(%ebp) 
        pushl      20(%ebp) 
        pushl      16(%ebp) 
        pushl      $4 
        pushl      8(%ebp) 
        call       dispPhase__hla_3947
        mov        %eax, -4(%ebp) 
        cmpl       $16384, %eax 
        jna        false__hla_4077
        pushl      $str__hla_4078 
        call       STDOUT_PUTS
        pushl      24(%ebp) 
        pushl      20(%ebp) 
        pushl      16(%ebp) 
        pushl      $4 
        pushl      8(%ebp) 
        call       firstPass__hla_3905
        mov        %eax, -8(%ebp) 
        mov        %edx, -12(%ebp) 
        pushl      24(%ebp) 
        pushl      20(%ebp) 
        pushl      16(%ebp) 
        pushl      $1 
        pushl      8(%ebp) 
        call       dispPhase__hla_3947
        mov        %eax, -4(%ebp) 
        pushl      24(%ebp) 
        pushl      20(%ebp) 
        pushl      16(%ebp) 
        pushl      8(%ebp) 
        call       finalPass__hla_4011
        cmpb       $0, 12(%ebp) 
        je         false__hla_4079
        pushl      $str__hla_4080 
        call       STDOUT_PUTS
        pushl      -4(%ebp) 
        call       STDOUT_PUTU32
        pushl      $str__hla_4081 
        call       STDOUT_PUTS
false__hla_4079:
        jmp        endif__hla_4077
false__hla_4077:
        pushl      24(%ebp) 
        pushl      20(%ebp) 
        pushl      16(%ebp) 
        pushl      8(%ebp) 
        call       finalPass__hla_4011
        cmpb       $0, 12(%ebp) 
        je         false__hla_4082
        pushl      $str__hla_4080 
        call       STDOUT_PUTS
        pushl      -4(%ebp) 
        call       STDOUT_PUTU32
        pushl      $str__hla_4083 
        call       STDOUT_PUTS
false__hla_4082:
endif__hla_4077:
        mov        codeEnd__hla_3322, %eax 
        subl       codeStart__hla_3321, %eax 
        mov        %eax, codeSize 
        mov        dataEnd__hla_3324, %eax 
        subl       dataStart__hla_3323, %eax 
        mov        %eax, dataSize 
        mov        bssEnd__hla_3326, %eax 
        subl       bssStart__hla_3325, %eax 
        mov        %eax, bssSize 
xoptimizeDisps__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $20
End_optimizeDisps_4086:
  .size optimizeDisps,End_optimizeDisps_4086-optimizeDisps



        .type      getSymbol__hla_4095,@function

getSymbol__hla_4095:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %eax 
        pushl      %ebx 
        imul       $18, 12(%ebp), %ebx 
        addl       COFFsyms__hla_3309, %ebx 
        mov        (%ebx), %eax 
        testl      %eax, %eax 
        je         false__hla_4098
        pushl      8(%ebx) 
        movl       $0, 8(%ebx) 
        lea        (%ebx), %eax 
        pushl      %eax 
        pushl      8(%ebp) 
        call       STR_CPYZ
        popl       8(%ebx) 
        jmp        endif__hla_4098
false__hla_4098:
        mov        4(%ebx), %eax 
        addl       stringTable__hla_3318, %eax 
        pushl      %eax 
        pushl      8(%ebp) 
        call       STR_CPYZ
endif__hla_4098:
        popl       %ebx 
        popl       %eax 
xgetSymbol__hla_4095__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $8
End_getSymbol__hla_4095_4101:
  .size getSymbol__hla_4095,End_getSymbol__hla_4095_4101-getSymbol__hla_4095



        .type      dumpRelocs__hla_4104,@function

dumpRelocs__hla_4104:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $1028, %esp 
        pushl      %eax 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %ebp 
        addl       $-1028, (%esp) 
        pushl      $1024 
        call       STR_INIT
        mov        %eax, -4(%ebp) 
        call       STDOUT_NEWLN
        pushl      16(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4107 
        call       STDOUT_PUTS
        mov        12(%ebp), %ebx 
        mov        $0, %ecx 

        jmp        StartFor__hla_4108
for__hla_4108:
        pushl      4(%ebx) 
        pushl      -4(%ebp) 
        call       getSymbol__hla_4095
        pushl      %ecx 
        call       STDOUT_PUTU32
        pushl      $str__hla_4109 
        call       STDOUT_PUTS
        pushl      (%ebx) 
        call       STDOUT_PUTD
        pushl      $str__hla_4110 
        call       STDOUT_PUTS
        pushl      -4(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4111 
        call       STDOUT_PUTS
        movzwl     8(%ebx), %eax 
        cmpl       $20, %eax 
        jg         default__hla_4112
        jmp *      jmpTbl__hla_4112(,%eax,4) 
case__hla_4113:
        pushl      $str__hla_4114 
        call       STDOUT_PUTS
        jmp        endswitch__hla_4112
case__hla_4115:
        pushl      $str__hla_4116 
        call       STDOUT_PUTS
        jmp        endswitch__hla_4112
case__hla_4117:
        pushl      $str__hla_4118 
        call       STDOUT_PUTS
        jmp        endswitch__hla_4112
case__hla_4119:
        pushl      $str__hla_4120 
        call       STDOUT_PUTS
        jmp        endswitch__hla_4112
default__hla_4112:
        pushl      $str__hla_4121 
        call       STDOUT_PUTS
        pushl      %eax 
        call       STDOUT_PUTD
endswitch__hla_4112:
        call       STDOUT_NEWLN
        addl       $10, %ebx 
continue__hla_4108:
        incl       %ecx 

StartFor__hla_4108:
        cmpl       8(%ebp), %ecx 
        jb         for__hla_4108
exitloop__hla_4108:

        popl       %ecx 
        popl       %ebx 
        popl       %eax 
xdumpRelocs__hla_4104__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $12
End_dumpRelocs__hla_4104_4124:
  .size dumpRelocs__hla_4104,End_dumpRelocs__hla_4104_4124-dumpRelocs__hla_4104



        .type      generateCOFF__hla_4089,@function

generateCOFF__hla_4089:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $192, %esp 
        pushl      %eax 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        cmpb       $0, verboseDebug__hla_3327 
        je         false__hla_4127
        pushl      $str__hla_4128 
        call       STDOUT_PUTS
        pushl      24(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4129 
        call       STDOUT_PUTS
        pushl      20(%ebp) 
        call       STDOUT_PUTS
        call       STDOUT_NEWLN
false__hla_4127:
        movl       $65536, strTblSize__hla_3320 
        pushl      $65536 
        call       MEM_ALLOC1
        mov        %eax, stringTable__hla_3318 
        movl       $4, strTblOffset__hla_3319 
        pushl      $73728 
        call       MEM_ALLOC1
        mov        %eax, COFFsyms__hla_3309 
        movl       %eax, %ebx 
        movl       $73728, coffSymSize__hla_3311 
        movl       $0, numCOFFsyms__hla_3310 
        movb       $46, (%ebx) 
        movb       $102, 1(%ebx) 
        movb       $105, 2(%ebx) 
        movb       $108, 3(%ebx) 
        movb       $101, 4(%ebx) 
        movb       $0, 5(%ebx) 
        movb       $0, 6(%ebx) 
        movb       $0, 7(%ebx) 
        movl       $0, 8(%ebx) 
        movw       $2, 12(%ebx) 
        movw       $0, 14(%ebx) 
        movb       $103, 16(%ebx) 
        pushl      24(%ebp) 
        call       STR_LENGTH
        addl       $18, %eax 
        xorl       %edx, %edx 
        divl       divisor__hla_4130 
        mov        %al, 17(%ebx) 
        addl       $1, %eax 
        mov        %eax, numCOFFsyms__hla_3310 
        lea        18(%ebx), %eax 
        pushl      24(%ebp) 
        pushl      %eax 
        call       ZSTR_CPY
        mov        numCodeRelocs, %eax 
        cmpl       $65535, %eax 
        jnae       false__hla_4131
        mov        $65535, %ax 
        addl       $1, numCodeRelocs 
false__hla_4131:
        mov        %ax, CodeAuxSection__hla_4090+4 
        mov        codeSize, %eax 
        mov        %eax, CodeAuxSection__hla_4090 
        pushl      $str__hla_4132 
        pushl      $0 
        pushl      $1 
        pushl      $0 
        pushl      $3 
        pushl      $1 
        pushl      $CodeAuxSection__hla_4090 
        call       addCOFFsym__hla_3773
        addl       COFFsyms__hla_3309, %eax 
        mov        %eax, -172(%ebp) 
        mov        numDataRelocs, %eax 
        cmpl       $65535, %eax 
        jnae       false__hla_4133
        mov        $65535, %ax 
        addl       $1, numDataRelocs 
false__hla_4133:
        mov        %ax, DataAuxSection__hla_4091+4 
        mov        dataSize, %eax 
        mov        %eax, DataAuxSection__hla_4091 
        pushl      $str__hla_4134 
        pushl      $0 
        pushl      $2 
        pushl      $0 
        pushl      $3 
        pushl      $1 
        pushl      $DataAuxSection__hla_4091 
        call       addCOFFsym__hla_3773
        addl       COFFsyms__hla_3309, %eax 
        mov        %eax, -176(%ebp) 
        mov        bssSize, %eax 
        mov        %eax, BssAuxSection__hla_4092 
        pushl      $str__hla_4135 
        pushl      $0 
        pushl      $3 
        pushl      $0 
        pushl      $3 
        pushl      $1 
        pushl      $BssAuxSection__hla_4092 
        call       addCOFFsym__hla_3773
        addl       COFFsyms__hla_3309, %eax 
        mov        %eax, -180(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4136 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        mov        4(%edx), %ebx 
        movzbw     20(%ebx), %cx 
        mov        12(%ebx), %edi 
        testb      $1, 21(%ebx) 
        jz         false__hla_4137
        mov        $2, %al 
        mov        $0, %cx 
        xorl       %edi, %edi 
        jmp        endif__hla_4137
false__hla_4137:
        testb      $2, 21(%ebx) 
        jz         false__hla_4138
        mov        $2, %al 
        jmp        endif__hla_4138
false__hla_4138:
        mov        $3, %al 
endif__hla_4138:
endif__hla_4137:
        pushl      8(%edx) 
        pushl      12(%ebx) 
        pushl      %ecx 
        pushl      $0 
        pushl      %eax 
        pushl      $0 
        pushl      $0 
        call       addCOFFsym__hla_3773
        mov        %eax, 8(%ebx) 
continue__hla_4136:
        popl       %ebp 
        ret        $4
exitfor__hla_4136:

        movw       $332, -32(%ebp) 
        movw       $3, -30(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        call       TIME_UTCDATETIME
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        call       TIME_TOUNIXTIME
        mov        %eax, -28(%ebp) 
        movl       $0, -24(%ebp) 
        movl       $0, -20(%ebp) 
        movw       $0, -16(%ebp) 
        movw       $256, -14(%ebp) 
        movb       $46, -72(%ebp) 
        movb       $116, -71(%ebp) 
        movb       $101, -70(%ebp) 
        movb       $120, -69(%ebp) 
        movb       $116, -68(%ebp) 
        movb       $0, -67(%ebp) 
        movb       $0, -66(%ebp) 
        movb       $0, -65(%ebp) 
        mov        codeSize, %eax 
        mov        %eax, -64(%ebp) 
        mov        %eax, -56(%ebp) 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -164(%ebp) 
        mov        numCodeRelocs, %edx 
        cmpl       $65535, %edx 
        jnb        false__hla_4139
        mov        %dx, -40(%ebp) 
        movzwl     %dx, %eax 
        imul       $10, %eax, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -156(%ebp) 
        movl       $1615855648, -36(%ebp) 
        jmp        endif__hla_4139
false__hla_4139:
        movw       $65535, -40(%ebp) 
        imul       $10, %edx, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -156(%ebp) 
        mov        %edx, (%eax) 
        movl       $0, 4(%eax) 
        movw       $0, 8(%eax) 
        movl       $1632632864, -36(%ebp) 
endif__hla_4139:
        movl       $0, -60(%ebp) 
        movl       $0, -52(%ebp) 
        movl       $0, -48(%ebp) 
        movl       $0, -44(%ebp) 
        movw       $0, -38(%ebp) 
        pushl      16(%ebp) 
        pushl      codeStart__hla_3321 
        pushl      -156(%ebp) 
        pushl      numCodeRelocs 
        pushl      -164(%ebp) 
        pushl      $1 
        pushl      $0 
        call       buildRaw__hla_3811
        movb       $46, -112(%ebp) 
        movb       $100, -111(%ebp) 
        movb       $97, -110(%ebp) 
        movb       $116, -109(%ebp) 
        movb       $97, -108(%ebp) 
        movb       $0, -107(%ebp) 
        movb       $0, -106(%ebp) 
        movb       $0, -105(%ebp) 
        mov        dataSize, %eax 
        mov        %eax, -104(%ebp) 
        mov        %eax, -96(%ebp) 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -168(%ebp) 
        mov        numDataRelocs, %edx 
        cmpl       $65535, %edx 
        jnb        false__hla_4140
        mov        %dx, -80(%ebp) 
        movzwl     %dx, %eax 
        imul       $10, %eax, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -160(%ebp) 
        movl       $-1068498880, -76(%ebp) 
        jmp        endif__hla_4140
false__hla_4140:
        movw       $65535, -80(%ebp) 
        imul       $10, %edx, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -160(%ebp) 
        mov        %edx, (%eax) 
        movl       $0, 4(%eax) 
        movw       $0, 8(%eax) 
        movl       $-1051721664, -76(%ebp) 
endif__hla_4140:
        movl       $0, -100(%ebp) 
        movl       $0, -92(%ebp) 
        movl       $0, -88(%ebp) 
        movl       $0, -84(%ebp) 
        movw       $0, -78(%ebp) 
        pushl      12(%ebp) 
        pushl      dataStart__hla_3323 
        pushl      -160(%ebp) 
        pushl      numDataRelocs 
        pushl      -168(%ebp) 
        pushl      $2 
        pushl      $0 
        call       buildRaw__hla_3811
        movb       $46, -152(%ebp) 
        movb       $98, -151(%ebp) 
        movb       $115, -150(%ebp) 
        movb       $115, -149(%ebp) 
        movl       $0, -148(%ebp) 
        mov        bssSize, %eax 
        mov        %eax, -136(%ebp) 
        movl       $0, -144(%ebp) 
        movw       $0, -120(%ebp) 
        movl       $0, -140(%ebp) 
        movl       $0, -132(%ebp) 
        movl       $0, -128(%ebp) 
        movl       $0, -124(%ebp) 
        movw       $0, -118(%ebp) 
        movl       $-1068498816, -116(%ebp) 
        mov        $140, %ecx 
        mov        %ecx, -52(%ebp) 
        addl       codeSize, %ecx 
        addl       $3, %ecx 
        andl       $-4, %ecx 
        mov        %ecx, -48(%ebp) 
        imul       $10, numCodeRelocs, %eax 
        addl       %eax, %ecx 
        addl       $3, %ecx 
        andl       $-4, %ecx 
        mov        %ecx, -92(%ebp) 
        addl       dataSize, %ecx 
        addl       $3, %ecx 
        andl       $-4, %ecx 
        mov        %ecx, -88(%ebp) 
        imul       $10, numDataRelocs, %eax 
        addl       %eax, %ecx 
        mov        %ecx, -24(%ebp) 
        mov        numCOFFsyms__hla_3310, %eax 
        mov        %eax, -20(%ebp) 
        imul       $18, %eax, %eax 
        addl       %eax, %ecx 
        addl       strTblOffset__hla_3319, %ecx 
        mov        %ecx, -188(%ebp) 
        pushl      %ecx 
        call       MEM_ZALLOC
        mov        %eax, -184(%ebp) 
        mov        -184(%ebp), %edi 
        lea        -32(%ebp), %esi 
        mov        $20, %ecx 
        cld
        rep movsb
        lea        -72(%ebp), %esi 
        mov        $40, %ecx 
        rep movsb
        lea        -112(%ebp), %esi 
        mov        $40, %ecx 
        rep movsb
        lea        -152(%ebp), %esi 
        mov        $40, %ecx 
        rep movsb
        mov        -164(%ebp), %esi 
        mov        codeSize, %ecx 
        rep movsb
        addl       $3, %edi 
        andl       $-4, %edi 
        mov        -156(%ebp), %esi 
        imul       $10, numCodeRelocs, %ecx 
        rep movsb
        addl       $3, %edi 
        andl       $-4, %edi 
        mov        -168(%ebp), %esi 
        mov        dataSize, %ecx 
        rep movsb
        addl       $3, %edi 
        andl       $-4, %edi 
        mov        -160(%ebp), %esi 
        imul       $10, numDataRelocs, %ecx 
        rep movsb
        mov        COFFsyms__hla_3309, %esi 
        imul       $18, numCOFFsyms__hla_3310, %ecx 
        rep movsb
        mov        stringTable__hla_3318, %esi 
        mov        strTblOffset__hla_3319, %eax 
        stosl
        addl       $4, %esi 
        lea        -4(%eax), %ecx 
        rep movsb
        pushl      20(%ebp) 
        call       FILEIO_OPENNEW
        mov        %eax, -192(%ebp) 
        pushl      -192(%ebp) 
        pushl      -184(%ebp) 
        pushl      -188(%ebp) 
        call       FILEIO_WRITE
        pushl      -192(%ebp) 
        call       FILEIO_CLOSE
        cmpb       $0, verboseDebug__hla_3327 
        je         false__hla_4141
        pushl      $str__hla_4142 
        call       STDOUT_PUTS
        pushl      numCOFFsyms__hla_3310 
        call       STDOUT_PUTU32
        pushl      $str__hla_4143 
        call       STDOUT_PUTS
        mov        COFFsyms__hla_3309, %ebx 
        xorl       %ecx, %ecx 
        jmp        continue__hla_4144
while__hla_4144:
        pushl      %ecx 
        call       STDOUT_PUTU32
        pushl      $str__hla_4109 
        call       STDOUT_PUTS
        mov        (%ebx), %eax 
        testl      %eax, %eax 
        jne        false__hla_4146
        mov        4(%ebx), %eax 
        addl       stringTable__hla_3318, %eax 
        pushl      %eax 
        call       STDOUT_PUTZS
        jmp        endif__hla_4146
false__hla_4146:
        pushl      8(%ebx) 
        movl       $0, 8(%ebx) 
        pushl      %ebx 
        call       STDOUT_PUTZS
        popl       8(%ebx) 
endif__hla_4146:
        pushl      $str__hla_4147 
        call       STDOUT_PUTS
        cmpb       $103, 16(%ebx) 
        jne        false__hla_4148
        lea        18(%ebx), %eax 
        pushl      %eax 
        call       STDOUT_PUTZS
        jmp        endif__hla_4148
false__hla_4148:
        cmpb       $3, 16(%ebx) 
        jne        false__hla_4149
        pushl      $str__hla_4150 
        call       STDOUT_PUTS
        jmp        endif__hla_4148
false__hla_4149:
        cmpb       $2, 16(%ebx) 
        jne        false__hla_4151
        cmpw       $0, 12(%ebx) 
        jne        false__hla_4152
        pushl      $str__hla_4153 
        call       STDOUT_PUTS
        jmp        endif__hla_4152
false__hla_4152:
        pushl      $str__hla_4154 
        call       STDOUT_PUTS
endif__hla_4152:
        jmp        endif__hla_4148
false__hla_4151:
        pushl      $str__hla_4155 
        call       STDOUT_PUTS
endif__hla_4148:
        call       STDOUT_NEWLN
        movzbl     17(%ebx), %eax 
        addl       $1, %eax 
        addl       %eax, %ecx 
        imul       $18, %eax, %eax 
        addl       %eax, %ebx 
continue__hla_4144:
        cmpl       numCOFFsyms__hla_3310, %ecx 
        jb         while__hla_4144
exitloop__hla_4144:

        pushl      $str__hla_4156 
        pushl      -156(%ebp) 
        pushl      numCodeRelocs 
        call       dumpRelocs__hla_4104
        pushl      $str__hla_4157 
        pushl      -160(%ebp) 
        pushl      numDataRelocs 
        call       dumpRelocs__hla_4104
false__hla_4141:
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
        popl       %eax 
xgenerateCOFF__hla_4089__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $20
End_generateCOFF__hla_4089_4160:
  .size generateCOFF__hla_4089,End_generateCOFF__hla_4089_4160-generateCOFF__hla_4089



        .type      generateELF__hla_4163,@function

generateELF__hla_4163:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $148, %esp 
        pushl      %eax 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        cmpb       $0, verboseDebug__hla_3327 
        je         false__hla_4175
        pushl      $str__hla_4176 
        call       STDOUT_PUTS
        pushl      28(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4129 
        call       STDOUT_PUTS
        pushl      24(%ebp) 
        call       STDOUT_PUTS
        call       STDOUT_NEWLN
false__hla_4175:
        pushl      $64 
        call       MEM_ZALLOC
        mov        %eax, -8(%ebp) 
        movl       $4, -140(%ebp) 
        movl       $5, -144(%ebp) 
        movl       $6, -148(%ebp) 
        lea        1(%eax), %edi 
        movl       $1, shstrtabSection__hla_4165 
        pushl      $str__hla_4177 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        movl       $11, symtabSection__hla_4166 
        pushl      $str__hla_4178 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        movl       $19, strtabSection__hla_4167 
        pushl      $str__hla_4179 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        mov        $27, %ebx 
        mov        %ebx, textSection__hla_4168 
        addl       $6, %ebx 
        pushl      $str__hla_4132 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        mov        %ebx, dataSection__hla_4169 
        addl       $6, %ebx 
        pushl      $str__hla_4134 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        mov        %ebx, bssSection__hla_4170 
        addl       $5, %ebx 
        pushl      $str__hla_4135 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        mov        %ebx, relTextSection__hla_4171 
        addl       $10, %ebx 
        pushl      $str__hla_4180 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        mov        %ebx, relDataSection__hla_4172 
        addl       $10, %ebx 
        pushl      $str__hla_4181 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        mov        %ebx, -104(%ebp) 
        movl       $7, -4(%ebp) 
        cmpl       $0, numCodeRelocs 
        je         false__hla_4182
        addl       $1, -4(%ebp) 
false__hla_4182:
        cmpl       $0, numDataRelocs 
        je         false__hla_4183
        addl       $1, -4(%ebp) 
false__hla_4183:
        imul       $40, -4(%ebp), %eax 
        mov        %eax, -96(%ebp) 
        movl       $262144, strTblSize__hla_3320 
        pushl      $262144 
        call       MEM_ZALLOC
        mov        %eax, stringTable__hla_3318 
        movl       $1, strTblOffset__hla_3319 
        pushl      $1048576 
        call       MEM_ZALLOC
        mov        %eax, ELFsyms__hla_3312 
        movl       %eax, %ebx 
        movl       $1048576, elfSymSize__hla_3314 
        movl       $1, numELFsyms__hla_3313 
        pushl      $0 
        pushl      $0 
        pushl      $0 
        pushl      $3 
        pushw      $0 
        pushw      -140(%ebp) 
        pushl      $0 
        call       addELFsym__hla_3785
        addl       $1, numELFsyms__hla_3313 
        pushl      $0 
        pushl      $0 
        pushl      $0 
        pushl      $3 
        pushw      $0 
        pushw      -144(%ebp) 
        pushl      $0 
        call       addELFsym__hla_3785
        addl       $1, numELFsyms__hla_3313 
        pushl      $0 
        pushl      $0 
        pushl      $0 
        pushl      $3 
        pushw      $0 
        pushw      -148(%ebp) 
        pushl      $0 
        call       addELFsym__hla_3785
        addl       $1, numELFsyms__hla_3313 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4184 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        mov        4(%eax), %ebx 
        movzbl     20(%ebx), %ecx 
        cmpl       $1, %ecx 
        jne        false__hla_4185
        mov        -140(%ebp), %ecx 
        jmp        endif__hla_4185
false__hla_4185:
        cmpl       $2, %ecx 
        jne        false__hla_4186
        mov        -144(%ebp), %ecx 
        jmp        endif__hla_4185
false__hla_4186:
        cmpl       $3, %ecx 
        jne        false__hla_4187
        mov        -148(%ebp), %ecx 
        jmp        endif__hla_4185
false__hla_4187:
        xorl       %ecx, %ecx 
endif__hla_4185:
        mov        12(%ebx), %edi 
        testb      $1, 21(%ebx) 
        jnz        false__hla_4188
        testb      $2, 21(%ebx) 
        jnz        false__hla_4189
        cmpb       $0, 22(%ebx) 
        je         false__hla_4190
        pushl      8(%edx) 
        pushl      %edi 
        pushl      16(%ebx) 
        pushl      $2 
        pushl      %ecx 
        pushl      $0 
        call       addELFsym__hla_3785
        jmp        endif__hla_4190
false__hla_4190:
        pushl      8(%edx) 
        pushl      %edi 
        pushl      $0 
        pushl      $0 
        pushl      %ecx 
        pushl      $0 
        call       addELFsym__hla_3785
endif__hla_4190:
        mov        numELFsyms__hla_3313, %eax 
        mov        %eax, 8(%ebx) 
        addl       $1, numELFsyms__hla_3313 
false__hla_4189:
false__hla_4188:
continue__hla_4184:
        popl       %ebp 
        ret        $4
exitfor__hla_4184:

        mov        numELFsyms__hla_3313, %eax 
        mov        %eax, symtabSection__hla_4166+28 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4191 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        mov        4(%eax), %ebx 
        movzbl     20(%ebx), %ecx 
        cmpl       $1, %ecx 
        jne        false__hla_4192
        mov        -140(%ebp), %ecx 
        jmp        endif__hla_4192
false__hla_4192:
        cmpl       $2, %ecx 
        jne        false__hla_4193
        mov        -144(%ebp), %ecx 
        jmp        endif__hla_4192
false__hla_4193:
        cmpl       $3, %ecx 
        jne        false__hla_4194
        mov        -148(%ebp), %ecx 
        jmp        endif__hla_4192
false__hla_4194:
        xorl       %ecx, %ecx 
endif__hla_4192:
        mov        12(%ebx), %edi 
        testb      $1, 21(%ebx) 
        jz         false__hla_4195
        cmpb       $0, 22(%ebx) 
        je         false__hla_4196
        mov        $18, %al 
        jmp        endif__hla_4196
false__hla_4196:
        mov        $16, %al 
endif__hla_4196:
        xorl       %ecx, %ecx 
        xorl       %edi, %edi 
        jmp        endif__hla_4195
false__hla_4195:
        testb      $2, 21(%ebx) 
        jz         false__hla_4197
        cmpb       $0, 22(%ebx) 
        je         false__hla_4198
        mov        $18, %al 
        jmp        endif__hla_4198
false__hla_4198:
        mov        $16, %al 
endif__hla_4198:
        jmp        endif__hla_4197
false__hla_4197:
        jmp        continue__hla_4191
endif__hla_4197:
endif__hla_4195:
        pushl      8(%edx) 
        pushl      %edi 
        pushl      16(%ebx) 
        pushl      %eax 
        pushl      %ecx 
        pushl      $0 
        call       addELFsym__hla_3785
        mov        numELFsyms__hla_3313, %eax 
        mov        %eax, 8(%ebx) 
        addl       $1, numELFsyms__hla_3313 
continue__hla_4191:
        popl       %ebp 
        ret        $4
exitfor__hla_4191:

        mov        codeSize, %eax 
        testl      %eax, %eax 
        je         false__hla_4199
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -84(%ebp) 
        imul       $8, numCodeRelocs, %eax 
        addl       $8, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -76(%ebp) 
        pushl      20(%ebp) 
        pushl      codeStart__hla_3321 
        pushl      -76(%ebp) 
        pushl      numCodeRelocs 
        pushl      -84(%ebp) 
        pushl      $1 
        pushl      8(%ebp) 
        call       buildRaw__hla_3811
false__hla_4199:
        mov        dataSize, %eax 
        testl      %eax, %eax 
        je         false__hla_4200
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -88(%ebp) 
        imul       $8, numDataRelocs, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -80(%ebp) 
        pushl      16(%ebp) 
        pushl      dataStart__hla_3323 
        pushl      -80(%ebp) 
        pushl      numDataRelocs 
        pushl      -88(%ebp) 
        pushl      $2 
        pushl      8(%ebp) 
        call       buildRaw__hla_3811
false__hla_4200:
        mov        $64, %eax 
        mov        %eax, -92(%ebp) 
        addl       -96(%ebp), %eax 
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, -100(%ebp) 
        addl       -104(%ebp), %eax 
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, -108(%ebp) 
        imul       $16, numELFsyms__hla_3313, %edx 
        addl       %edx, %eax 
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, -116(%ebp) 
        addl       strTblOffset__hla_3319, %eax 
        movl       %eax, %edx 
        addl       $15, %edx 
        andl       $-16, %edx 
        cmpl       $0, codeSize 
        je         false__hla_4201
        mov        %edx, -120(%ebp) 
        addl       codeSize, %edx 
        addl       $15, %edx 
        andl       $-16, %edx 
        jmp        endif__hla_4201
false__hla_4201:
        mov        -100(%ebp), %eax 
        mov        %eax, -120(%ebp) 
endif__hla_4201:
        cmpl       $0, dataSize 
        je         false__hla_4202
        mov        %edx, -128(%ebp) 
        addl       dataSize, %edx 
        addl       $15, %edx 
        andl       $-16, %edx 
        jmp        endif__hla_4202
false__hla_4202:
        mov        -100(%ebp), %eax 
        mov        %eax, -128(%ebp) 
endif__hla_4202:
        cmpl       $0, numCodeRelocs 
        je         false__hla_4203
        mov        %edx, -124(%ebp) 
        imul       $8, numCodeRelocs, %eax 
        addl       %eax, %edx 
        addl       $15, %edx 
        andl       $-16, %edx 
false__hla_4203:
        cmpl       $0, numDataRelocs 
        je         false__hla_4204
        mov        %edx, -132(%ebp) 
        imul       $8, numDataRelocs, %eax 
        addl       %eax, %edx 
false__hla_4204:
        mov        %edx, -16(%ebp) 
        pushl      %edx 
        call       MEM_ZALLOC
        mov        %eax, -12(%ebp) 
        pushl      -100(%ebp) 
        popl       -136(%ebp) 
        cld
        lea        -72(%ebp), %edi 
        mov        $52, %ecx 
        mov        $0, %al 
        rep stosb
        movw       $1, -56(%ebp) 
        movw       $3, -54(%ebp) 
        movl       $1, -52(%ebp) 
        movl       $0, -48(%ebp) 
        movl       $0, -44(%ebp) 
        mov        -92(%ebp), %eax 
        mov        %eax, -40(%ebp) 
        movl       $0, -36(%ebp) 
        movw       $52, -32(%ebp) 
        movw       $0, -30(%ebp) 
        movw       $0, -28(%ebp) 
        movw       $40, -26(%ebp) 
        mov        -4(%ebp), %eax 
        mov        %ax, -24(%ebp) 
        movw       $1, -22(%ebp) 
        lea        -72(%ebp), %ebx 
        movb       $127, (%ebx) 
        movb       $69, 1(%ebx) 
        movb       $76, 2(%ebx) 
        movb       $70, 3(%ebx) 
        movb       $1, 4(%ebx) 
        movb       $1, 5(%ebx) 
        movb       $1, 6(%ebx) 
        cmpb       $1, 8(%ebp) 
        jne        false__hla_4205
        movb       $0, 7(%ebx) 
        jmp        endif__hla_4205
false__hla_4205:
        cmpb       $2, 8(%ebp) 
        jne        false__hla_4206
        movb       $9, 7(%ebx) 
        jmp        endif__hla_4205
false__hla_4206:
        pushl      $str__hla_4207 
        call       STDERR_PUTS
        movb       $0, 7(%ebx) 
endif__hla_4205:
        mov        -100(%ebp), %eax 
        mov        %eax, shstrtabSection__hla_4165+16 
        mov        -104(%ebp), %eax 
        mov        %eax, shstrtabSection__hla_4165+20 
        mov        -108(%ebp), %eax 
        mov        %eax, symtabSection__hla_4166+16 
        imul       $16, numELFsyms__hla_3313, %eax 
        mov        %eax, symtabSection__hla_4166+20 
        mov        %eax, -112(%ebp) 
        mov        -116(%ebp), %eax 
        mov        %eax, strtabSection__hla_4167+16 
        mov        strTblOffset__hla_3319, %eax 
        mov        %eax, strtabSection__hla_4167+20 
        mov        -120(%ebp), %eax 
        mov        %eax, textSection__hla_4168+16 
        mov        codeSize, %eax 
        mov        %eax, textSection__hla_4168+20 
        mov        -128(%ebp), %eax 
        mov        %eax, dataSection__hla_4169+16 
        mov        dataSize, %eax 
        mov        %eax, dataSection__hla_4169+20 
        mov        bssSize, %eax 
        mov        %eax, bssSection__hla_4170+20 
        mov        -136(%ebp), %eax 
        mov        %eax, bssSection__hla_4170+16 
        cmpl       $0, numCodeRelocs 
        je         false__hla_4208
        mov        -124(%ebp), %eax 
        mov        %eax, relTextSection__hla_4171+16 
        imul       $8, numCodeRelocs, %eax 
        mov        %eax, relTextSection__hla_4171+20 
        mov        -140(%ebp), %eax 
        mov        %eax, relTextSection__hla_4171+28 
false__hla_4208:
        cmpl       $0, numDataRelocs 
        je         false__hla_4209
        mov        -132(%ebp), %eax 
        mov        %eax, relDataSection__hla_4172+16 
        imul       $8, numDataRelocs, %eax 
        mov        %eax, relDataSection__hla_4172+20 
        mov        -144(%ebp), %eax 
        mov        %eax, relDataSection__hla_4172+28 
false__hla_4209:
        cld
        mov        -12(%ebp), %edi 
        lea        -72(%ebp), %esi 
        mov        $52, %ecx 
        rep movsb
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        lea        NULLsection__hla_4164, %esi 
        mov        $40, %ecx 
        rep movsb
        lea        shstrtabSection__hla_4165, %esi 
        mov        $40, %ecx 
        rep movsb
        lea        symtabSection__hla_4166, %esi 
        mov        $40, %ecx 
        rep movsb
        lea        strtabSection__hla_4167, %esi 
        mov        $40, %ecx 
        rep movsb
        lea        textSection__hla_4168, %esi 
        mov        $40, %ecx 
        rep movsb
        lea        dataSection__hla_4169, %esi 
        mov        $40, %ecx 
        rep movsb
        lea        bssSection__hla_4170, %esi 
        mov        $40, %ecx 
        rep movsb
        cmpl       $0, numCodeRelocs 
        je         false__hla_4210
        lea        relTextSection__hla_4171, %esi 
        mov        $40, %ecx 
        rep movsb
false__hla_4210:
        cmpl       $0, numDataRelocs 
        je         false__hla_4211
        lea        relDataSection__hla_4172, %esi 
        mov        $40, %ecx 
        rep movsb
false__hla_4211:
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        -8(%ebp), %esi 
        mov        -104(%ebp), %ecx 
        cld
        rep movsb
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        ELFsyms__hla_3312, %esi 
        imul       $16, numELFsyms__hla_3313, %ecx 
        rep movsb
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        stringTable__hla_3318, %esi 
        mov        strTblOffset__hla_3319, %ecx 
        rep movsb
        cmpl       $0, codeSize 
        je         false__hla_4212
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        -84(%ebp), %esi 
        mov        codeSize, %ecx 
        rep movsb
false__hla_4212:
        cmpl       $0, dataSize 
        je         false__hla_4213
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        -88(%ebp), %esi 
        mov        dataSize, %ecx 
        rep movsb
false__hla_4213:
        cmpl       $0, numCodeRelocs 
        je         false__hla_4214
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        -76(%ebp), %esi 
        imul       $8, numCodeRelocs, %ecx 
        rep movsb
false__hla_4214:
        cmpl       $0, numDataRelocs 
        je         false__hla_4215
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        -80(%ebp), %esi 
        imul       $8, numDataRelocs, %ecx 
        rep movsb
false__hla_4215:
        pushl      24(%ebp) 
        call       FILEIO_OPENNEW
        mov        %eax, -20(%ebp) 
        pushl      -20(%ebp) 
        pushl      -12(%ebp) 
        pushl      -16(%ebp) 
        call       FILEIO_WRITE
        pushl      -20(%ebp) 
        call       FILEIO_CLOSE
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
        popl       %eax 
xgenerateELF__hla_4163__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $24
End_generateELF__hla_4163_4218:
  .size generateELF__hla_4163,End_generateELF__hla_4163_4218-generateELF__hla_4163



        .type      generateMacho__hla_4221,@function

generateMacho__hla_4221:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $440, %esp 
        pushl      %eax 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        cmpb       $0, verboseDebug__hla_3327 
        je         false__hla_4224
        pushl      $str__hla_4225 
        call       STDOUT_PUTS
        pushl      24(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4129 
        call       STDOUT_PUTS
        pushl      20(%ebp) 
        call       STDOUT_PUTS
        call       STDOUT_NEWLN
false__hla_4224:
        movl       $262144, strTblSize__hla_3320 
        pushl      $262144 
        call       MEM_ZALLOC
        mov        %eax, stringTable__hla_3318 
        movl       $1, strTblOffset__hla_3319 
        pushl      $786432 
        call       MEM_ZALLOC
        mov        %eax, MachoSyms__hla_3315 
        movl       %eax, %ebx 
        movl       $786432, MachoSymSize__hla_3316 
        movl       $0, numMachoSyms__hla_3317 
        movl       $0, -20(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4226 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        mov        4(%eax), %ebx 
        movzbl     20(%ebx), %ecx 
        cmpl       $1, %ecx 
        jne        false__hla_4227
        mov        $1, %ecx 
        jmp        endif__hla_4227
false__hla_4227:
        cmpl       $2, %ecx 
        jne        false__hla_4228
        mov        $2, %ecx 
        jmp        endif__hla_4227
false__hla_4228:
        cmpl       $3, %ecx 
        jne        false__hla_4229
        mov        $3, %ecx 
        jmp        endif__hla_4227
false__hla_4229:
        xorl       %ecx, %ecx 
endif__hla_4227:
        mov        12(%ebx), %edi 
        testb      $3, 21(%ebx) 
        jnz        false__hla_4230
        pushl      8(%edx) 
        pushl      %edi 
        pushl      $14 
        pushl      %ecx 
        call       addMachoSym__hla_3796
        addl       $1, -20(%ebp) 
        mov        numMachoSyms__hla_3317, %eax 
        mov        %eax, 8(%ebx) 
        addl       $1, %eax 
        mov        %eax, numMachoSyms__hla_3317 
false__hla_4230:
continue__hla_4226:
        popl       %ebp 
        ret        $4
exitfor__hla_4226:

        movl       $0, -24(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4231 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        mov        4(%eax), %ebx 
        movzbl     20(%ebx), %ecx 
        cmpl       $1, %ecx 
        jne        false__hla_4232
        mov        $1, %ecx 
        jmp        endif__hla_4232
false__hla_4232:
        cmpl       $2, %ecx 
        jne        false__hla_4233
        mov        $2, %ecx 
        jmp        endif__hla_4232
false__hla_4233:
        cmpl       $3, %ecx 
        jne        false__hla_4234
        mov        $3, %ecx 
        jmp        endif__hla_4232
false__hla_4234:
        xorl       %ecx, %ecx 
endif__hla_4232:
        mov        12(%ebx), %edi 
        testb      $2, 21(%ebx) 
        jz         false__hla_4235
        pushl      8(%edx) 
        pushl      %edi 
        pushl      $15 
        pushl      %ecx 
        call       addMachoSym__hla_3796
        addl       $1, -24(%ebp) 
        mov        numMachoSyms__hla_3317, %eax 
        mov        %eax, 8(%ebx) 
        addl       $1, %eax 
        mov        %eax, numMachoSyms__hla_3317 
false__hla_4235:
continue__hla_4231:
        popl       %ebp 
        ret        $4
exitfor__hla_4231:

        movl       $0, -28(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4236 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        mov        4(%eax), %ebx 
        movzbl     20(%ebx), %ecx 
        cmpl       $1, %ecx 
        jne        false__hla_4237
        mov        $1, %ecx 
        jmp        endif__hla_4237
false__hla_4237:
        cmpl       $2, %ecx 
        jne        false__hla_4238
        mov        $2, %ecx 
        jmp        endif__hla_4237
false__hla_4238:
        cmpl       $3, %ecx 
        jne        false__hla_4239
        mov        $3, %ecx 
        jmp        endif__hla_4237
false__hla_4239:
        xorl       %ecx, %ecx 
endif__hla_4237:
        mov        12(%ebx), %edi 
        testb      $1, 21(%ebx) 
        jz         false__hla_4240
        pushl      8(%edx) 
        pushl      %edi 
        pushl      $1 
        pushl      %ecx 
        call       addMachoSym__hla_3796
        addl       $1, -28(%ebp) 
        mov        numMachoSyms__hla_3317, %eax 
        mov        %eax, 8(%ebx) 
        addl       $1, %eax 
        mov        %eax, numMachoSyms__hla_3317 
false__hla_4240:
continue__hla_4236:
        popl       %ebp 
        ret        $4
exitfor__hla_4236:

        mov        codeSize, %eax 
        testl      %eax, %eax 
        je         false__hla_4241
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, codeSize 
        pushl      %eax 
        call       MEM_ZALLOC
        mov        %eax, -12(%ebp) 
        imul       $8, numCodeRelocs, %eax 
        addl       $8, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -4(%ebp) 
        pushl      16(%ebp) 
        pushl      codeStart__hla_3321 
        pushl      -4(%ebp) 
        pushl      numCodeRelocs 
        pushl      -12(%ebp) 
        pushl      $1 
        pushl      $3 
        call       buildRaw__hla_3811
false__hla_4241:
        mov        dataSize, %eax 
        testl      %eax, %eax 
        je         false__hla_4242
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, dataSize 
        pushl      %eax 
        call       MEM_ZALLOC
        mov        %eax, -16(%ebp) 
        imul       $8, numDataRelocs, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -8(%ebp) 
        pushl      12(%ebp) 
        pushl      dataStart__hla_3323 
        pushl      -8(%ebp) 
        pushl      numDataRelocs 
        pushl      -16(%ebp) 
        pushl      $2 
        pushl      $3 
        call       buildRaw__hla_3811
false__hla_4242:
        addl       $15, bssSize 
        andl       $-16, bssSize 
        movl       $-17958194, -440(%ebp) 
        movl       $7, -436(%ebp) 
        movl       $3, -432(%ebp) 
        movl       $1, -428(%ebp) 
        movl       $3, -424(%ebp) 
        movl       $364, -420(%ebp) 
        movl       $0, -416(%ebp) 
        movl       $1, -412(%ebp) 
        movl       $260, -408(%ebp) 
        movl       $0, -404(%ebp) 
        movl       $0, -400(%ebp) 
        movl       $0, -396(%ebp) 
        movl       $0, -392(%ebp) 
        movl       $0, -388(%ebp) 
        mov        codeSize, %eax 
        addl       dataSize, %eax 
        mov        %eax, -376(%ebp) 
        addl       bssSize, %eax 
        mov        %eax, -384(%ebp) 
        movl       $392, -380(%ebp) 
        movl       $7, -372(%ebp) 
        movl       $7, -368(%ebp) 
        movl       $3, -364(%ebp) 
        movl       $0, -360(%ebp) 
        movl       $1702125407, -356(%ebp) 
        movl       $29816, -352(%ebp) 
        movl       $0, -348(%ebp) 
        movl       $0, -344(%ebp) 
        movl       $1163157343, -340(%ebp) 
        movl       $21592, -336(%ebp) 
        movl       $0, -332(%ebp) 
        movl       $0, -328(%ebp) 
        movl       $0, -324(%ebp) 
        mov        codeSize, %eax 
        mov        %eax, -320(%ebp) 
        movl       $392, -316(%ebp) 
        movl       $4, -312(%ebp) 
        mov        codeSize, %eax 
        addl       dataSize, %eax 
        addl       $392, %eax 
        mov        %eax, -308(%ebp) 
        mov        numCodeRelocs, %eax 
        mov        %eax, -304(%ebp) 
        movl       $1024, -300(%ebp) 
        movl       $0, -296(%ebp) 
        movl       $0, -292(%ebp) 
        movl       $1633967967, -288(%ebp) 
        movl       $24948, -284(%ebp) 
        movl       $0, -280(%ebp) 
        movl       $0, -276(%ebp) 
        movl       $1094999903, -272(%ebp) 
        movl       $16724, -268(%ebp) 
        movl       $0, -264(%ebp) 
        movl       $0, -260(%ebp) 
        mov        dataStart__hla_3323, %eax 
        mov        %eax, -256(%ebp) 
        mov        dataSize, %eax 
        mov        %eax, -252(%ebp) 
        mov        -316(%ebp), %eax 
        addl       codeSize, %eax 
        mov        %eax, -248(%ebp) 
        movl       $4, -244(%ebp) 
        imul       $8, numCodeRelocs, %eax 
        addl       -308(%ebp), %eax 
        mov        %eax, -240(%ebp) 
        mov        numDataRelocs, %eax 
        mov        %eax, -236(%ebp) 
        movl       $0, -232(%ebp) 
        movl       $0, -228(%ebp) 
        movl       $0, -224(%ebp) 
        movl       $1935826783, -220(%ebp) 
        movl       $115, -216(%ebp) 
        movl       $0, -212(%ebp) 
        movl       $0, -208(%ebp) 
        movl       $1094999903, -204(%ebp) 
        movl       $16724, -200(%ebp) 
        movl       $0, -196(%ebp) 
        movl       $0, -192(%ebp) 
        mov        bssStart__hla_3325, %eax 
        mov        %eax, -188(%ebp) 
        mov        bssSize, %eax 
        mov        %eax, -184(%ebp) 
        movl       $0, -180(%ebp) 
        movl       $4, -176(%ebp) 
        movl       $0, -172(%ebp) 
        movl       $0, -168(%ebp) 
        movl       $1, -164(%ebp) 
        movl       $0, -160(%ebp) 
        movl       $0, -156(%ebp) 
        movl       $2, -152(%ebp) 
        movl       $24, -148(%ebp) 
        movl       $0, -144(%ebp) 
        mov        numMachoSyms__hla_3317, %eax 
        mov        %eax, -140(%ebp) 
        movl       $0, -136(%ebp) 
        mov        strTblOffset__hla_3319, %eax 
        mov        %eax, -132(%ebp) 
        movl       $11, -128(%ebp) 
        movl       $80, -124(%ebp) 
        mov        -20(%ebp), %eax 
        movl       $0, -120(%ebp) 
        mov        %eax, -116(%ebp) 
        cmpl       $0, -24(%ebp) 
        je         false__hla_4257
        mov        -20(%ebp), %eax 
        mov        %eax, -112(%ebp) 
        jmp        endif__hla_4257
false__hla_4257:
        movl       $0, -112(%ebp) 
endif__hla_4257:
        mov        -24(%ebp), %eax 
        mov        %eax, -108(%ebp) 
        cmpl       $0, -28(%ebp) 
        je         false__hla_4258
        mov        -20(%ebp), %eax 
        addl       -24(%ebp), %eax 
        mov        %eax, -104(%ebp) 
        jmp        endif__hla_4258
false__hla_4258:
        movl       $0, -104(%ebp) 
endif__hla_4258:
        mov        -28(%ebp), %eax 
        mov        %eax, -100(%ebp) 
        xorl       %eax, %eax 
        mov        %eax, -96(%ebp) 
        mov        %eax, -92(%ebp) 
        mov        %eax, -88(%ebp) 
        mov        %eax, -84(%ebp) 
        mov        %eax, -80(%ebp) 
        mov        %eax, -76(%ebp) 
        mov        %eax, -72(%ebp) 
        mov        %eax, -68(%ebp) 
        mov        %eax, -64(%ebp) 
        mov        %eax, -60(%ebp) 
        mov        %eax, -56(%ebp) 
        mov        %eax, -52(%ebp) 
        mov        $392, %eax 
        addl       codeSize, %eax 
        addl       dataSize, %eax 
        imul       $8, numCodeRelocs, %edx 
        addl       %edx, %eax 
        imul       $8, numDataRelocs, %edx 
        addl       %edx, %eax 
        mov        %eax, -144(%ebp) 
        imul       $12, numMachoSyms__hla_3317, %edx 
        addl       %edx, %eax 
        mov        %eax, -136(%ebp) 
        addl       strTblOffset__hla_3319, %eax 
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, -36(%ebp) 
        pushl      %eax 
        call       MEM_ZALLOC
        mov        %eax, -32(%ebp) 
        cld
        movl       %eax, %edi 
        lea        -440(%ebp), %esi 
        mov        $392, %ecx 
        rep movsb
        mov        -12(%ebp), %esi 
        mov        codeSize, %ecx 
        rep movsb
        mov        -16(%ebp), %esi 
        mov        dataSize, %ecx 
        rep movsb
        mov        -4(%ebp), %esi 
        imul       $8, numCodeRelocs, %ecx 
        rep movsb
        mov        -8(%ebp), %esi 
        imul       $8, numDataRelocs, %ecx 
        rep movsb
        mov        MachoSyms__hla_3315, %esi 
        imul       $12, numMachoSyms__hla_3317, %ecx 
        rep movsb
        mov        stringTable__hla_3318, %esi 
        mov        strTblOffset__hla_3319, %ecx 
        rep movsb
        pushl      20(%ebp) 
        call       FILEIO_OPENNEW
        mov        %eax, -44(%ebp) 
        pushl      -44(%ebp) 
        pushl      -32(%ebp) 
        pushl      -36(%ebp) 
        call       FILEIO_WRITE
        pushl      -44(%ebp) 
        call       FILEIO_CLOSE
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
        popl       %eax 
xgenerateMacho__hla_4221__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $20
End_generateMacho__hla_4221_4261:
  .size generateMacho__hla_4221,End_generateMacho__hla_4221_4261-generateMacho__hla_4221



        .type      compileCOFF,@function

compileCOFF:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $36, %esp 
        pushl      %ebx 
        mov        16(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -4(%ebp) 
        mov        12(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -8(%ebp) 
        mov        8(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -12(%ebp) 
        pushl      28(%ebp) 
        pushl      24(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       lexer
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        pushl      -12(%ebp) 
        pushl      20(%ebp) 
        pushl      $0 
        call       optimizeDisps
        pushl      36(%ebp) 
        pushl      32(%ebp) 
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        pushl      -12(%ebp) 
        call       generateCOFF__hla_4089
        mov        16(%ebp), %ebx 
        mov        -4(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        12(%ebp), %ebx 
        mov        -8(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        8(%ebp), %ebx 
        mov        -12(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        $1, %eax 
xcompileCOFF__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $32
End_compileCOFF_4268:
  .size compileCOFF,End_compileCOFF_4268-compileCOFF



        .type      compileELF,@function

compileELF:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $36, %esp 
        pushl      %ebx 
        mov        16(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -4(%ebp) 
        mov        12(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -8(%ebp) 
        mov        8(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -12(%ebp) 
        pushl      32(%ebp) 
        pushl      28(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       lexer
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        pushl      -12(%ebp) 
        pushl      20(%ebp) 
        pushl      24(%ebp) 
        call       optimizeDisps
        pushl      40(%ebp) 
        pushl      36(%ebp) 
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        pushl      -12(%ebp) 
        pushl      24(%ebp) 
        call       generateELF__hla_4163
        mov        16(%ebp), %ebx 
        mov        -4(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        12(%ebp), %ebx 
        mov        -8(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        8(%ebp), %ebx 
        mov        -12(%ebp), %eax 
        mov        %eax, (%ebx) 
        xorl       %eax, %eax 
xcompileELF__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $36
End_compileELF_4273:
  .size compileELF,End_compileELF_4273-compileELF



        .type      compileMACHO,@function

compileMACHO:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $36, %esp 
        pushl      %ebx 
        mov        16(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -4(%ebp) 
        mov        12(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -8(%ebp) 
        mov        8(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -12(%ebp) 
        pushl      28(%ebp) 
        pushl      24(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       lexer
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        pushl      -12(%ebp) 
        pushl      20(%ebp) 
        pushl      $3 
        call       optimizeDisps
        pushl      36(%ebp) 
        pushl      32(%ebp) 
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        pushl      -12(%ebp) 
        call       generateMacho__hla_4221
        mov        16(%ebp), %ebx 
        mov        -4(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        12(%ebp), %ebx 
        mov        -8(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        8(%ebp), %ebx 
        mov        -12(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        $1, %eax 
xcompileMACHO__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $32
End_compileMACHO_4280:
  .size compileMACHO,End_compileMACHO_4280-compileMACHO



        .type      compile__hla_4281,@function

compile__hla_4281:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $28, %esp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        mov        %esp, saveESP__hla_3341 
        mov        ExceptionPtr__hla_, %eax 
        mov        %eax, SaveSEHPointer__hla_3340 
        call       BuildExcepts__hla_
        pushl      %ebp 
        addl       $-28, (%esp) 
        call       CONV_GETDELIMITERS
        pushl      $0 
        pushl      $0 
        pushl      $11008 
        pushl      $0 
        pushl      %ebp 
        addl       $-28, (%esp) 
        call       CSET_SETUNION
        pushl      -16(%ebp) 
        pushl      -20(%ebp) 
        pushl      -24(%ebp) 
        pushl      -28(%ebp) 
        call       CONV_SETDELIMITERS
        cmpb       $0, 8(%ebp) 
        je         false__hla_4284
        pushl      $str__hla_4285 
        call       STDOUT_PUTS
        pushl      40(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4286 
        call       STDOUT_PUTS
        pushl      36(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4287 
        call       STDOUT_PUTS
false__hla_4284:
        pushl      $exception__hla_4289 
        pushl      %ebp 
        mov        ExceptionPtr__hla_, %ebp 
        pushl      8(%ebp) 
        mov        4(%esp), %ebp 
        pushl      $244115826 
        pushl      ExceptionPtr__hla_ 
        mov        %esp, ExceptionPtr__hla_ 
        pushl      $65536 
        movl       $symbolTable, %esi 
        call       TABLE_CREATE
        pushl      $8192 
        movl       $equatesTable, %esi 
        call       TABLE_CREATE
        movzbl     24(%ebp), %eax 
        cmpl       $3, %eax 
        jg         default__hla_4290
        jmp *      jmpTbl__hla_4290(,%eax,4) 
case__hla_4291:
        pushl      40(%ebp) 
        pushl      36(%ebp) 
        pushl      32(%ebp) 
        pushl      28(%ebp) 
        pushl      8(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       compileCOFF
        jmp        endswitch__hla_4290
case__hla_4292:
        pushl      40(%ebp) 
        pushl      36(%ebp) 
        pushl      32(%ebp) 
        pushl      28(%ebp) 
        pushl      $1 
        pushl      8(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       compileELF
        jmp        endswitch__hla_4290
case__hla_4293:
        pushl      40(%ebp) 
        pushl      36(%ebp) 
        pushl      32(%ebp) 
        pushl      28(%ebp) 
        pushl      $2 
        pushl      8(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       compileELF
        jmp        endswitch__hla_4290
case__hla_4294:
        pushl      40(%ebp) 
        pushl      36(%ebp) 
        pushl      32(%ebp) 
        pushl      28(%ebp) 
        pushl      8(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       compileMACHO
        jmp        endswitch__hla_4290
default__hla_4290:
        pushl      $str__hla_4295 
        call       STDERR_PUTS
        mov        $1, %eax 
endswitch__hla_4290:
        mov        ExceptionPtr__hla_, %esp 
        popl       ExceptionPtr__hla_ 
        addl       $8, %esp 
        popl       %ebp 
        addl       $4, %esp 
        jmp        endtry__hla_4288
exception__hla_4289:
        call       EX_PRINTEXCEPTIONERROR
        mov        $0, %eax 
endtry__hla_4288:
        cmpb       $0, verboseDebug__hla_3327 
        je         false__hla_4296
        call       STDOUT_NEWLN
        pushl      $str__hla_4297 
        call       STDOUT_PUTS
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4298 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        pushl      8(%edx) 
        pushl      $-24 
        pushl      $32 
        call       STDOUT_PUTSSIZE
        pushl      $str__hla_4109 
        call       STDOUT_PUTS
        mov        4(%edx), %edx 
        mov        21(%edx), %ah 
        testb      $1, %ah 
        mov        $32, %al 
        jz         false__hla_4299
        mov        $88, %al 
false__hla_4299:
        pushl      %eax 
        call       STDOUT_PUTC
        testb      $2, %ah 
        mov        $32, %al 
        jz         false__hla_4300
        mov        $80, %al 
false__hla_4300:
        pushl      %eax 
        call       STDOUT_PUTC
        testb      $4, %ah 
        mov        $32, %al 
        jz         false__hla_4301
        mov        $82, %al 
false__hla_4301:
        pushl      %eax 
        call       STDOUT_PUTC
        testb      $8, %ah 
        mov        $32, %al 
        jz         false__hla_4302
        mov        $68, %al 
false__hla_4302:
        pushl      %eax 
        call       STDOUT_PUTC
        pushl      $str__hla_4303 
        call       STDOUT_PUTS
        pushl      12(%edx) 
        call       STDOUT_PUTD
        pushl      $str__hla_4304 
        call       STDOUT_PUTS
        pushl      $0 
        pushl      %eax 
        mov        20(%edx), %al 
        mov        %al, 4(%esp) 
        popl       %eax 
        call       STDOUT_PUTU8
        pushl      $str__hla_4305 
        call       STDOUT_PUTS
        pushl      $0 
        pushl      %eax 
        mov        8(%edx), %al 
        mov        %al, 4(%esp) 
        popl       %eax 
        call       STDOUT_PUTU8
        call       STDOUT_NEWLN
continue__hla_4298:
        popl       %ebp 
        ret        $4
exitfor__hla_4298:

        call       STDOUT_NEWLN
false__hla_4296:
        jmp        Exit_compile_hlabe__hla_4306

QuitMain__hla_:
        mov        $1, %eax 

Exit_compile_hlabe__hla_4306:
        mov        saveESP__hla_3341, %esp 
        pushl      %eax 
        mov        SaveSEHPointer__hla_3340, %eax 
        mov        %eax, ExceptionPtr__hla_ 
        mov        20(%ebp), %ecx 
        mov        -4(%ebp), %edx 
        mov        %edx, (%ecx) 
        mov        16(%ebp), %ecx 
        mov        -8(%ebp), %edx 
        mov        %edx, (%ecx) 
        mov        12(%ebp), %ecx 
        mov        -12(%ebp), %edx 
        mov        %edx, (%ecx) 
        popl       %eax 
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
xcompile__hla_4281__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $36
End_compile__hla_4281_4309:
  .size compile__hla_4281,End_compile__hla_4281_4309-compile__hla_4281



        .type      _hlabe_compile,@function

_hlabe_compile:
End__hlabe_compile_4310:
  .size _hlabe_compile,End__hlabe_compile_4310-_hlabe_compile



        .type      hlabe_compile,@function

hlabe_compile:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $2088, %esp 
        mov        %ebx, -4(%ebp) 
        mov        %ecx, -8(%ebp) 
        mov        %edx, -12(%ebp) 
        mov        %esi, -16(%ebp) 
        mov        %edi, -20(%ebp) 
        pushl      %ebp 
        addl       $-1064, (%esp) 
        pushl      $1024 
        call       STR_INIT
        mov        %eax, -24(%ebp) 
        pushl      %ebp 
        addl       $-2088, (%esp) 
        pushl      $1024 
        call       STR_INIT
        mov        %eax, -28(%ebp) 
        pushl      8(%ebp) 
        pushl      -24(%ebp) 
        call       STR_CPYZ
        pushl      12(%ebp) 
        pushl      -28(%ebp) 
        call       STR_CPYZ
        pushl      -24(%ebp) 
        pushl      -28(%ebp) 
        pushl      16(%ebp) 
        pushl      20(%ebp) 
        pushl      24(%ebp) 
        pushl      %ebp 
        addl       $-32, (%esp) 
        pushl      %ebp 
        addl       $-36, (%esp) 
        pushl      %ebp 
        addl       $-40, (%esp) 
        pushl      28(%ebp) 
        call       compile__hla_4281
        mov        -4(%ebp), %ebx 
        mov        -8(%ebp), %ecx 
        mov        -12(%ebp), %edx 
        mov        -16(%ebp), %esi 
        mov        -20(%ebp), %edi 
xhlabe_compile__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
End_hlabe_compile_4315:
  .size hlabe_compile,End_hlabe_compile_4315-hlabe_compile









  .text


        .balign    (4)
len__hla_3353 :.long      0x2
        .long      0x2
str__hla_3353:

 .ascii ", "
 .byte 0

 .byte 0

        .balign    (4)
len__hla_3395 :.long      0x2e
        .long      0x2e
str__hla_3395:

 .ascii "Attempted to scan beyond the end of the file"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0

        .balign    (4)
len__hla_3419 :.long      0x13
        .long      0x13
str__hla_3419:

 .ascii "Unknown statement: "
 .byte 0


        .balign    (4)
len__hla_3441 :.long      0x23
        .long      0x23
str__hla_3441:

 .ascii "Expected ')' in expression at line "
 .byte 0


        .balign    (4)
len__hla_3442 :.long      0x25
        .long      0x25
str__hla_3442:

 .ascii "Unexpected character in expression: '"
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_3443 :.long      0xa
        .long      0xa
str__hla_3443:

 .ascii "' at line "
 .byte 0

 .byte 0
jmpTbl__hla_3434:
        .long      (case__hla_3435+0)
        .long      (default__hla_3434+0)
        .long      (default__hla_3434+0)
        .long      (default__hla_3434+0)
        .long      (case__hla_3439+0)
        .long      (default__hla_3434+0)
        .long      (default__hla_3434+0)
        .long      (default__hla_3434+0)
        .long      (default__hla_3434+0)
        .long      (default__hla_3434+0)
        .long      (default__hla_3434+0)
        .long      (default__hla_3434+0)
        .long      (case__hla_3436+0)
        .long      (case__hla_3436+0)
        .long      (case__hla_3436+0)
        .long      (case__hla_3436+0)
        .long      (case__hla_3436+0)
        .long      (case__hla_3436+0)
        .long      (case__hla_3436+0)
        .long      (case__hla_3436+0)
        .long      (case__hla_3436+0)
        .long      (case__hla_3436+0)
        .long      (default__hla_3434+0)
        .long      (default__hla_3434+0)
        .long      (default__hla_3434+0)
        .long      (default__hla_3434+0)
        .long      (default__hla_3434+0)
        .long      (default__hla_3434+0)
        .long      (default__hla_3434+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (default__hla_3434+0)
        .long      (default__hla_3434+0)
        .long      (default__hla_3434+0)
        .long      (default__hla_3434+0)
        .long      (case__hla_3437+0)
        .long      (default__hla_3434+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)
        .long      (case__hla_3437+0)

        .balign    (4)
len__hla_3454 :.long      0x23
        .long      0x23
str__hla_3454:

 .ascii "Illegal relocatable object at line "
 .byte 0


        .balign    (4)
len__hla_3466 :.long      0x34
        .long      0x34
str__hla_3466:

 .ascii "Expression cannot contain relocatable items at line "
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_3480 :.long      0x19
        .long      0x19
str__hla_3480:

 .ascii ".b operand out of range"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_3491 :.long      0x19
        .long      0x19
str__hla_3491:

 .ascii ".w operand out of range"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_3533 :.long      0x1a
        .long      0x1a
str__hla_3533:

 .ascii "TByte value out of range"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0

        .balign    (4)
len__hla_3586 :.long      0x1a
        .long      0x1a
str__hla_3586:

 .ascii "Filename too long at line "
 .byte 0

 .byte 0

        .balign    (4)
len__hla_3622 :.long      0x1c
        .long      0x1c
str__hla_3622:

 .ascii "ecx <> NULL hlabe.hla (1977)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_3631 :.long      0x1c
        .long      0x1c
str__hla_3631:

 .ascii "ecx <> NULL hlabe.hla (2044)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_3637 :.long      0x15
        .long      0x15
str__hla_3637:

 .ascii "Syntax error at line "
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_3638 :.long      0x13
        .long      0x13
str__hla_3638:

 .ascii ", expected at ','"
 .byte 0xd
 .byte 0xa
 .byte 0


        .balign    (4)
len__hla_3639 :.long      0x2e
        .long      0x2e
str__hla_3639:

 .ascii "Equate attempted to redefine a symbol at line "
 .byte 0

 .byte 0

        .balign    (4)
len__hla_3642 :.long      0x2f
        .long      0x2f
str__hla_3642:

 .ascii "End Function symbol must be predefined at line "
 .byte 0


        .balign    (4)
len__hla_3647 :.long      0x1c
        .long      0x1c
str__hla_3647:

 .ascii "ecx <> NULL hlabe.hla (2168)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_3653 :.long      0x2c
        .long      0x2c
str__hla_3653:

 .ascii "Public symbol cannot also be extern at line "
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_3658 :.long      0x1c
        .long      0x1c
str__hla_3658:

 .ascii "ecx <> NULL hlabe.hla (2259)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_3667 :.long      0x1c
        .long      0x1c
str__hla_3667:

 .ascii "ecx <> NULL hlabe.hla (2351)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_3673 :.long      0x2a
        .long      0x2a
str__hla_3673:

 .ascii ".ub expected a ',' -- Syntax error at line"
 .byte 0

 .byte 0

        .balign    (4)
len__hla_3676 :.long      0x2b
        .long      0x2b
str__hla_3676:

 .ascii ".uw expected a ',' -- Syntax error at line "
 .byte 0


        .balign    (4)
len__hla_3679 :.long      0x2b
        .long      0x2b
str__hla_3679:

 .ascii ".ud expected a ',' -- Syntax error at line "
 .byte 0


        .balign    (4)
len__hla_3685 :.long      0x1c
        .long      0x1c
str__hla_3685:

 .ascii "ecx <> NULL hlabe.hla (2542)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_3691 :.long      0x11
        .long      0x11
str__hla_3691:

 .ascii "External symbol '"
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_3692 :.long      0x32
        .long      0x32
str__hla_3692:

 .ascii "' is already defined. Error in HLABE code at line "
 .byte 0

 .byte 0
jmpTbl__hla_3616:
        .long      (case__hla_3617+0)
        .long      (case__hla_3618+0)
        .long      (case__hla_3625+0)
        .long      (case__hla_3626+0)
        .long      (case__hla_3634+0)
        .long      (case__hla_3640+0)
        .long      (default__hla_3616+0)
        .long      (default__hla_3616+0)
        .long      (default__hla_3616+0)
        .long      (default__hla_3616+0)
        .long      (default__hla_3616+0)
        .long      (case__hla_3643+0)
        .long      (default__hla_3616+0)
        .long      (default__hla_3616+0)
        .long      (default__hla_3616+0)
        .long      (case__hla_3650+0)
        .long      (case__hla_3654+0)
        .long      (case__hla_3661+0)
        .long      (case__hla_3662+0)
        .long      (case__hla_3663+0)
        .long      (case__hla_3670+0)
        .long      (case__hla_3680+0)
        .long      (case__hla_3681+0)
        .long      (case__hla_3688+0)
        .long      (case__hla_3625+0)
        .long      (case__hla_3694+0)

        .balign    (4)
len__hla_3698 :.long      0x7
        .long      0x7
str__hla_3698:

 .ascii "Symbol "
 .byte 0


        .balign    (4)
len__hla_3699 :.long      0x23
        .long      0x23
str__hla_3699:

 .ascii " is already defined. Error at line "
 .byte 0


        .balign    (4)
len__hla_3803 :.long      0x1c
        .long      0x1c
str__hla_3803:

 .ascii "esi <> NULL hlabe.hla (3528)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_3833 :.long      0x40
        .long      0x40
str__hla_3833:

 .ascii "Error: Unexpected bss directive encountered in non-bss section"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_3838 :.long      0x42
        .long      0x42
str__hla_3838:

 .ascii "Error: Unexpected code directive encountered in non-code section"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0

        .balign    (4)
len__hla_3841 :.long      0x42
        .long      0x42
str__hla_3841:

 .ascii "Error: Unexpected data directive encountered in non-data section"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0

        .balign    (4)
len__hla_3857 :.long      0x23
        .long      0x23
str__hla_3857:

 .ascii "Object code type is not supported"
 .byte 0xd
 .byte 0xa
 .byte 0


        .balign    (4)
len__hla_3894 :.long      0x23
        .long      0x23
str__hla_3894:

 .ascii "HLABE Internal error (Bad section):"
 .byte 0


        .balign    (4)
len__hla_3897 :.long      0x24
        .long      0x24
str__hla_3897:

 .ascii "Internal error: illegal token value:"
 .byte 0

 .byte 0
 .byte 0
 .byte 0
jmpTbl__hla_3818:
        .long      (case__hla_3819+0)
        .long      (case__hla_3820+0)
        .long      (case__hla_3834+0)
        .long      (case__hla_3819+0)
        .long      (case__hla_3819+0)
        .long      (case__hla_3882+0)
        .long      (case__hla_3895+0)
        .long      (case__hla_3842+0)
        .long      (case__hla_3842+0)
        .long      (case__hla_3842+0)
        .long      (case__hla_3836+0)
        .long      (default__hla_3818+0)
        .long      (case__hla_3839+0)
        .long      (case__hla_3831+0)
        .long      (case__hla_3846+0)
        .long      (case__hla_3847+0)
        .long      (case__hla_3848+0)
        .long      (case__hla_3871+0)
        .long      (case__hla_3858+0)
        .long      (case__hla_3819+0)
        .long      (case__hla_3819+0)
        .long      (case__hla_3819+0)

        .balign    (4)
len__hla_3927 :.long      0x31
        .long      0x31
str__hla_3927:

 .ascii "Instruction cannot reference an external symbol ("
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_3928 :.long      0x3
        .long      0x3
str__hla_3928:

 .ascii ")"
 .byte 0xd
 .byte 0xa
 .byte 0

jmpTbl__hla_3913:
        .long      (case__hla_3914+0)
        .long      (case__hla_3918+0)
        .long      (case__hla_3919+0)
        .long      (case__hla_3920+0)
        .long      (case__hla_3914+0)
        .long      (case__hla_3934+0)
        .long      (case__hla_3921+0)
        .long      (case__hla_3922+0)
        .long      (case__hla_3922+0)
        .long      (case__hla_3922+0)
        .long      (case__hla_3915+0)
        .long      (default__hla_3913+0)
        .long      (case__hla_3916+0)
        .long      (case__hla_3917+0)
        .long      (case__hla_3923+0)
        .long      (case__hla_3932+0)
        .long      (case__hla_3929+0)
        .long      (case__hla_3933+0)
        .long      (case__hla_3931+0)
        .long      (case__hla_3914+0)
        .long      (case__hla_3914+0)
        .long      (case__hla_3914+0)

        .balign    (4)
len__hla_3954 :.long      0x11
        .long      0x11
str__hla_3954:

 .ascii "Undefined symbol:"
 .byte 0

 .byte 0
 .byte 0
jmpTbl__hla_3970:
        .long      (case__hla_3971+0)
        .long      (case__hla_3977+0)
        .long      (case__hla_3979+0)
        .long      (case__hla_3971+0)
        .long      (case__hla_3971+0)
        .long      (case__hla_3992+0)
        .long      (case__hla_3980+0)
        .long      (case__hla_3981+0)
        .long      (case__hla_3981+0)
        .long      (case__hla_3981+0)
        .long      (case__hla_3972+0)
        .long      (default__hla_3970+0)
        .long      (case__hla_3973+0)
        .long      (case__hla_3974+0)
        .long      (case__hla_3982+0)
        .long      (case__hla_3990+0)
        .long      (case__hla_3983+0)
        .long      (case__hla_3991+0)
        .long      (case__hla_3987+0)
        .long      (case__hla_3971+0)
        .long      (case__hla_3971+0)
        .long      (case__hla_3975+0)

        .balign    (4)
len__hla_4024 :.long      0x8
        .long      0x8
str__hla_4024:

 .ascii "Symbol '"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4025 :.long      0x10
        .long      0x10
str__hla_4025:

 .ascii "' is undefined"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4029 :.long      0x2f
        .long      0x2f
str__hla_4029:

 .ascii "Branch target is out of range. "
 .byte 0xd
 .byte 0xa

 .ascii "(displacement="
 .byte 0


        .balign    (4)
len__hla_4030 :.long      0x28
        .long      0x28
str__hla_4030:

 .ascii " and must be in the range -128..+127)."
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0
jmpTbl__hla_4019:
        .long      (case__hla_4020+0)
        .long      (case__hla_4020+0)
        .long      (case__hla_4020+0)
        .long      (case__hla_4022+0)
        .long      (case__hla_4021+0)
        .long      (case__hla_4054+0)
        .long      (case__hla_4020+0)
        .long      (case__hla_4020+0)
        .long      (case__hla_4020+0)
        .long      (case__hla_4020+0)
        .long      (case__hla_4020+0)
        .long      (default__hla_4019+0)
        .long      (case__hla_4020+0)
        .long      (case__hla_4020+0)
        .long      (case__hla_4026+0)
        .long      (case__hla_4031+0)
        .long      (case__hla_4034+0)
        .long      (case__hla_4047+0)
        .long      (case__hla_4039+0)
        .long      (case__hla_4020+0)
        .long      (case__hla_4020+0)
        .long      (case__hla_4020+0)

        .balign    (4)
len__hla_4061 :.long      0x2d
        .long      0x2d
str__hla_4061:

 .ascii "Internal error (relocations in BSS section)"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_4066 :.long      0x1c
        .long      0x1c
str__hla_4066:

 .ascii "ebx <> NULL hlabe.hla (5565)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4069 :.long      0x12
        .long      0x12
str__hla_4069:

 .ascii "Undefined symbol: "
 .byte 0

 .byte 0

        .balign    (4)
len__hla_4076 :.long      0x10
        .long      0x10
str__hla_4076:

 .ascii "optimizeDisps:"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4078 :.long      0x5e
        .long      0x5e
str__hla_4078:

 .ascii "Could not optimize (small->large) in 16,384 passes."
 .byte 0xd
 .byte 0xa

 .ascii "Reverting to large->small optimization."
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0

        .balign    (4)
len__hla_4080 :.long      0x15
        .long      0x15
str__hla_4080:

 .ascii "Optimization passes: "
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_4081 :.long      0x8
        .long      0x8
str__hla_4081:

 .ascii "+16386"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4083 :.long      0x4
        .long      0x4
str__hla_4083:

 .ascii "+2"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4107 :.long      0x4
        .long      0x4
str__hla_4107:
 .byte 0xd
 .byte 0xa
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4109 :.long      0x2
        .long      0x2
str__hla_4109:

 .ascii ": "
 .byte 0

 .byte 0

        .balign    (4)
len__hla_4110 :.long      0x3
        .long      0x3
str__hla_4110:

 .ascii ", '"
 .byte 0


        .balign    (4)
len__hla_4111 :.long      0x3
        .long      0x3
str__hla_4111:

 .ascii "', "
 .byte 0


        .balign    (4)
len__hla_4114 :.long      0x17
        .long      0x17
str__hla_4114:

 .ascii "IMAGE_REL_I386_ABSOLUTE"
 .byte 0


        .balign    (4)
len__hla_4116 :.long      0x14
        .long      0x14
str__hla_4116:

 .ascii "IMAGE_REL_I386_DIR32"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4118 :.long      0x16
        .long      0x16
str__hla_4118:

 .ascii "IMAGE_REL_I386_DIR32NB"
 .byte 0

 .byte 0

        .balign    (4)
len__hla_4120 :.long      0x14
        .long      0x14
str__hla_4120:

 .ascii "IMAGE_REL_I386_REL32"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4121 :.long      0x18
        .long      0x18
str__hla_4121:

 .ascii "???? relocation type = $"
 .byte 0

 .byte 0
 .byte 0
 .byte 0
jmpTbl__hla_4112:
        .long      (case__hla_4113+0)
        .long      (default__hla_4112+0)
        .long      (default__hla_4112+0)
        .long      (default__hla_4112+0)
        .long      (default__hla_4112+0)
        .long      (default__hla_4112+0)
        .long      (case__hla_4115+0)
        .long      (case__hla_4117+0)
        .long      (default__hla_4112+0)
        .long      (default__hla_4112+0)
        .long      (default__hla_4112+0)
        .long      (default__hla_4112+0)
        .long      (default__hla_4112+0)
        .long      (default__hla_4112+0)
        .long      (default__hla_4112+0)
        .long      (default__hla_4112+0)
        .long      (default__hla_4112+0)
        .long      (default__hla_4112+0)
        .long      (default__hla_4112+0)
        .long      (default__hla_4112+0)
        .long      (case__hla_4119+0)

        .balign    (4)
len__hla_4128 :.long      0x20
        .long      0x20
str__hla_4128:

 .ascii "generateCOFF:"
 .byte 0xd
 .byte 0xa

 .ascii "Input filename:  "
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4129 :.long      0x13
        .long      0x13
str__hla_4129:
 .byte 0xd
 .byte 0xa

 .ascii "Output filename: "
 .byte 0

divisor__hla_4130: .long 18

        .balign    (4)
len__hla_4132 :.long      0x5
        .long      0x5
str__hla_4132:

 .ascii ".text"
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_4134 :.long      0x5
        .long      0x5
str__hla_4134:

 .ascii ".data"
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_4135 :.long      0x4
        .long      0x4
str__hla_4135:

 .ascii ".bss"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4142 :.long      0x1c
        .long      0x1c
str__hla_4142:
 .byte 0xd
 .byte 0xa

 .ascii "COFF Symbol table (#syms: "
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4143 :.long      0x5
        .long      0x5
str__hla_4143:

 .ascii ")"
 .byte 0xd
 .byte 0xa
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_4147 :.long      0x2
        .long      0x2
str__hla_4147:

 .ascii " :"
 .byte 0

 .byte 0

        .balign    (4)
len__hla_4150 :.long      0x6
        .long      0x6
str__hla_4150:

 .ascii "static"
 .byte 0

 .byte 0

        .balign    (4)
len__hla_4153 :.long      0x8
        .long      0x8
str__hla_4153:

 .ascii "external"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4154 :.long      0x6
        .long      0x6
str__hla_4154:

 .ascii "public"
 .byte 0

 .byte 0

        .balign    (4)
len__hla_4155 :.long      0x4
        .long      0x4
str__hla_4155:

 .ascii "????"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4156 :.long      0x19
        .long      0x19
str__hla_4156:

 .ascii "Code Section Relocations:"
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_4157 :.long      0x19
        .long      0x19
str__hla_4157:

 .ascii "Data Section Relocations:"
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_4176 :.long      0x1f
        .long      0x1f
str__hla_4176:

 .ascii "generateELF:"
 .byte 0xd
 .byte 0xa

 .ascii "Input filename:  "
 .byte 0


        .balign    (4)
len__hla_4177 :.long      0x9
        .long      0x9
str__hla_4177:

 .ascii ".shstrtab"
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_4178 :.long      0x7
        .long      0x7
str__hla_4178:

 .ascii ".symtab"
 .byte 0


        .balign    (4)
len__hla_4179 :.long      0x7
        .long      0x7
str__hla_4179:

 .ascii ".strtab"
 .byte 0


        .balign    (4)
len__hla_4180 :.long      0x9
        .long      0x9
str__hla_4180:

 .ascii ".rel.text"
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_4181 :.long      0x9
        .long      0x9
str__hla_4181:

 .ascii ".rel.data"
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_4207 :.long      0x1f
        .long      0x1f
str__hla_4207:

 .ascii "Unknown ELF format specified!"
 .byte 0xd
 .byte 0xa
 .byte 0


        .balign    (4)
len__hla_4225 :.long      0x21
        .long      0x21
str__hla_4225:

 .ascii "generateMacho:"
 .byte 0xd
 .byte 0xa

 .ascii "Input filename:  "
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_4285 :.long      0x48
        .long      0x48
str__hla_4285:

 .ascii "------------"
 .byte 0xd
 .byte 0xa

 .ascii "HLA Back Engine Object code formatter"
 .byte 0xd
 .byte 0xa
 .byte 0xd
 .byte 0xa

 .ascii "HLABE compiling '"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4286 :.long      0x6
        .long      0x6
str__hla_4286:

 .ascii "' to '"
 .byte 0

 .byte 0

        .balign    (4)
len__hla_4287 :.long      0x3
        .long      0x3
str__hla_4287:

 .ascii "'"
 .byte 0xd
 .byte 0xa
 .byte 0


        .balign    (4)
len__hla_4295 :.long      0x38
        .long      0x38
str__hla_4295:

 .ascii "Illegal object-code format specified -- compile failed"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0
jmpTbl__hla_4290:
        .long      (case__hla_4291+0)
        .long      (case__hla_4292+0)
        .long      (case__hla_4293+0)
        .long      (case__hla_4294+0)

        .balign    (4)
len__hla_4297 :.long      0x12
        .long      0x12
str__hla_4297:

 .ascii "Symbol table: "
 .byte 0xd
 .byte 0xa
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0

        .balign    (4)
len__hla_4303 :.long      0x3
        .long      0x3
str__hla_4303:

 .ascii "  $"
 .byte 0


        .balign    (4)
len__hla_4304 :.long      0x6
        .long      0x6
str__hla_4304:

 .ascii ", sec:"
 .byte 0

 .byte 0

        .balign    (4)
len__hla_4305 :.long      0x8
        .long      0x8
str__hla_4305:

 .ascii ", index:"
 .byte 0

 .byte 0
 .byte 0
 .byte 0
idSet__hla_3402 :.byte  0x0,0x0,0x0,0x0,0x10,0x40,0xff,0x83,0xff,0xff,0xff,0x87,0xfe,0xff,0xff,0x7
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
filenameDelims__hla_3580 :.byte  0xff,0xff,0xff,0xff,0x1,0x10,0x0,0x8,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
_0e24_msg___hla_3621 :.long  str__hla_3622
_0e2d_msg___hla_3630 :.long  str__hla_3631
_0e3d_msg___hla_3646 :.long  str__hla_3647
_0e48_msg___hla_3657 :.long  str__hla_3658
_0e51_msg___hla_3666 :.long  str__hla_3667
_0e63_msg___hla_3684 :.long  str__hla_3685
_0ed9_msg___hla_3802 :.long  str__hla_3803
_0fe0_msg___hla_4065 :.long  str__hla_4066




  .data

        .extern    ExceptionPtr__hla_
        .extern    _VMT_table_t___hla_
        .extern    AssertionStr
        .balign    (4)
        .balign    (4)
COFFsyms__hla_3309 :.space     4
numCOFFsyms__hla_3310 :.space     4
coffSymSize__hla_3311 :.space     4
ELFsyms__hla_3312 :.space     4
numELFsyms__hla_3313 :.space     4
elfSymSize__hla_3314 :.space     4
MachoSyms__hla_3315 :.space     4
MachoSymSize__hla_3316 :.space     4
numMachoSyms__hla_3317 :.space     4
stringTable__hla_3318 :.space     4
strTblOffset__hla_3319 :.space     4
strTblSize__hla_3320 :.space     4
codeSize :.space     4
codeStart__hla_3321 :.space     4
codeEnd__hla_3322 :.space     4
numCodeRelocs :.space     4
dataSize :.space     4
dataStart__hla_3323 :.space     4
dataEnd__hla_3324 :.space     4
numDataRelocs :.space     4
bssSize :.space     4
bssStart__hla_3325 :.space     4
bssEnd__hla_3326 :.space     4
symbolTable :.space     160
equatesTable :.space     160
currentSection :.byte  0x1
verboseDebug__hla_3327 :.byte  0x0
        .balign    (4)
MainPgmVMT__hla_3338 :.long      QuitMain__hla_
MainPgmCoroutine__hla_3339:
        .long      MainPgmVMT__hla_3338
        .long      0x0
        .long      0x0
SaveSEHPointer__hla_3340 :.long  0x0
        .long      0x0
        .long      0x0
saveESP__hla_3341 :.space     4
lineNumber__hla_3359 :.long  0x1
tknListTail__hla_3360 :.space     4
lastTailPtr__hla_3361 :.space     4
codeListTail__hla_3362 :.space     4
dataListTail__hla_3363 :.space     4
bssListTail__hla_3364 :.space     4
end_source__hla_3365 :.space     4
start_stmt__hla_3366 :.space     4
CodeAuxSection__hla_4090:
        .long      0x0
        .word      0x0
        .word      0x0
        .long      0x0
        .long      0x1
        .byte      0x0
DataAuxSection__hla_4091:
        .long      0x0
        .word      0x0
        .word      0x0
        .long      0x0
        .long      0x2
        .byte      0x0
BssAuxSection__hla_4092:
        .long      0x0
        .word      0x0
        .word      0x0
        .long      0x0
        .long      0x3
        .byte      0x0
NULLsection__hla_4164:
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
shstrtabSection__hla_4165:
        .long      0x1
        .long      0x3
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x1
        .long      0x0
symtabSection__hla_4166:
        .long      0x0
        .long      0x2
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x3
        .long      0x0
        .long      0x4
        .long      0x10
strtabSection__hla_4167:
        .long      0x0
        .long      0x3
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x1
        .long      0x0
textSection__hla_4168:
        .long      0x0
        .long      0x1
        .long      0x6
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x4
        .long      0x0
dataSection__hla_4169:
        .long      0x0
        .long      0x1
        .long      0x3
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x4
        .long      0x0
bssSection__hla_4170:
        .long      0x0
        .long      0x8
        .long      0x3
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x4
        .long      0x0
relTextSection__hla_4171:
        .long      0x0
        .long      0x9
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x2
        .long      0x4
        .long      0x4
        .long      0x8
relDataSection__hla_4172:
        .long      0x0
        .long      0x9
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x2
        .long      0x5
        .long      0x4
        .long      0x8





