// Assembly code emitted by HLA compiler
// Version 2.106 build 21552 (prototype)
// HLA compiler written by Randall Hyde
// GAS compatible output






  .text


        .global    numCodeRelocs
        .global    dataSize
        .global    QuitMain__hla_
        .global    numDataRelocs
        .global    _hlabe_compile
        .global    compileMACHO
        .global    DfltExHndlr__hla_
        .global    bssSize
        .global    compileELF
        .global    symbolTable
        .global    codeSize
        .global    hlabe_compile
        .global    currentSection
        .global    lexer
        .global    equatesTable
        .global    compileCOFF
        .global    printLineNumberChain
        .global    optimizeDisps
        .global    InstallSignals__hla_
        .extern    MEM_FREE
        .extern    STR_CPY
        .extern    STR_INIT
        .extern    STR_CPYZ
        .extern    MEM_ALLOC
        .extern    MEM_SIZE
        .extern    EX_PRINTEXCEPTIONERROR
        .extern    FILEIO_OPENNEW
        .extern    STR_A_CPY
        .extern    STDOUT_PUTSSIZE
        .extern    CONV_GETDELIMITERS
        .extern    CONV_SETDELIMITERS
        .extern    FILEIO_CLOSE
        .extern    STDERR_PUTI32
        .extern    MEM_ZALLOC
        .extern    STR_LENGTH
        .extern    STDERR_PUTS
        .extern    STDERR_PUTC
        .extern    STDERR_PUTU32
        .extern    STDOUT_PUTU32
        .extern    FILEIO_WRITE
        .extern    STDERR_NEWLN
        .extern    STDOUT_NEWLN
        .extern    DefaultExceptionHandler__hla_
        .extern    abstract__hla_
        .extern    STDOUT_PUTZS
        .extern    CONV_ATOH128
        .extern    STR_A_BUFTOSTR2
        .extern    STDERR_PUTU8
        .extern    STDOUT_PUTU8
        .extern    ZSTR_CPY
        .extern    CONV_ATOU128
        .extern    TABLE_GETNODE
        .extern    TIME_UTCDATETIME
        .extern    BuildExcepts__hla_
        .extern    CONV_ATOH80
        .extern    CONV_ATOH64
        .extern    TIME_TOUNIXTIME
        .extern    CONV_ATOH32
        .extern    STDOUT_PUTS
        .extern    STDOUT_PUTD
        .extern    STDOUT_PUTC
        .extern    CONV_ATOU64
        .extern    CONV_ATOU32
        .extern    MEM_REALLOC
        .extern    CSET_SETUNION
        .extern    Raise__hla_
        .extern    TABLE_CREATE
        .extern    BLOB_LENGTH
        .extern    shortDfltExcept__hla_
        .extern    TABLE_LOOKUP






  .data

        .extern    ExceptionPtr__hla_
        .extern    _VMT_table_t___hla_
        .extern    AssertionStr
        .extern    verbose
        .balign    (4)
        .balign    (4)
COFFsyms__hla_3311 :.space     4
numCOFFsyms__hla_3312 :.space     4
coffSymSize__hla_3313 :.space     4
ELFsyms__hla_3314 :.space     4
numELFsyms__hla_3315 :.space     4
elfSymSize__hla_3316 :.space     4
stringTable__hla_3317 :.space     4
strTblOffset__hla_3318 :.space     4
strTblSize__hla_3319 :.space     4
codeSize :.space     4
numCodeRelocs :.space     4
dataSize :.space     4
numDataRelocs :.space     4
bssSize :.space     4
symbolTable :.space     160
equatesTable :.space     160
currentSection :.byte  0x1
verboseDebug__hla_3320 :.byte  0x0
        .balign    (4)
MainPgmVMT__hla_3331 :.long      QuitMain__hla_
MainPgmCoroutine__hla_3332:
        .long      MainPgmVMT__hla_3331
        .long      0x0
        .long      0x0
SaveSEHPointer__hla_3333 :.long  0x0
        .long      0x0
        .long      0x0
saveESP__hla_3334 :.space     4
lineNumber__hla_3352 :.long  0x1
tknListTail__hla_3353 :.space     4
lastTailPtr__hla_3354 :.space     4
codeListTail__hla_3355 :.space     4
dataListTail__hla_3356 :.space     4
bssListTail__hla_3357 :.space     4
end_source__hla_3358 :.space     4
start_stmt__hla_3359 :.space     4
CodeAuxSection__hla_4030:
        .long      0x0
        .word      0x0
        .word      0x0
        .long      0x0
        .long      0x1
        .byte      0x0
DataAuxSection__hla_4031:
        .long      0x0
        .word      0x0
        .word      0x0
        .long      0x0
        .long      0x2
        .byte      0x0
BssAuxSection__hla_4032:
        .long      0x0
        .word      0x0
        .word      0x0
        .long      0x0
        .long      0x3
        .byte      0x0
NULLsection__hla_4104:
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
shstrtabSection__hla_4105:
        .long      0x1
        .long      0x3
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x1
        .long      0x0
symtabSection__hla_4106:
        .long      0x0
        .long      0x2
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x3
        .long      0x0
        .long      0x4
        .long      0x10
strtabSection__hla_4107:
        .long      0x0
        .long      0x3
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x1
        .long      0x0
textSection__hla_4108:
        .long      0x0
        .long      0x1
        .long      0x6
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x4
        .long      0x0
dataSection__hla_4109:
        .long      0x0
        .long      0x1
        .long      0x3
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x4
        .long      0x0
bssSection__hla_4110:
        .long      0x0
        .long      0x8
        .long      0x3
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x4
        .long      0x0
relTextSection__hla_4111:
        .long      0x0
        .long      0x9
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x2
        .long      0x4
        .long      0x4
        .long      0x8
relDataSection__hla_4112:
        .long      0x0
        .long      0x9
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x2
        .long      0x5
        .long      0x4
        .long      0x8




  .text


        .balign    (4)
len__hla_3346 :.long      0x2
        .long      0x2
str__hla_3346:

 .ascii ", "
 .byte 0

 .byte 0

        .balign    (4)
len__hla_3388 :.long      0x2e
        .long      0x2e
str__hla_3388:

 .ascii "Attempted to scan beyond the end of the file"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0

        .balign    (4)
len__hla_3412 :.long      0x13
        .long      0x13
str__hla_3412:

 .ascii "Unknown statement: "
 .byte 0


        .balign    (4)
len__hla_3434 :.long      0x23
        .long      0x23
str__hla_3434:

 .ascii "Expected ')' in expression at line "
 .byte 0


        .balign    (4)
len__hla_3435 :.long      0x25
        .long      0x25
str__hla_3435:

 .ascii "Unexpected character in expression: '"
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_3436 :.long      0xa
        .long      0xa
str__hla_3436:

 .ascii "' at line "
 .byte 0

 .byte 0
jmpTbl__hla_3427:
        .long      (case__hla_3428+0)
        .long      (default__hla_3427+0)
        .long      (default__hla_3427+0)
        .long      (default__hla_3427+0)
        .long      (case__hla_3432+0)
        .long      (default__hla_3427+0)
        .long      (default__hla_3427+0)
        .long      (default__hla_3427+0)
        .long      (default__hla_3427+0)
        .long      (default__hla_3427+0)
        .long      (default__hla_3427+0)
        .long      (default__hla_3427+0)
        .long      (case__hla_3429+0)
        .long      (case__hla_3429+0)
        .long      (case__hla_3429+0)
        .long      (case__hla_3429+0)
        .long      (case__hla_3429+0)
        .long      (case__hla_3429+0)
        .long      (case__hla_3429+0)
        .long      (case__hla_3429+0)
        .long      (case__hla_3429+0)
        .long      (case__hla_3429+0)
        .long      (default__hla_3427+0)
        .long      (default__hla_3427+0)
        .long      (default__hla_3427+0)
        .long      (default__hla_3427+0)
        .long      (default__hla_3427+0)
        .long      (default__hla_3427+0)
        .long      (default__hla_3427+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (default__hla_3427+0)
        .long      (default__hla_3427+0)
        .long      (default__hla_3427+0)
        .long      (default__hla_3427+0)
        .long      (case__hla_3430+0)
        .long      (default__hla_3427+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)
        .long      (case__hla_3430+0)

        .balign    (4)
len__hla_3447 :.long      0x23
        .long      0x23
str__hla_3447:

 .ascii "Illegal relocatable object at line "
 .byte 0


        .balign    (4)
len__hla_3459 :.long      0x34
        .long      0x34
str__hla_3459:

 .ascii "Expression cannot contain relocatable items at line "
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_3473 :.long      0x19
        .long      0x19
str__hla_3473:

 .ascii ".b operand out of range"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_3484 :.long      0x19
        .long      0x19
str__hla_3484:

 .ascii ".w operand out of range"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_3526 :.long      0x1a
        .long      0x1a
str__hla_3526:

 .ascii "TByte value out of range"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0

        .balign    (4)
len__hla_3579 :.long      0x1a
        .long      0x1a
str__hla_3579:

 .ascii "Filename too long at line "
 .byte 0

 .byte 0

        .balign    (4)
len__hla_3615 :.long      0x1c
        .long      0x1c
str__hla_3615:

 .ascii "ecx <> NULL hlabe.hla (1961)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_3624 :.long      0x1c
        .long      0x1c
str__hla_3624:

 .ascii "ecx <> NULL hlabe.hla (2028)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_3630 :.long      0x15
        .long      0x15
str__hla_3630:

 .ascii "Syntax error at line "
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_3631 :.long      0x13
        .long      0x13
str__hla_3631:

 .ascii ", expected at ','"
 .byte 0xd
 .byte 0xa
 .byte 0


        .balign    (4)
len__hla_3632 :.long      0x2e
        .long      0x2e
str__hla_3632:

 .ascii "Equate attempted to redefine a symbol at line "
 .byte 0

 .byte 0

        .balign    (4)
len__hla_3637 :.long      0x1c
        .long      0x1c
str__hla_3637:

 .ascii "ecx <> NULL hlabe.hla (2110)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_3643 :.long      0x2c
        .long      0x2c
str__hla_3643:

 .ascii "Public symbol cannot also be extern at line "
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_3648 :.long      0x1c
        .long      0x1c
str__hla_3648:

 .ascii "ecx <> NULL hlabe.hla (2202)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_3657 :.long      0x1c
        .long      0x1c
str__hla_3657:

 .ascii "ecx <> NULL hlabe.hla (2294)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_3663 :.long      0x2a
        .long      0x2a
str__hla_3663:

 .ascii ".ub expected a ',' -- Syntax error at line"
 .byte 0

 .byte 0

        .balign    (4)
len__hla_3666 :.long      0x2b
        .long      0x2b
str__hla_3666:

 .ascii ".uw expected a ',' -- Syntax error at line "
 .byte 0


        .balign    (4)
len__hla_3669 :.long      0x2b
        .long      0x2b
str__hla_3669:

 .ascii ".ud expected a ',' -- Syntax error at line "
 .byte 0


        .balign    (4)
len__hla_3675 :.long      0x1c
        .long      0x1c
str__hla_3675:

 .ascii "ecx <> NULL hlabe.hla (2485)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_3681 :.long      0x31
        .long      0x31
str__hla_3681:

 .ascii "External symbol is already defined. Error at line"
 .byte 0

 .byte 0
 .byte 0
jmpTbl__hla_3609:
        .long      (case__hla_3610+0)
        .long      (case__hla_3611+0)
        .long      (case__hla_3618+0)
        .long      (case__hla_3619+0)
        .long      (case__hla_3627+0)
        .long      (default__hla_3609+0)
        .long      (default__hla_3609+0)
        .long      (default__hla_3609+0)
        .long      (default__hla_3609+0)
        .long      (default__hla_3609+0)
        .long      (default__hla_3609+0)
        .long      (case__hla_3633+0)
        .long      (default__hla_3609+0)
        .long      (default__hla_3609+0)
        .long      (default__hla_3609+0)
        .long      (case__hla_3640+0)
        .long      (case__hla_3644+0)
        .long      (case__hla_3651+0)
        .long      (case__hla_3652+0)
        .long      (case__hla_3653+0)
        .long      (case__hla_3660+0)
        .long      (case__hla_3670+0)
        .long      (case__hla_3671+0)
        .long      (case__hla_3678+0)
        .long      (case__hla_3618+0)
        .long      (case__hla_3682+0)

        .balign    (4)
len__hla_3686 :.long      0x7
        .long      0x7
str__hla_3686:

 .ascii "Symbol "
 .byte 0


        .balign    (4)
len__hla_3687 :.long      0x23
        .long      0x23
str__hla_3687:

 .ascii " is already defined. Error at line "
 .byte 0


        .balign    (4)
len__hla_3806 :.long      0x40
        .long      0x40
str__hla_3806:

 .ascii "Error: Unexpected bss directive encountered in non-bss section"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_3811 :.long      0x42
        .long      0x42
str__hla_3811:

 .ascii "Error: Unexpected code directive encountered in non-code section"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0

        .balign    (4)
len__hla_3814 :.long      0x42
        .long      0x42
str__hla_3814:

 .ascii "Error: Unexpected data directive encountered in non-data section"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0

        .balign    (4)
len__hla_3828 :.long      0x23
        .long      0x23
str__hla_3828:

 .ascii "Object code type is not supported"
 .byte 0xd
 .byte 0xa
 .byte 0


        .balign    (4)
len__hla_3848 :.long      0x24
        .long      0x24
str__hla_3848:

 .ascii "Internal error: illegal token value:"
 .byte 0

 .byte 0
 .byte 0
 .byte 0
jmpTbl__hla_3791:
        .long      (case__hla_3792+0)
        .long      (case__hla_3793+0)
        .long      (case__hla_3807+0)
        .long      (case__hla_3792+0)
        .long      (case__hla_3842+0)
        .long      (case__hla_3846+0)
        .long      (case__hla_3815+0)
        .long      (case__hla_3815+0)
        .long      (case__hla_3815+0)
        .long      (case__hla_3809+0)
        .long      (default__hla_3791+0)
        .long      (case__hla_3812+0)
        .long      (case__hla_3804+0)
        .long      (case__hla_3819+0)
        .long      (case__hla_3820+0)
        .long      (case__hla_3821+0)
        .long      (case__hla_3836+0)
        .long      (case__hla_3829+0)
        .long      (case__hla_3792+0)
        .long      (case__hla_3792+0)
        .long      (case__hla_3792+0)

        .balign    (4)
len__hla_3878 :.long      0x31
        .long      0x31
str__hla_3878:

 .ascii "Instruction cannot reference an external symbol ("
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_3879 :.long      0x3
        .long      0x3
str__hla_3879:

 .ascii ")"
 .byte 0xd
 .byte 0xa
 .byte 0

jmpTbl__hla_3864:
        .long      (case__hla_3865+0)
        .long      (case__hla_3869+0)
        .long      (case__hla_3870+0)
        .long      (case__hla_3871+0)
        .long      (case__hla_3885+0)
        .long      (case__hla_3872+0)
        .long      (case__hla_3873+0)
        .long      (case__hla_3873+0)
        .long      (case__hla_3873+0)
        .long      (case__hla_3866+0)
        .long      (default__hla_3864+0)
        .long      (case__hla_3867+0)
        .long      (case__hla_3868+0)
        .long      (case__hla_3874+0)
        .long      (case__hla_3883+0)
        .long      (case__hla_3880+0)
        .long      (case__hla_3884+0)
        .long      (case__hla_3882+0)
        .long      (case__hla_3865+0)
        .long      (case__hla_3865+0)
        .long      (case__hla_3865+0)

        .balign    (4)
len__hla_3903 :.long      0x11
        .long      0x11
str__hla_3903:

 .ascii "Undefined symbol:"
 .byte 0

 .byte 0
 .byte 0
jmpTbl__hla_3919:
        .long      (case__hla_3920+0)
        .long      (case__hla_3926+0)
        .long      (case__hla_3928+0)
        .long      (case__hla_3920+0)
        .long      (case__hla_3941+0)
        .long      (case__hla_3929+0)
        .long      (case__hla_3930+0)
        .long      (case__hla_3930+0)
        .long      (case__hla_3930+0)
        .long      (case__hla_3921+0)
        .long      (default__hla_3919+0)
        .long      (case__hla_3922+0)
        .long      (case__hla_3923+0)
        .long      (case__hla_3931+0)
        .long      (case__hla_3939+0)
        .long      (case__hla_3932+0)
        .long      (case__hla_3940+0)
        .long      (case__hla_3936+0)
        .long      (case__hla_3920+0)
        .long      (case__hla_3920+0)
        .long      (case__hla_3924+0)

        .balign    (4)
len__hla_3970 :.long      0x8
        .long      0x8
str__hla_3970:

 .ascii "Symbol '"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_3971 :.long      0x10
        .long      0x10
str__hla_3971:

 .ascii "' is undefined"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_3975 :.long      0x2f
        .long      0x2f
str__hla_3975:

 .ascii "Branch target is out of range. "
 .byte 0xd
 .byte 0xa

 .ascii "(displacement="
 .byte 0


        .balign    (4)
len__hla_3976 :.long      0x28
        .long      0x28
str__hla_3976:

 .ascii " and must be in the range -128..+127)."
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0
jmpTbl__hla_3966:
        .long      (case__hla_3967+0)
        .long      (case__hla_3967+0)
        .long      (case__hla_3967+0)
        .long      (case__hla_3968+0)
        .long      (case__hla_3994+0)
        .long      (case__hla_3967+0)
        .long      (case__hla_3967+0)
        .long      (case__hla_3967+0)
        .long      (case__hla_3967+0)
        .long      (case__hla_3967+0)
        .long      (default__hla_3966+0)
        .long      (case__hla_3967+0)
        .long      (case__hla_3967+0)
        .long      (case__hla_3972+0)
        .long      (case__hla_3977+0)
        .long      (case__hla_3980+0)
        .long      (case__hla_3990+0)
        .long      (case__hla_3985+0)
        .long      (case__hla_3967+0)
        .long      (case__hla_3967+0)
        .long      (case__hla_3967+0)

        .balign    (4)
len__hla_4001 :.long      0x2d
        .long      0x2d
str__hla_4001:

 .ascii "Internal error (relocations in BSS section)"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_4006 :.long      0x1c
        .long      0x1c
str__hla_4006:

 .ascii "ebx <> NULL hlabe.hla (5044)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4009 :.long      0x12
        .long      0x12
str__hla_4009:

 .ascii "Undefined symbol: "
 .byte 0

 .byte 0

        .balign    (4)
len__hla_4016 :.long      0x10
        .long      0x10
str__hla_4016:

 .ascii "optimizeDisps:"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4018 :.long      0x5e
        .long      0x5e
str__hla_4018:

 .ascii "Could not optimize (small->large) in 16,384 passes."
 .byte 0xd
 .byte 0xa

 .ascii "Reverting to large->small optimization."
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0

        .balign    (4)
len__hla_4020 :.long      0x15
        .long      0x15
str__hla_4020:

 .ascii "Optimization passes: "
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_4021 :.long      0x8
        .long      0x8
str__hla_4021:

 .ascii "+16386"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4023 :.long      0x4
        .long      0x4
str__hla_4023:

 .ascii "+2"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4047 :.long      0x4
        .long      0x4
str__hla_4047:
 .byte 0xd
 .byte 0xa
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4049 :.long      0x2
        .long      0x2
str__hla_4049:

 .ascii ": "
 .byte 0

 .byte 0

        .balign    (4)
len__hla_4050 :.long      0x3
        .long      0x3
str__hla_4050:

 .ascii ", '"
 .byte 0


        .balign    (4)
len__hla_4051 :.long      0x3
        .long      0x3
str__hla_4051:

 .ascii "', "
 .byte 0


        .balign    (4)
len__hla_4054 :.long      0x17
        .long      0x17
str__hla_4054:

 .ascii "IMAGE_REL_I386_ABSOLUTE"
 .byte 0


        .balign    (4)
len__hla_4056 :.long      0x14
        .long      0x14
str__hla_4056:

 .ascii "IMAGE_REL_I386_DIR32"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4058 :.long      0x16
        .long      0x16
str__hla_4058:

 .ascii "IMAGE_REL_I386_DIR32NB"
 .byte 0

 .byte 0

        .balign    (4)
len__hla_4060 :.long      0x14
        .long      0x14
str__hla_4060:

 .ascii "IMAGE_REL_I386_REL32"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4061 :.long      0x18
        .long      0x18
str__hla_4061:

 .ascii "???? relocation type = $"
 .byte 0

 .byte 0
 .byte 0
 .byte 0
jmpTbl__hla_4052:
        .long      (case__hla_4053+0)
        .long      (default__hla_4052+0)
        .long      (default__hla_4052+0)
        .long      (default__hla_4052+0)
        .long      (default__hla_4052+0)
        .long      (default__hla_4052+0)
        .long      (case__hla_4055+0)
        .long      (case__hla_4057+0)
        .long      (default__hla_4052+0)
        .long      (default__hla_4052+0)
        .long      (default__hla_4052+0)
        .long      (default__hla_4052+0)
        .long      (default__hla_4052+0)
        .long      (default__hla_4052+0)
        .long      (default__hla_4052+0)
        .long      (default__hla_4052+0)
        .long      (default__hla_4052+0)
        .long      (default__hla_4052+0)
        .long      (default__hla_4052+0)
        .long      (default__hla_4052+0)
        .long      (case__hla_4059+0)

        .balign    (4)
len__hla_4068 :.long      0x20
        .long      0x20
str__hla_4068:

 .ascii "generateCOFF:"
 .byte 0xd
 .byte 0xa

 .ascii "Input filename:  "
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4069 :.long      0x13
        .long      0x13
str__hla_4069:
 .byte 0xd
 .byte 0xa

 .ascii "Output filename: "
 .byte 0

divisor__hla_4070: .long 18

        .balign    (4)
len__hla_4072 :.long      0x5
        .long      0x5
str__hla_4072:

 .ascii ".text"
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_4074 :.long      0x5
        .long      0x5
str__hla_4074:

 .ascii ".data"
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_4075 :.long      0x4
        .long      0x4
str__hla_4075:

 .ascii ".bss"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4082 :.long      0x1c
        .long      0x1c
str__hla_4082:
 .byte 0xd
 .byte 0xa

 .ascii "COFF Symbol table (#syms: "
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4083 :.long      0x5
        .long      0x5
str__hla_4083:

 .ascii ")"
 .byte 0xd
 .byte 0xa
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_4087 :.long      0x2
        .long      0x2
str__hla_4087:

 .ascii " :"
 .byte 0

 .byte 0

        .balign    (4)
len__hla_4090 :.long      0x6
        .long      0x6
str__hla_4090:

 .ascii "static"
 .byte 0

 .byte 0

        .balign    (4)
len__hla_4093 :.long      0x8
        .long      0x8
str__hla_4093:

 .ascii "external"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4094 :.long      0x6
        .long      0x6
str__hla_4094:

 .ascii "public"
 .byte 0

 .byte 0

        .balign    (4)
len__hla_4095 :.long      0x4
        .long      0x4
str__hla_4095:

 .ascii "????"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4096 :.long      0x19
        .long      0x19
str__hla_4096:

 .ascii "Code Section Relocations:"
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_4097 :.long      0x19
        .long      0x19
str__hla_4097:

 .ascii "Data Section Relocations:"
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_4116 :.long      0x1f
        .long      0x1f
str__hla_4116:

 .ascii "generateELF:"
 .byte 0xd
 .byte 0xa

 .ascii "Input filename:  "
 .byte 0


        .balign    (4)
len__hla_4117 :.long      0x9
        .long      0x9
str__hla_4117:

 .ascii ".shstrtab"
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_4118 :.long      0x7
        .long      0x7
str__hla_4118:

 .ascii ".symtab"
 .byte 0


        .balign    (4)
len__hla_4119 :.long      0x7
        .long      0x7
str__hla_4119:

 .ascii ".strtab"
 .byte 0


        .balign    (4)
len__hla_4120 :.long      0x9
        .long      0x9
str__hla_4120:

 .ascii ".rel.text"
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_4121 :.long      0x9
        .long      0x9
str__hla_4121:

 .ascii ".rel.data"
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_4144 :.long      0x1f
        .long      0x1f
str__hla_4144:

 .ascii "Unknown ELF format specified!"
 .byte 0xd
 .byte 0xa
 .byte 0


        .balign    (4)
len__hla_4168 :.long      0x3f
        .long      0x3f
str__hla_4168:

 .ascii "Mach-O output is not yet supported by HLABE -- compile failed"
 .byte 0xd
 .byte 0xa
 .byte 0


        .balign    (4)
len__hla_4174 :.long      0x48
        .long      0x48
str__hla_4174:

 .ascii "------------"
 .byte 0xd
 .byte 0xa

 .ascii "HLA Back Engine Object code formatter"
 .byte 0xd
 .byte 0xa
 .byte 0xd
 .byte 0xa

 .ascii "HLABE compiling '"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4175 :.long      0x6
        .long      0x6
str__hla_4175:

 .ascii "' to '"
 .byte 0

 .byte 0

        .balign    (4)
len__hla_4176 :.long      0x3
        .long      0x3
str__hla_4176:

 .ascii "'"
 .byte 0xd
 .byte 0xa
 .byte 0


        .balign    (4)
len__hla_4185 :.long      0x38
        .long      0x38
str__hla_4185:

 .ascii "Illegal object-code format specified -- compile failed"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0
jmpTbl__hla_4179:
        .long      (case__hla_4180+0)
        .long      (case__hla_4181+0)
        .long      (case__hla_4182+0)
        .long      (case__hla_4183+0)
        .long      (case__hla_4184+0)

        .balign    (4)
len__hla_4187 :.long      0x12
        .long      0x12
str__hla_4187:

 .ascii "Symbol table: "
 .byte 0xd
 .byte 0xa
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0

        .balign    (4)
len__hla_4193 :.long      0x3
        .long      0x3
str__hla_4193:

 .ascii "  $"
 .byte 0


        .balign    (4)
len__hla_4194 :.long      0x6
        .long      0x6
str__hla_4194:

 .ascii ", sec:"
 .byte 0

 .byte 0
idSet__hla_3395 :.byte  0x0,0x0,0x0,0x0,0x10,0x40,0xff,0x83,0xff,0xff,0xff,0x87,0xfe,0xff,0xff,0x7
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
filenameDelims__hla_3573 :.byte  0xff,0xff,0xff,0xff,0x1,0x10,0x0,0x8,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
_0e1d_msg___hla_3614 :.long  str__hla_3615
_0e26_msg___hla_3623 :.long  str__hla_3624
_0e33_msg___hla_3636 :.long  str__hla_3637
_0e3e_msg___hla_3647 :.long  str__hla_3648
_0e47_msg___hla_3656 :.long  str__hla_3657
_0e59_msg___hla_3674 :.long  str__hla_3675
_0fa4_msg___hla_4005 :.long  str__hla_4006


        .type      DfltExHndlr__hla_,@function

DfltExHndlr__hla_:
        pushl      %ebp 
        movl       %esp, %ebp 
        jmp        DefaultExceptionHandler__hla_
xDfltExHndlr__hla___hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
End_DfltExHndlr__hla__3325:
  .size DfltExHndlr__hla_,End_DfltExHndlr__hla__3325-DfltExHndlr__hla_



        .type      InstallSignals__hla_,@function

InstallSignals__hla_:
        pushl      %ebp 
        movl       %esp, %ebp 
xInstallSignals__hla___hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
End_InstallSignals__hla__3328:
  .size InstallSignals__hla_,End_InstallSignals__hla__3328-InstallSignals__hla_



        .type      freeTableRecord__hla_3335,@function

freeTableRecord__hla_3335:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      4(%ebx) 
        call       MEM_FREE
xfreeTableRecord__hla_3335__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
End_freeTableRecord__hla_3335_3340:
  .size freeTableRecord__hla_3335,End_freeTableRecord__hla_3335_3340-freeTableRecord__hla_3335



        .type      printLineNumberChain,@function

printLineNumberChain:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        mov        25(%ebx), %ebx 
        jmp        continue__hla_3343
while__hla_3343:
        pushl      $9 
        call       STDERR_PUTC
        pushl      4(%ebx) 
        call       STDERR_PUTS
        pushl      $58 
        call       STDERR_PUTC
        pushl      8(%ebx) 
        call       STDERR_PUTU32
        mov        (%ebx), %ebx 
        cmpl       $0, %ebx 
        je         false__hla_3345
        pushl      $str__hla_3346 
        call       STDERR_PUTS
false__hla_3345:
continue__hla_3343:
        cmpl       $0, %ebx 
        jne        while__hla_3343
exitloop__hla_3343:

        call       STDERR_NEWLN
        popl       %ebx 
xprintLineNumberChain__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
End_printLineNumberChain_3349:
  .size printLineNumberChain,End_printLineNumberChain_3349-printLineNumberChain



        .type      skipToEoln__hla_3362,@function

skipToEoln__hla_3362:
        jmp        continue__hla_3365
while__hla_3365:
        incl       %ebx 
continue__hla_3365:
        cmpl       end_source__hla_3358, %ebx 
        jnb        L3367__hla_
        cmpb       $10, (%ebx) 
        jne        while__hla_3365
L3367__hla_:
exitloop__hla_3365:

        incl       %ebx 
        incl       lineNumber__hla_3352 
        ret
End_skipToEoln__hla_3362_3370:
  .size skipToEoln__hla_3362,End_skipToEoln__hla_3362_3370-skipToEoln__hla_3362



        .type      skipSpaces__hla_3373,@function

skipSpaces__hla_3373:
        decl       %ebx 

skipSpcs__hla_3376:
        incl       %ebx 
        cmpl       end_source__hla_3358, %ebx 
        jae        skippedSpaces__hla_3377
        mov        (%ebx), %al 
        cmpb       $32, %al 
        je         skipSpcs__hla_3376
        cmpb       $9, %al 
        je         skipSpcs__hla_3376
        cmpb       $13, %al 
        je         skipSpcs__hla_3376

skippedSpaces__hla_3377:
        ret
End_skipSpaces__hla_3373_3380:
  .size skipSpaces__hla_3373,End_skipSpaces__hla_3373_3380-skipSpaces__hla_3373



        .type      skipSpaces2__hla_3383,@function

skipSpaces2__hla_3383:
        decl       %ebx 

skipSpcs__hla_3386:
        incl       %ebx 
        cmpl       end_source__hla_3358, %ebx 
        jae        skippedSpaces__hla_3387
        mov        (%ebx), %al 
        cmpb       $32, %al 
        je         skipSpcs__hla_3386
        cmpb       $9, %al 
        je         skipSpcs__hla_3386
        cmpb       $13, %al 
        je         skipSpcs__hla_3386
        ret

skippedSpaces__hla_3387:
        pushl      $str__hla_3388 
        call       STDOUT_PUTS
        mov        $20, %eax 
        jmp        Raise__hla_
End_skipSpaces2__hla_3383_3391:
  .size skipSpaces2__hla_3383,End_skipSpaces2__hla_3383_3391-skipSpaces2__hla_3383



        .type      grabID__hla_3394,@function

grabID__hla_3394:
        mov        4(%esp), %ecx 
forever__hla_3399:
continue__hla_3398:
        cmpl       end_source__hla_3358, %ebx 
        jae        exitloop__hla_3398
        movzbl     (%ebx), %eax 
        btl        %eax, idSet__hla_3395 
        jnc        exitloop__hla_3398
        mov        %al, (%ecx) 
        incl       %ebx 
        incl       %ecx 
        jmp        forever__hla_3399
exitloop__hla_3398:

        movb       $0, (%ecx) 
        mov        4(%esp), %edx 
        subl       %edx, %ecx 
        mov        %ecx, -4(%edx) 
        pushl      %esi 
        pushl      %edi 
false__hla_3402:
repeat__hla_3402:
        pushl      %edx 
        movl       $equatesTable, %esi 
        mov        (%esi), %edi 
        call *     8(%edi) 
        cmpl       $0, %eax 
        je         false__hla_3403
        mov        4(%eax), %eax 
        pushl      %eax 
        pushl      %edx 
        call       STR_CPY
false__hla_3403:
continue__hla_3402:
        cmpl       $0, %eax 
        jne        repeat__hla_3402
exitloop__hla_3402:

        popl       %edi 
        popl       %esi 
        cmpl       end_source__hla_3358, %ebx 
        setb       %al 
        movzbl     %al, %eax 
        ret        $4
End_grabID__hla_3394_3406:
  .size grabID__hla_3394,End_grabID__hla_3394_3406-grabID__hla_3394



        .type      unknownStmt__hla_3409,@function

unknownStmt__hla_3409:
        pushl      $str__hla_3412 
        call       STDOUT_PUTS
        mov        start_stmt__hla_3359, %ebx 
        jmp        continue__hla_3413
while__hla_3413:
        pushl      (%ebx) 
        call       STDOUT_PUTC
        incl       %ebx 
continue__hla_3413:
        cmpl       end_source__hla_3358, %ebx 
        jnb        L3415__hla_
        cmpb       $10, (%ebx) 
        jne        while__hla_3413
L3415__hla_:
exitloop__hla_3413:

        incl       %ebx 
        incl       lineNumber__hla_3352 
        call       STDOUT_NEWLN
        ret
End_unknownStmt__hla_3409_3418:
  .size unknownStmt__hla_3409,End_unknownStmt__hla_3409_3418-unknownStmt__hla_3409



        .type      getOperand__hla_3424,@function

getOperand__hla_3424:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $1028, %esp 
        pushl      %esi 
        call       skipSpaces2__hla_3383
        movzbl     (%ebx), %eax 
        cmpl       $36, %eax 
        jl         default__hla_3427
        cmpl       $122, %eax 
        jg         default__hla_3427
        jmp *      jmpTbl__hla_3427-144(,%eax,4) 
case__hla_3428:
        lea        1(%ebx), %esi 
        call       CONV_ATOH32
        movl       %esi, %ebx 
        xorl       %edx, %edx 
        jmp        endswitch__hla_3427
case__hla_3429:
        lea        (%ebx), %esi 
        call       CONV_ATOU32
        movl       %esi, %ebx 
        xorl       %edx, %edx 
        jmp        endswitch__hla_3427
case__hla_3430:
        pushl      %ebp 
        addl       $-1028, (%esp) 
        pushl      $1024 
        call       STR_INIT
        mov        %eax, -4(%ebp) 
        pushl      -4(%ebp) 
        call       grabID__hla_3394
        pushl      -4(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        call *     4(%edi) 
        cmpl       $0, 4(%eax) 
        jne        false__hla_3431
        movl       %eax, %edx 
        pushl      $20 
        call       MEM_ALLOC
        mov        %eax, 4(%edx) 
        movb       $4, 17(%eax) 
        mov        8(%edx), %ecx 
        mov        %ecx, 4(%eax) 
        movl       $0, 12(%eax) 
        movl       $0, (%eax) 
        movb       $0, 16(%eax) 
        jmp        endif__hla_3431
false__hla_3431:
        mov        4(%eax), %edx 
        orb        $4, 17(%edx) 
        movl       %eax, %edx 
endif__hla_3431:
        xorl       %eax, %eax 
        jmp        endswitch__hla_3427
case__hla_3432:
        addl       $1, %ebx 
        call       RelExpr__hla_3421
        pushl      %eax 
        call       skipSpaces2__hla_3383
        cmpb       $41, %al 
        je         false__hla_3433
        pushl      $str__hla_3434 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3352 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $9, %eax 
        jmp        Raise__hla_
false__hla_3433:
        addl       $1, %ebx 
        popl       %eax 
        jmp        endswitch__hla_3427
default__hla_3427:
        pushl      $str__hla_3435 
        call       STDOUT_PUTS
        pushl      %eax 
        call       STDOUT_PUTC
        pushl      $str__hla_3436 
        call       STDOUT_PUTS
        pushl      lineNumber__hla_3352 
        call       STDOUT_PUTU32
        call       STDOUT_NEWLN
        mov        $20, %eax 
        jmp        Raise__hla_
endswitch__hla_3427:
        popl       %esi 
xgetOperand__hla_3424__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
End_getOperand__hla_3424_3439:
  .size getOperand__hla_3424,End_getOperand__hla_3424_3439-getOperand__hla_3424



        .type      RelExpr__hla_3421,@function

RelExpr__hla_3421:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $8, %esp 
        call       getOperand__hla_3424
        mov        %eax, -4(%ebp) 
        mov        %edx, -8(%ebp) 
forever__hla_3443:
continue__hla_3442:
        movzbl     (%ebx), %eax 
        cmpl       $43, %eax 
        je         case__hla_3445
        cmpl       $45, %eax 
        je         case__hla_3448
        jmp        default__hla_3444
case__hla_3445:
        addl       $1, %ebx 
        call       getOperand__hla_3424
        cmpl       $0, %edx 
        je         false__hla_3446
        pushl      $str__hla_3447 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3352 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3446:
        addl       %eax, -4(%ebp) 
        jmp        endswitch__hla_3444
case__hla_3448:
        addl       $1, %ebx 
        call       getOperand__hla_3424
        cmpl       $0, %edx 
        je         false__hla_3449
        pushl      $str__hla_3447 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3352 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3449:
        negl       %eax 
        addl       %eax, -4(%ebp) 
        jmp        endswitch__hla_3444
default__hla_3444:
        jmp        exitloop__hla_3442
endswitch__hla_3444:
        jmp        forever__hla_3443
exitloop__hla_3442:

        mov        -4(%ebp), %eax 
        mov        -8(%ebp), %edx 
xRelExpr__hla_3421__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
End_RelExpr__hla_3421_3452:
  .size RelExpr__hla_3421,End_RelExpr__hla_3421_3452-RelExpr__hla_3421



        .type      EvalExpr__hla_3455,@function

EvalExpr__hla_3455:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %edx 
        call       RelExpr__hla_3421
        cmpl       $0, %edx 
        je         false__hla_3458
        pushl      $str__hla_3459 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3352 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3458:
        popl       %edx 
xEvalExpr__hla_3455__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
End_EvalExpr__hla_3455_3462:
  .size EvalExpr__hla_3455,End_EvalExpr__hla_3455_3462-EvalExpr__hla_3455



        .type      parseBytes__hla_3465,@function

parseBytes__hla_3465:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $12, %esp 
        call       skipSpaces2__hla_3383
        cmpb       $34, (%ebx) 
        jne        false__hla_3468
        addl       $1, %ebx 
        mov        %ebx, -4(%ebp) 
        jmp        continue__hla_3469
while__hla_3469:
        addl       $1, %ebx 
continue__hla_3469:
        cmpb       $34, (%ebx) 
        jne        while__hla_3469
exitloop__hla_3469:

        mov        %ebx, -8(%ebp) 
        call       skipSpaces2__hla_3383
        cmpb       $44, (%ebx) 
        jne        false__hla_3471
        addl       $1, %ebx 
        mov        -8(%ebp), %eax 
        subl       -4(%ebp), %eax 
        addl       8(%ebp), %eax 
        pushl      %eax 
        call       parseBytes__hla_3465
        jmp        endif__hla_3471
false__hla_3471:
        mov        -8(%ebp), %ecx 
        subl       -4(%ebp), %ecx 
        addl       8(%ebp), %ecx 
        addl       $17, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC
        subl       $17, %ecx 
        pushl      %edx 
        mov        tknListTail__hla_3353, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %ecx, 13(%eax) 
        mov        %eax, tknListTail__hla_3353 
        popl       %edx 
        addl       $17, %eax 
endif__hla_3471:
        pushl      %esi 
        pushl      %edi 
        pushl      %ecx 
        cld
        mov        -4(%ebp), %esi 
        movl       %eax, %edi 
        addl       8(%ebp), %edi 
        mov        -8(%ebp), %ecx 
        subl       %esi, %ecx 
        rep movsb
        popl       %ecx 
        popl       %edi 
        popl       %esi 
        jmp        endif__hla_3468
false__hla_3468:
        call       EvalExpr__hla_3455
        cmpl       $256, %eax 
        jnae       false__hla_3472
        pushl      $str__hla_3473 
        call       STDOUT_PUTS
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_3472:
        mov        %al, -9(%ebp) 
        call       skipSpaces2__hla_3383
        cmpb       $44, (%ebx) 
        jne        false__hla_3474
        addl       $1, %ebx 
        mov        8(%ebp), %eax 
        addl       $1, %eax 
        pushl      %eax 
        call       parseBytes__hla_3465
        jmp        endif__hla_3474
false__hla_3474:
        mov        8(%ebp), %ecx 
        addl       $18, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC
        subl       $17, %ecx 
        pushl      %edx 
        mov        tknListTail__hla_3353, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %ecx, 13(%eax) 
        mov        %eax, tknListTail__hla_3353 
        popl       %edx 
        addl       $17, %eax 
endif__hla_3474:
        pushl      %ebx 
        pushl      %edx 
        mov        -9(%ebp), %bl 
        mov        8(%ebp), %edx 
        mov        %bl, (%eax,%edx,1) 
        popl       %edx 
        popl       %ebx 
endif__hla_3468:
xparseBytes__hla_3465__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
End_parseBytes__hla_3465_3477:
  .size parseBytes__hla_3465,End_parseBytes__hla_3465_3477-parseBytes__hla_3465



        .type      parseWords__hla_3480,@function

parseWords__hla_3480:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $12, %esp 
        pushl      %edx 
        call       skipSpaces2__hla_3383
        call       EvalExpr__hla_3455
        cmpl       $65536, %eax 
        jnae       false__hla_3483
        pushl      $str__hla_3484 
        call       STDOUT_PUTS
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_3483:
        mov        %ax, -10(%ebp) 
        call       skipSpaces2__hla_3383
        cmpb       $44, (%ebx) 
        jne        false__hla_3485
        addl       $1, %ebx 
        mov        8(%ebp), %eax 
        addl       $2, %eax 
        pushl      %eax 
        call       parseWords__hla_3480
        jmp        endif__hla_3485
false__hla_3485:
        mov        8(%ebp), %ecx 
        addl       $19, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC
        subl       $17, %ecx 
        mov        tknListTail__hla_3353, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %ecx, 13(%eax) 
        mov        %eax, tknListTail__hla_3353 
        addl       $17, %eax 
        pushl      %ebx 
        mov        -10(%ebp), %bx 
        mov        8(%ebp), %edx 
        mov        %bx, (%eax,%edx,1) 
        popl       %ebx 
endif__hla_3485:
        popl       %edx 
xparseWords__hla_3480__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
End_parseWords__hla_3480_3488:
  .size parseWords__hla_3480,End_parseWords__hla_3480_3488-parseWords__hla_3480



        .type      parseDwords__hla_3491,@function

parseDwords__hla_3491:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $16, %esp 
        pushl      %edx 
        call       skipSpaces2__hla_3383
        call       RelExpr__hla_3421
        mov        %eax, -12(%ebp) 
        cmpl       $0, %edx 
        jne        false__hla_3494
        pushl      $21 
        call       MEM_ALLOC
        mov        tknListTail__hla_3353, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        movl       $4, 13(%eax) 
        mov        %eax, tknListTail__hla_3353 
        mov        -12(%ebp), %edx 
        mov        %edx, 17(%eax) 
        clc
        jmp        endif__hla_3494
false__hla_3494:
        pushl      $21 
        call       MEM_ALLOC
        pushl      %edx 
        mov        tknListTail__hla_3353, %edx 
        movb       $4, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %eax, tknListTail__hla_3353 
        popl       %edx 
        mov        %edx, 13(%eax) 
        mov        -12(%ebp), %edx 
        mov        %edx, 17(%eax) 
        stc
endif__hla_3494:
        popl       %edx 
xparseDwords__hla_3491__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
End_parseDwords__hla_3491_3497:
  .size parseDwords__hla_3491,End_parseDwords__hla_3491_3497-parseDwords__hla_3491



        .type      EvalQWord__hla_3503,@function

EvalQWord__hla_3503:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %esi 
        mov        (%ebx), %al 
        cmpb       $36, %al 
        jne        false__hla_3506
        addl       $1, %ebx 
        lea        (%ebx), %esi 
        call       CONV_ATOH64
        movl       %esi, %ebx 
        jmp        endif__hla_3506
false__hla_3506:
        lea        (%ebx), %esi 
        call       CONV_ATOU64
        movl       %esi, %ebx 
endif__hla_3506:
        popl       %esi 
xEvalQWord__hla_3503__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
End_EvalQWord__hla_3503_3509:
  .size EvalQWord__hla_3503,End_EvalQWord__hla_3503_3509-EvalQWord__hla_3503



        .type      parseQWords__hla_3500,@function

parseQWords__hla_3500:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $16, %esp 
        pushl      %edx 
        call       skipSpaces2__hla_3383
        call       EvalQWord__hla_3503
        mov        %eax, -16(%ebp) 
        mov        %edx, -12(%ebp) 
        call       skipSpaces2__hla_3383
        cmpb       $44, (%ebx) 
        jne        false__hla_3512
        addl       $1, %ebx 
        mov        8(%ebp), %eax 
        addl       $8, %eax 
        pushl      %eax 
        call       parseQWords__hla_3500
        jmp        endif__hla_3512
false__hla_3512:
        mov        8(%ebp), %ecx 
        addl       $25, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC
        subl       $17, %ecx 
        mov        tknListTail__hla_3353, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %ecx, 13(%eax) 
        mov        %eax, tknListTail__hla_3353 
        addl       $17, %eax 
        pushl      %ebx 
        mov        -16(%ebp), %ebx 
        mov        8(%ebp), %edx 
        mov        %ebx, (%eax,%edx,1) 
        mov        -12(%ebp), %ebx 
        mov        %ebx, 4(%eax,%edx,1) 
        popl       %ebx 
endif__hla_3512:
        popl       %edx 
xparseQWords__hla_3500__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
End_parseQWords__hla_3500_3515:
  .size parseQWords__hla_3500,End_parseQWords__hla_3500_3515-parseQWords__hla_3500



        .type      EvalTByte__hla_3521,@function

EvalTByte__hla_3521:
        pushl      %esi 
        mov        (%ebx), %al 
        cmpb       $36, %al 
        jne        false__hla_3524
        addl       $1, %ebx 
        lea        (%ebx), %esi 
        pushl      %ebp 
        addl       $-24, (%esp) 
        call       CONV_ATOH80
        movl       %esi, %ebx 
        jmp        endif__hla_3524
false__hla_3524:
        lea        (%ebx), %esi 
        pushl      %ebp 
        addl       $-24, (%esp) 
        call       CONV_ATOU128
        movl       %esi, %ebx 
        movzwl     -14(%ebp), %eax 
        orl        -12(%ebp), %eax 
        testl      %eax, %eax 
        je         false__hla_3525
        pushl      $str__hla_3526 
        call       STDOUT_PUTS
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_3525:
endif__hla_3524:
        popl       %esi 
        ret
End_EvalTByte__hla_3521_3529:
  .size EvalTByte__hla_3521,End_EvalTByte__hla_3521_3529-EvalTByte__hla_3521



        .type      parseTBytes__hla_3518,@function

parseTBytes__hla_3518:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $24, %esp 
        pushl      %edx 
        call       skipSpaces2__hla_3383
        call       EvalTByte__hla_3521
        call       skipSpaces2__hla_3383
        cmpb       $44, (%ebx) 
        jne        false__hla_3532
        addl       $1, %ebx 
        mov        8(%ebp), %eax 
        addl       $10, %eax 
        pushl      %eax 
        call       parseTBytes__hla_3518
        jmp        endif__hla_3532
false__hla_3532:
        mov        8(%ebp), %ecx 
        addl       $27, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC
        subl       $17, %ecx 
        mov        tknListTail__hla_3353, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %ecx, 13(%eax) 
        mov        %eax, tknListTail__hla_3353 
        addl       $17, %eax 
        pushl      %ebx 
        mov        -24(%ebp), %ebx 
        mov        8(%ebp), %edx 
        mov        %ebx, (%eax,%edx,1) 
        mov        -20(%ebp), %ebx 
        mov        %ebx, 4(%eax,%edx,1) 
        mov        -16(%ebp), %bx 
        mov        %bx, 8(%eax,%edx,1) 
        popl       %ebx 
endif__hla_3532:
        popl       %edx 
xparseTBytes__hla_3518__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
End_parseTBytes__hla_3518_3535:
  .size parseTBytes__hla_3518,End_parseTBytes__hla_3518_3535-parseTBytes__hla_3518



        .type      EvalLWord__hla_3541,@function

EvalLWord__hla_3541:
        pushl      %esi 
        mov        (%ebx), %al 
        cmpb       $36, %al 
        jne        false__hla_3544
        addl       $1, %ebx 
        lea        (%ebx), %esi 
        pushl      %ebp 
        addl       $-24, (%esp) 
        call       CONV_ATOH128
        movl       %esi, %ebx 
        jmp        endif__hla_3544
false__hla_3544:
        lea        (%ebx), %esi 
        pushl      %ebp 
        addl       $-24, (%esp) 
        call       CONV_ATOU128
        movl       %esi, %ebx 
endif__hla_3544:
        popl       %esi 
        ret
End_EvalLWord__hla_3541_3547:
  .size EvalLWord__hla_3541,End_EvalLWord__hla_3541_3547-EvalLWord__hla_3541



        .type      parseLWords__hla_3538,@function

parseLWords__hla_3538:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $24, %esp 
        pushl      %edx 
        call       skipSpaces2__hla_3383
        call       EvalLWord__hla_3541
        call       skipSpaces2__hla_3383
        cmpb       $44, (%ebx) 
        jne        false__hla_3550
        addl       $1, %ebx 
        mov        8(%ebp), %eax 
        addl       $16, %eax 
        pushl      %eax 
        call       parseTBytes__hla_3518
        jmp        endif__hla_3550
false__hla_3550:
        mov        8(%ebp), %ecx 
        addl       $33, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC
        subl       $17, %ecx 
        mov        tknListTail__hla_3353, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %ecx, 13(%eax) 
        mov        %eax, tknListTail__hla_3353 
        addl       $17, %eax 
        pushl      %ebx 
        mov        -24(%ebp), %ebx 
        mov        8(%ebp), %edx 
        mov        %ebx, (%eax,%edx,1) 
        mov        -20(%ebp), %ebx 
        mov        %ebx, 4(%eax,%edx,1) 
        mov        -16(%ebp), %ebx 
        mov        %ebx, 8(%eax,%edx,1) 
        mov        -12(%ebp), %ebx 
        mov        %ebx, 12(%eax,%edx,1) 
        popl       %ebx 
endif__hla_3550:
        popl       %edx 
xparseLWords__hla_3538__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
End_parseLWords__hla_3538_3553:
  .size parseLWords__hla_3538,End_parseLWords__hla_3538_3553-parseLWords__hla_3538



        .type      coalesce__hla_3556,@function

coalesce__hla_3556:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $32, %esp 
        mov        %eax, -16(%ebp) 
        mov        %ecx, -20(%ebp) 
        mov        %edx, -24(%ebp) 
        mov        %esi, -28(%ebp) 
        mov        %edi, -32(%ebp) 
        cld
        mov        8(%ebp), %edx 
        mov        (%edx), %esi 
        mov        %esi, -8(%ebp) 
        mov        (%esi), %eax 
        mov        %eax, -4(%ebp) 
        mov        13(%edx), %ecx 
        addl       13(%esi), %ecx 
        mov        %ecx, -12(%ebp) 
        addl       $17, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC
        mov        13(%esi), %ecx 
        addl       $17, %ecx 
        movl       %eax, %edi 
        rep movsb
        mov        -12(%ebp), %ecx 
        mov        %ecx, 13(%eax) 
        mov        8(%ebp), %esi 
        mov        13(%esi), %ecx 
        addl       $17, %esi 
        rep movsb
        mov        -4(%ebp), %edx 
        mov        %eax, 4(%edx) 
        mov        %edx, (%eax) 
        movl       $0, 4(%eax) 
        mov        %eax, tknListTail__hla_3353 
        pushl      8(%ebp) 
        call       MEM_FREE
        pushl      -8(%ebp) 
        call       MEM_FREE
        mov        -16(%ebp), %eax 
        mov        -20(%ebp), %ecx 
        mov        -24(%ebp), %edx 
        mov        -28(%ebp), %esi 
        mov        -32(%ebp), %edi 
xcoalesce__hla_3556__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
End_coalesce__hla_3556_3561:
  .size coalesce__hla_3556,End_coalesce__hla_3556_3561-coalesce__hla_3556



        .type      initStmt__hla_3564,@function

initStmt__hla_3564:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ecx 
        pushl      8(%ebp) 
        call       MEM_ALLOC
        mov        tknListTail__hla_3353, %ecx 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        mov        %eax, 4(%ecx) 
        mov        %eax, tknListTail__hla_3353 
        popl       %ecx 
xinitStmt__hla_3564__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
End_initStmt__hla_3564_3569:
  .size initStmt__hla_3564,End_initStmt__hla_3564_3569-initStmt__hla_3564



        .type      parseSourceFileList__hla_3572,@function

parseSourceFileList__hla_3572:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %edx 
        call       skipSpaces2__hla_3383
        cmpb       $59, (%ebx) 
        jne        false__hla_3576
        pushl      %ecx 
        pushl      %esi 
        pushl      %edi 
        addl       $1, %ebx 
        call       skipSpaces2__hla_3383
        movl       %ebx, %ecx 
        subl       $1, %ebx 
false__hla_3577:
repeat__hla_3577:
        addl       $1, %ebx 
        movzbl     (%ebx), %eax 
        btl        %eax, filenameDelims__hla_3573 
continue__hla_3577:
        jnc        repeat__hla_3577
exitloop__hla_3577:

        movl       %ebx, %eax 
        subl       %ecx, %eax 
        cmpl       $512, %eax 
        jna        false__hla_3578
        pushl      $str__hla_3579 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3352 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_3578:
        pushl      $12 
        call       MEM_ALLOC
        mov        8(%ebp), %edx 
        mov        %eax, (%edx) 
        movl       %eax, %edx 
        pushl      %ecx 
        pushl      %ebx 
        call       STR_A_BUFTOSTR2
        addl       $1, %ebx 
        mov        %eax, 4(%edx) 
        cmpb       $44, (%ebx) 
        jne        false__hla_3580
        addl       $1, %ebx 
false__hla_3580:
        call       skipSpaces2__hla_3383
        movl       %ebx, %esi 
        call       CONV_ATOU32
        movl       %esi, %ebx 
        mov        %eax, 8(%edx) 
        movl       $0, (%edx) 
        lea        (%edx), %eax 
        popl       %edi 
        popl       %esi 
        popl       %ecx 
        pushl      %eax 
        call       parseSourceFileList__hla_3572
        jmp        endif__hla_3576
false__hla_3576:
        mov        8(%ebp), %edx 
        movl       $0, (%edx) 
endif__hla_3576:
        popl       %edx 
xparseSourceFileList__hla_3572__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
End_parseSourceFileList__hla_3572_3583:
  .size parseSourceFileList__hla_3572,End_parseSourceFileList__hla_3572_3583-parseSourceFileList__hla_3572



        .type      getDisp__hla_3586,@function

getDisp__hla_3586:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %eax 
        call       skipSpaces__hla_3373
        call       RelExpr__hla_3421
        popl       %ecx 
        mov        %eax, 21(%ecx) 
        mov        %edx, 17(%ecx) 
        movl       $0, 13(%ecx) 
        lea        25(%ecx), %eax 
        pushl      %eax 
        call       parseSourceFileList__hla_3572
        call       skipToEoln__hla_3362
xgetDisp__hla_3586__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
End_getDisp__hla_3586_3591:
  .size getDisp__hla_3586,End_getDisp__hla_3586_3591-getDisp__hla_3586



        .type      emitDummy__hla_3594,@function

emitDummy__hla_3594:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %eax 
        pushl      %ecx 
        pushl      $13 
        call       MEM_ALLOC
        mov        tknListTail__hla_3353, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $20, 8(%eax) 
        mov        %eax, tknListTail__hla_3353 
        popl       %ecx 
        popl       %eax 
xemitDummy__hla_3594__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
End_emitDummy__hla_3594_3599:
  .size emitDummy__hla_3594,End_emitDummy__hla_3594_3599-emitDummy__hla_3594



        .type      lexer,@function

lexer:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $5144, %esp 
        movl       $0, -12(%ebp) 
        movl       $0, -4(%ebp) 
        pushl      %ebp 
        addl       $-1036, (%esp) 
        pushl      $1024 
        call       STR_INIT
        mov        %eax, -8(%ebp) 
        mov        20(%ebp), %eax 
        mov        %eax, end_source__hla_3358 
        pushl      $13 
        call       MEM_ALLOC
        movl       $0, 4(%eax) 
        movl       $0, (%eax) 
        movb       $0, 8(%eax) 
        mov        %eax, -5136(%ebp) 
        mov        %eax, codeListTail__hla_3355 
        mov        %eax, tknListTail__hla_3353 
        movl       $codeListTail__hla_3355, lastTailPtr__hla_3354 
        movb       $1, currentSection 
        pushl      $13 
        call       MEM_ALLOC
        movl       $0, 4(%eax) 
        movl       $0, (%eax) 
        movb       $0, 8(%eax) 
        mov        %eax, -5140(%ebp) 
        mov        %eax, dataListTail__hla_3356 
        pushl      $13 
        call       MEM_ALLOC
        movl       $0, 4(%eax) 
        movl       $0, (%eax) 
        movb       $0, 8(%eax) 
        mov        %eax, -5144(%ebp) 
        mov        %eax, bssListTail__hla_3357 
        mov        24(%ebp), %ebx 
forever__hla_3603:
continue__hla_3602:
        mov        %ebx, start_stmt__hla_3359 
        decl       %ebx 

skipSpcs__hla_3604:
        incl       %ebx 
        cmpl       end_source__hla_3358, %ebx 
        jae        exitloop__hla_3602
        mov        (%ebx), %al 
        cmpb       $32, %al 
        je         skipSpcs__hla_3604
        cmpb       $9, %al 
        je         skipSpcs__hla_3604
        cmpb       $13, %al 
        je         skipSpcs__hla_3604
        cmpb       $10, %al 
        jne        false__hla_3606
        incl       %ebx 
        incl       lineNumber__hla_3352 
        jmp        continue__hla_3602
false__hla_3606:
        cmpb       $59, %al 
        jne        false__hla_3607
        call       skipToEoln__hla_3362
        jmp        continue__hla_3602
false__hla_3607:
        cmpb       $46, %al 
        jne        false__hla_3608
        addl       $1, %ebx 
        movzbl     (%ebx), %eax 
        cmpl       $97, %eax 
        jl         default__hla_3609
        cmpl       $122, %eax 
        jg         default__hla_3609
        jmp *      jmpTbl__hla_3609-388(,%eax,4) 
case__hla_3610:
        pushl      $17 
        call       MEM_ALLOC
        mov        tknListTail__hla_3353, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $1, 8(%eax) 
        mov        %eax, tknListTail__hla_3353 
        addl       $1, %ebx 
        call       EvalExpr__hla_3455
        mov        tknListTail__hla_3353, %ecx 
        mov        %eax, 13(%ecx) 
        call       skipToEoln__hla_3362
        jmp        endswitch__hla_3609
case__hla_3611:
        addl       $1, %ebx 
        pushl      $0 
        call       parseBytes__hla_3465
        subl       $17, %eax 
        mov        (%eax), %ecx 
        cmpl       $0, %ecx 
        jne        _0e1c_skipAssertion___hla_3616
        pushl      _0e1d_msg___hla_3614 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0e1c_skipAssertion___hla_3616:
        cmpb       $2, 8(%ecx) 
        jne        false__hla_3617
        pushl      %eax 
        call       coalesce__hla_3556
false__hla_3617:
        call       skipToEoln__hla_3362
        jmp        endswitch__hla_3609
case__hla_3618:
        call       emitDummy__hla_3594
        movb       $1, currentSection 
        mov        lastTailPtr__hla_3354, %eax 
        mov        tknListTail__hla_3353, %ecx 
        mov        %ecx, (%eax) 
        movl       $codeListTail__hla_3355, lastTailPtr__hla_3354 
        mov        codeListTail__hla_3355, %eax 
        mov        %eax, tknListTail__hla_3353 
        pushl      $13 
        call       MEM_ALLOC
        mov        tknListTail__hla_3353, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $9, 8(%eax) 
        mov        %eax, tknListTail__hla_3353 
        call       skipToEoln__hla_3362
        jmp        endswitch__hla_3609
case__hla_3619:
        addl       $1, %ebx 
        pushl      $0 
        call       parseDwords__hla_3491
        jc         false__hla_3620
        mov        (%eax), %ecx 
        cmpl       $0, %ecx 
        jne        _0e25_skipAssertion___hla_3625
        pushl      _0e26_msg___hla_3623 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0e25_skipAssertion___hla_3625:
        cmpb       $2, 8(%ecx) 
        jne        false__hla_3626
        pushl      %eax 
        call       coalesce__hla_3556
false__hla_3626:
false__hla_3620:
        call       skipToEoln__hla_3362
        jmp        endswitch__hla_3609
case__hla_3627:
        addl       $1, %ebx 
        call       skipSpaces2__hla_3383
        pushl      -8(%ebp) 
        call       grabID__hla_3394
        pushl      -8(%ebp) 
        movl       $equatesTable, %esi 
        mov        (%esi), %edi 
        call *     4(%edi) 
        cmpl       $0, 4(%eax) 
        jne        false__hla_3628
        pushl      %eax 
        call       skipSpaces2__hla_3383
        cmpb       $44, (%ebx) 
        je         false__hla_3629
        pushl      $str__hla_3630 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3352 
        call       STDERR_PUTU32
        pushl      $str__hla_3631 
        call       STDERR_PUTS
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3629:
        addl       $1, %ebx 
        call       skipSpaces2__hla_3383
        pushl      -8(%ebp) 
        call       grabID__hla_3394
        pushl      -8(%ebp) 
        call       STR_A_CPY
        popl       %edx 
        mov        %eax, 4(%edx) 
        jmp        endif__hla_3628
false__hla_3628:
        pushl      $str__hla_3632 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3352 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
endif__hla_3628:
        jmp        endswitch__hla_3609
case__hla_3633:
        addl       $1, %ebx 
        pushl      $0 
        call       parseLWords__hla_3538
        subl       $17, %eax 
        mov        (%eax), %ecx 
        cmpl       $0, %ecx 
        jne        _0e32_skipAssertion___hla_3638
        pushl      _0e33_msg___hla_3636 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0e32_skipAssertion___hla_3638:
        cmpb       $2, 8(%ecx) 
        jne        false__hla_3639
        pushl      %eax 
        call       coalesce__hla_3556
false__hla_3639:
        call       skipToEoln__hla_3362
        jmp        endswitch__hla_3609
case__hla_3640:
        addl       $1, %ebx 
        call       skipSpaces2__hla_3383
        pushl      -8(%ebp) 
        call       grabID__hla_3394
        pushl      -8(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        call *     4(%edi) 
        cmpl       $0, 4(%eax) 
        jne        false__hla_3641
        movl       %eax, %ecx 
        pushl      $20 
        call       MEM_ALLOC
        mov        %eax, 4(%ecx) 
        movb       $2, 17(%eax) 
        movl       $0, 12(%eax) 
        movl       $0, (%eax) 
        mov        8(%ecx), %ecx 
        mov        %ecx, 4(%eax) 
        mov        currentSection, %cl 
        mov        %cl, 16(%eax) 
        jmp        endif__hla_3641
false__hla_3641:
        mov        4(%eax), %ecx 
        testb      $1, 17(%ecx) 
        jz         false__hla_3642
        pushl      $str__hla_3643 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3352 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3642:
        orb        $2, 17(%ecx) 
        mov        currentSection, %al 
        mov        %al, 16(%ecx) 
endif__hla_3641:
        call       skipToEoln__hla_3362
        jmp        endswitch__hla_3609
case__hla_3644:
        addl       $1, %ebx 
        pushl      $0 
        call       parseQWords__hla_3500
        subl       $17, %eax 
        mov        (%eax), %ecx 
        cmpl       $0, %ecx 
        jne        _0e3d_skipAssertion___hla_3649
        pushl      _0e3e_msg___hla_3647 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0e3d_skipAssertion___hla_3649:
        cmpb       $2, 8(%ecx) 
        jne        false__hla_3650
        pushl      %eax 
        call       coalesce__hla_3556
false__hla_3650:
        call       skipToEoln__hla_3362
        jmp        endswitch__hla_3609
case__hla_3651:
        pushl      $17 
        call       MEM_ALLOC
        mov        tknListTail__hla_3353, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $5, 8(%eax) 
        mov        %eax, tknListTail__hla_3353 
        addl       $1, %ebx 
        call       EvalExpr__hla_3455
        mov        tknListTail__hla_3353, %ecx 
        mov        %eax, 13(%ecx) 
        call       skipToEoln__hla_3362
        jmp        endswitch__hla_3609
case__hla_3652:
        call       emitDummy__hla_3594
        movb       $2, currentSection 
        mov        lastTailPtr__hla_3354, %eax 
        mov        tknListTail__hla_3353, %ecx 
        mov        %ecx, (%eax) 
        movl       $dataListTail__hla_3356, lastTailPtr__hla_3354 
        mov        dataListTail__hla_3356, %eax 
        mov        %eax, tknListTail__hla_3353 
        pushl      $13 
        call       MEM_ALLOC
        mov        tknListTail__hla_3353, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $11, 8(%eax) 
        mov        %eax, tknListTail__hla_3353 
        call       skipToEoln__hla_3362
        jmp        endswitch__hla_3609
case__hla_3653:
        addl       $1, %ebx 
        pushl      $0 
        call       parseTBytes__hla_3518
        subl       $17, %eax 
        mov        (%eax), %ecx 
        cmpl       $0, %ecx 
        jne        _0e46_skipAssertion___hla_3658
        pushl      _0e47_msg___hla_3656 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0e46_skipAssertion___hla_3658:
        cmpb       $2, 8(%ecx) 
        jne        false__hla_3659
        pushl      %eax 
        call       coalesce__hla_3556
false__hla_3659:
        call       skipToEoln__hla_3362
        jmp        endswitch__hla_3609
case__hla_3660:
        addl       $1, %ebx 
        mov        (%ebx), %al 
        cmpb       $98, %al 
        jne        false__hla_3661
        pushl      $25 
        call       MEM_ALLOC
        mov        tknListTail__hla_3353, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $6, 8(%eax) 
        mov        %eax, tknListTail__hla_3353 
        addl       $1, %ebx 
        call       EvalExpr__hla_3455
        mov        tknListTail__hla_3353, %ecx 
        mov        %eax, 17(%ecx) 
        call       skipSpaces2__hla_3383
        cmpb       $44, (%ebx) 
        je         false__hla_3662
        pushl      $str__hla_3663 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3352 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3662:
        addl       $1, %ebx 
        call       EvalExpr__hla_3455
        mov        tknListTail__hla_3353, %ecx 
        mov        %eax, 21(%ecx) 
        movl       $1, 13(%ecx) 
        jmp        endif__hla_3661
false__hla_3661:
        cmpb       $119, %al 
        jne        false__hla_3664
        pushl      $25 
        call       MEM_ALLOC
        mov        tknListTail__hla_3353, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $7, 8(%eax) 
        mov        %eax, tknListTail__hla_3353 
        addl       $1, %ebx 
        call       EvalExpr__hla_3455
        mov        tknListTail__hla_3353, %ecx 
        mov        %eax, 17(%ecx) 
        call       skipSpaces2__hla_3383
        cmpb       $44, (%ebx) 
        je         false__hla_3665
        pushl      $str__hla_3666 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3352 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3665:
        addl       $1, %ebx 
        call       EvalExpr__hla_3455
        mov        tknListTail__hla_3353, %ecx 
        mov        %eax, 21(%ecx) 
        movl       $2, 13(%ecx) 
        jmp        endif__hla_3661
false__hla_3664:
        cmpb       $100, %al 
        jne        false__hla_3667
        pushl      $25 
        call       MEM_ALLOC
        mov        tknListTail__hla_3353, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $8, 8(%eax) 
        mov        %eax, tknListTail__hla_3353 
        addl       $1, %ebx 
        call       EvalExpr__hla_3455
        mov        tknListTail__hla_3353, %ecx 
        mov        %eax, 17(%ecx) 
        call       skipSpaces2__hla_3383
        cmpb       $44, (%ebx) 
        je         false__hla_3668
        pushl      $str__hla_3669 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3352 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3668:
        addl       $1, %ebx 
        call       EvalExpr__hla_3455
        mov        tknListTail__hla_3353, %ecx 
        mov        %eax, 21(%ecx) 
        movl       $4, 13(%ecx) 
        jmp        endif__hla_3661
false__hla_3667:
        call       unknownStmt__hla_3409
endif__hla_3661:
        call       skipToEoln__hla_3362
        jmp        endswitch__hla_3609
case__hla_3670:
        call       emitDummy__hla_3594
        movb       $3, currentSection 
        mov        lastTailPtr__hla_3354, %eax 
        mov        tknListTail__hla_3353, %ecx 
        mov        %ecx, (%eax) 
        movl       $bssListTail__hla_3357, lastTailPtr__hla_3354 
        mov        bssListTail__hla_3357, %eax 
        mov        %eax, tknListTail__hla_3353 
        pushl      $13 
        call       MEM_ALLOC
        mov        tknListTail__hla_3353, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $12, 8(%eax) 
        mov        %eax, tknListTail__hla_3353 
        call       skipToEoln__hla_3362
        jmp        endswitch__hla_3609
case__hla_3671:
        addl       $1, %ebx 
        pushl      $0 
        call       parseWords__hla_3480
        subl       $17, %eax 
        mov        (%eax), %ecx 
        cmpl       $0, %ecx 
        jne        _0e58_skipAssertion___hla_3676
        pushl      _0e59_msg___hla_3674 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0e58_skipAssertion___hla_3676:
        cmpb       $2, 8(%ecx) 
        jne        false__hla_3677
        pushl      %eax 
        call       coalesce__hla_3556
false__hla_3677:
        call       skipToEoln__hla_3362
        jmp        endswitch__hla_3609
case__hla_3678:
        addl       $1, %ebx 
        call       skipSpaces2__hla_3383
        pushl      -8(%ebp) 
        call       grabID__hla_3394
        pushl      -8(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        call *     4(%edi) 
        cmpl       $0, 4(%eax) 
        jne        false__hla_3679
        movl       %eax, %ecx 
        pushl      $20 
        call       MEM_ALLOC
        mov        %eax, 4(%ecx) 
        movb       $1, 17(%eax) 
        movl       $0, 12(%eax) 
        movl       $0, (%eax) 
        mov        8(%ecx), %ecx 
        mov        %ecx, 4(%eax) 
        mov        currentSection, %cl 
        mov        %cl, 16(%eax) 
        jmp        endif__hla_3679
false__hla_3679:
        mov        4(%eax), %eax 
        testb      $10, 17(%eax) 
        jz         false__hla_3680
        pushl      $str__hla_3681 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3352 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3680:
        orb        $1, 17(%eax) 
        mov        currentSection, %cl 
        mov        %cl, 16(%eax) 
endif__hla_3679:
        call       skipToEoln__hla_3362
        jmp        endswitch__hla_3609
case__hla_3682:
        call       skipToEoln__hla_3362
        jmp        endswitch__hla_3609
default__hla_3609:
        call       unknownStmt__hla_3409
endswitch__hla_3609:
        jmp        endif__hla_3608
false__hla_3608:
        cmpb       $58, %al 
        jne        false__hla_3683
        addl       $1, %ebx 
        call       skipSpaces2__hla_3383
        pushl      -8(%ebp) 
        call       grabID__hla_3394
        pushl      $17 
        call       MEM_ALLOC
        movl       %eax, %edx 
        pushl      -8(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        call *     4(%edi) 
        cmpl       $0, 4(%eax) 
        jne        false__hla_3684
        movl       %eax, %ecx 
        pushl      $20 
        call       MEM_ALLOC
        mov        %eax, 4(%ecx) 
        movb       $8, 17(%eax) 
        movl       $0, 12(%eax) 
        movl       $0, (%eax) 
        mov        8(%ecx), %edx 
        mov        %edx, 4(%eax) 
        mov        currentSection, %dl 
        mov        %dl, 16(%eax) 
        movl       %ecx, %eax 
        jmp        endif__hla_3684
false__hla_3684:
        mov        4(%eax), %ecx 
        testb      $8, 17(%ecx) 
        jz         false__hla_3685
        pushl      $str__hla_3686 
        call       STDERR_PUTS
        pushl      8(%eax) 
        call       STDERR_PUTS
        pushl      $str__hla_3687 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3352 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3685:
        testb      $1, 17(%ecx) 
        jz         false__hla_3688
        andb       $254, 17(%ecx) 
        orb        $2, 17(%ecx) 
false__hla_3688:
        orb        $8, 17(%ecx) 
        mov        currentSection, %dl 
        mov        %dl, 16(%ecx) 
endif__hla_3684:
        movl       %eax, %edx 
        pushl      $17 
        call       MEM_ALLOC
        movb       $3, 8(%eax) 
        mov        %edx, 13(%eax) 
        mov        tknListTail__hla_3353, %ecx 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        mov        %eax, 4(%ecx) 
        mov        %eax, tknListTail__hla_3353 
        call       skipToEoln__hla_3362
        jmp        endif__hla_3608
false__hla_3683:
        lea        10(%ebx), %ecx 
        cmpl       end_source__hla_3358, %ecx 
        jna        false__hla_3689
        call       unknownStmt__hla_3409
        jmp        endif__hla_3689
false__hla_3689:
        cmpb       $106, %al 
        jne        false__hla_3690
        mov        1(%ebx), %eax 
        movl       %eax, %edx 
        bswap      %edx 
        cmpb       $32, %ah 
        jne        false__hla_3691
        cmpb       $97, %al 
        je         ja_instr__hla_3692
        cmpb       $98, %al 
        je         jb_instr__hla_3693
        cmpb       $99, %al 
        je         jc_instr__hla_3694
        cmpb       $101, %al 
        je         je_instr__hla_3695
        cmpb       $103, %al 
        je         jg_instr__hla_3696
        cmpb       $108, %al 
        je         jl_instr__hla_3697
        cmpb       $111, %al 
        je         jo_instr__hla_3698
        cmpb       $112, %al 
        je         jp_instr__hla_3699
        cmpb       $115, %al 
        je         js_instr__hla_3700
        cmpb       $122, %al 
        je         jz_instr__hla_3701
        call       unknownStmt__hla_3409
        jmp        Done__hla_3702

jnbe_instr__hla_3703:
        addl       $2, %ebx 

ja_instr__hla_3692:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3564
        movb       $15, 8(%eax) 
        movb       $119, 29(%eax) 
        movw       $34575, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3586
        jmp        Done__hla_3702

jnae_instr__hla_3704:
        addl       $2, %ebx 

jb_instr__hla_3693:

jc_instr__hla_3694:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3564
        movb       $15, 8(%eax) 
        movb       $114, 29(%eax) 
        movw       $33295, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3586
        jmp        Done__hla_3702

je_instr__hla_3695:

jz_instr__hla_3701:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3564
        movb       $15, 8(%eax) 
        movb       $116, 29(%eax) 
        movw       $33807, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3586
        jmp        Done__hla_3702

jnle_instr__hla_3705:
        addl       $2, %ebx 

jg_instr__hla_3696:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3564
        movb       $15, 8(%eax) 
        movb       $127, 29(%eax) 
        movw       $36623, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3586
        jmp        Done__hla_3702

jnge_instr__hla_3706:
        addl       $2, %ebx 

jl_instr__hla_3697:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3564
        movb       $15, 8(%eax) 
        movb       $124, 29(%eax) 
        movw       $35855, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3586
        jmp        Done__hla_3702

jo_instr__hla_3698:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3564
        movb       $15, 8(%eax) 
        movb       $112, 29(%eax) 
        movw       $32783, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3586
        jmp        Done__hla_3702

jpe_instr__hla_3707:
        addl       $1, %ebx 

jp_instr__hla_3699:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3564
        movb       $15, 8(%eax) 
        movb       $122, 29(%eax) 
        movw       $35343, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3586
        jmp        Done__hla_3702

js_instr__hla_3700:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3564
        movb       $15, 8(%eax) 
        movb       $120, 29(%eax) 
        movw       $34831, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3586
        jmp        Done__hla_3702
        jmp        endif__hla_3691
false__hla_3691:
        cmpb       $32, %dh 
        jne        false__hla_3708
        cmpw       $28781, %ax 
        je         jmp_instr__hla_3709
        cmpw       $25953, %ax 
        je         jae_instr__hla_3710
        cmpw       $25954, %ax 
        je         jbe_instr__hla_3711
        cmpw       $25959, %ax 
        je         jge_instr__hla_3712
        cmpw       $25964, %ax 
        je         jle_instr__hla_3713
        cmpw       $24942, %ax 
        je         jna_instr__hla_3714
        cmpw       $25198, %ax 
        je         jnb_instr__hla_3715
        cmpw       $25454, %ax 
        je         jnc_instr__hla_3716
        cmpw       $25966, %ax 
        je         jne_instr__hla_3717
        cmpw       $26478, %ax 
        je         jng_instr__hla_3718
        cmpw       $27758, %ax 
        je         jnl_instr__hla_3719
        cmpw       $28526, %ax 
        je         jno_instr__hla_3720
        cmpw       $28782, %ax 
        je         jnp_instr__hla_3721
        cmpw       $29550, %ax 
        je         jns_instr__hla_3722
        cmpw       $31342, %ax 
        je         jnz_instr__hla_3723
        cmpw       $25968, %ax 
        je         jpe_instr__hla_3707
        cmpw       $28528, %ax 
        je         jpo_instr__hla_3724
        call       unknownStmt__hla_3409
        jmp        Done__hla_3702

jmp_instr__hla_3709:
        pushl      $32 
        call       initStmt__hla_3564
        movb       $17, 8(%eax) 
        movb       $235, 29(%eax) 
        movb       $233, 30(%eax) 
        movb       $1, 31(%eax) 
        addl       $3, %ebx 
        call       getDisp__hla_3586
        jmp        Done__hla_3702

jnc_instr__hla_3716:

jnb_instr__hla_3715:

jae_instr__hla_3710:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3564
        movb       $15, 8(%eax) 
        movb       $115, 29(%eax) 
        movw       $33551, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3586
        jmp        Done__hla_3702

jna_instr__hla_3714:

jbe_instr__hla_3711:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3564
        movb       $15, 8(%eax) 
        movb       $118, 29(%eax) 
        movw       $34319, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3586
        jmp        Done__hla_3702

jnl_instr__hla_3719:

jge_instr__hla_3712:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3564
        movb       $15, 8(%eax) 
        movb       $125, 29(%eax) 
        movw       $36111, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3586
        jmp        Done__hla_3702

jng_instr__hla_3718:

jle_instr__hla_3713:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3564
        movb       $15, 8(%eax) 
        movb       $126, 29(%eax) 
        movw       $36367, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3586
        jmp        Done__hla_3702

jne_instr__hla_3717:

jnz_instr__hla_3723:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3564
        movb       $15, 8(%eax) 
        movb       $117, 29(%eax) 
        movw       $34063, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3586
        jmp        Done__hla_3702

jno_instr__hla_3720:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3564
        movb       $15, 8(%eax) 
        movb       $113, 29(%eax) 
        movw       $33039, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3586
        jmp        Done__hla_3702

jnp_instr__hla_3721:

jpo_instr__hla_3724:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3564
        movb       $15, 8(%eax) 
        movb       $123, 29(%eax) 
        movw       $35599, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3586
        jmp        Done__hla_3702

jns_instr__hla_3722:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3564
        movb       $15, 8(%eax) 
        movb       $121, 29(%eax) 
        movw       $35087, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3586
        jmp        Done__hla_3702
        jmp        endif__hla_3691
false__hla_3708:
        cmpb       $32, %dl 
        jne        false__hla_3725
        cmpl       $543514990, %eax 
        je         jnae_instr__hla_3704
        cmpl       $543515246, %eax 
        je         jnbe_instr__hla_3703
        cmpl       $543516526, %eax 
        je         jnge_instr__hla_3706
        cmpl       $543517806, %eax 
        je         jnle_instr__hla_3705
        cmpl       $544897123, %eax 
        je         jcxz_instr__hla_3726
        call       unknownStmt__hla_3409
        jmp        Done__hla_3702

jcxz_instr__hla_3726:
        addl       $4, %ebx 
        pushl      $31 
        call       initStmt__hla_3564
        movb       $14, 8(%eax) 
        movw       $58215, 29(%eax) 
        call       getDisp__hla_3586
        jmp        Done__hla_3702
        jmp        endif__hla_3691
false__hla_3725:
        cmpl       $2054710117, %eax 
        jne        false__hla_3727
        cmpb       $32, 5(%ebx) 
        jne        false__hla_3727
        addl       $5, %ebx 
        pushl      $30 
        call       initStmt__hla_3564
        movb       $13, 8(%eax) 
        movb       $227, 29(%eax) 
        call       getDisp__hla_3586
        jmp        Done__hla_3702
        jmp        endif__hla_3691
false__hla_3727:
        call       unknownStmt__hla_3409
endif__hla_3691:
        jmp        endif__hla_3689
false__hla_3690:
        cmpb       $108, %al 
        jne        false__hla_3729
        lea        7(%ebx), %ecx 
        cmpl       end_source__hla_3358, %ecx 
        jnb        false__hla_3729
        cmpb       $111, 1(%ebx) 
        jne        false__hla_3729
        cmpb       $111, 2(%ebx) 
        jne        false__hla_3729
        cmpb       $112, 3(%ebx) 
        jne        false__hla_3729
        mov        4(%ebx), %al 
        cmpb       $32, %al 
        je         L3735__hla_
        cmpb       $101, %al 
        jne        L3738__hla_
        cmpb       $32, 5(%ebx) 
        je         L3735__hla_
L3738__hla_:
        cmpb       $122, %al 
        jne        L3739__hla_
        cmpb       $32, 5(%ebx) 
        je         L3735__hla_
L3739__hla_:
        mov        5(%ebx), %ah 
        cmpb       $110, %al 
        jne        false__hla_3729
        cmpb       $101, %ah 
        jne        L3742__hla_
        cmpb       $32, 6(%ebx) 
        je         L3741__hla_
L3742__hla_:
        cmpb       $122, %ah 
        jne        false__hla_3729
        cmpb       $32, 6(%ebx) 
        jne        false__hla_3729
L3741__hla_:
L3735__hla_:
        cmpb       $32, %al 
        jne        false__hla_3744
        addl       $4, %ebx 
        pushl      $30 
        call       initStmt__hla_3564
        movb       $13, 8(%eax) 
        movb       $226, 29(%eax) 
        call       getDisp__hla_3586
        jmp        Done__hla_3702
        jmp        endif__hla_3744
false__hla_3744:
        cmpb       $101, %al 
        je         L3746__hla_
        cmpb       $122, %al 
        jne        false__hla_3745
L3746__hla_:
        addl       $5, %ebx 
        pushl      $30 
        call       initStmt__hla_3564
        movb       $13, 8(%eax) 
        movb       $225, 29(%eax) 
        call       getDisp__hla_3586
        jmp        Done__hla_3702
        jmp        endif__hla_3744
false__hla_3745:
        cmpb       $110, %al 
        jne        false__hla_3747
        cmpb       $101, %ah 
        je         L3749__hla_
        cmpb       $122, %ah 
        jne        false__hla_3747
L3749__hla_:
        addl       $6, %ebx 
        pushl      $30 
        call       initStmt__hla_3564
        movb       $13, 8(%eax) 
        movb       $224, 29(%eax) 
        call       getDisp__hla_3586
        jmp        Done__hla_3702
        jmp        endif__hla_3744
false__hla_3747:
        call       skipToEoln__hla_3362
endif__hla_3744:
        jmp        endif__hla_3689
false__hla_3729:
        cmpb       $99, %al 
        jne        false__hla_3750
        addl       $5, %ebx 
        cmpl       end_source__hla_3358, %ebx 
        jnb        false__hla_3750
        cmpb       $97, -4(%ebx) 
        jne        false__hla_3750
        cmpb       $108, -3(%ebx) 
        jne        false__hla_3750
        cmpb       $108, -2(%ebx) 
        jne        false__hla_3750
        cmpb       $32, -1(%ebx) 
        jne        false__hla_3750
        pushl      $30 
        call       initStmt__hla_3564
        movb       $16, 8(%eax) 
        movb       $232, 29(%eax) 
        call       getDisp__hla_3586
        jmp        endif__hla_3689
false__hla_3750:
        call       unknownStmt__hla_3409
endif__hla_3689:

Done__hla_3702:
endif__hla_3608:
        jmp        forever__hla_3603
exitloop__hla_3602:

        call       emitDummy__hla_3594
xlexer__hla_:
        pushl      %edi 
        pushl      %ecx 
        mov        16(%ebp), %edi 
        mov        -5136(%ebp), %ecx 
        mov        %ecx, (%edi) 
        mov        12(%ebp), %edi 
        mov        -5140(%ebp), %ecx 
        mov        %ecx, (%edi) 
        mov        8(%ebp), %edi 
        mov        -5144(%ebp), %ecx 
        mov        %ecx, (%edi) 
        popl       %ecx 
        popl       %edi 
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $20
End_lexer_3758:
  .size lexer,End_lexer_3758-lexer



        .type      addCOFFsym__hla_3761,@function

addCOFFsym__hla_3761:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        cld
        pushl      numCOFFsyms__hla_3312 
        imul       $18, numCOFFsyms__hla_3312, %ebx 
        movzbl     12(%ebp), %eax 
        addl       $1, %eax 
        imul       $18, %eax, %eax 
        addl       %ebx, %eax 
        cmpl       coffSymSize__hla_3313, %eax 
        jna        false__hla_3764
        shll       $1, coffSymSize__hla_3313 
        pushl      COFFsyms__hla_3311 
        pushl      coffSymSize__hla_3313 
        call       MEM_REALLOC
        mov        %eax, COFFsyms__hla_3311 
false__hla_3764:
        addl       COFFsyms__hla_3311, %ebx 
        mov        32(%ebp), %esi 
        pushl      %esi 
        call       STR_LENGTH
        movl       %eax, %ecx 
        cmpl       $8, %eax 
        jnbe       false__hla_3765
        movl       $0, (%ebx) 
        movl       $0, 4(%ebx) 
        lea        (%ebx), %edi 
        rep movsb
        jmp        endif__hla_3765
false__hla_3765:
        mov        strTblOffset__hla_3318, %edx 
        lea        1(%edx,%ecx,1), %eax 
        mov        %eax, strTblOffset__hla_3318 
        cmpl       strTblSize__hla_3319, %eax 
        jna        false__hla_3766
        pushl      %eax 
        shll       $1, strTblSize__hla_3319 
        pushl      stringTable__hla_3317 
        pushl      strTblSize__hla_3319 
        call       MEM_REALLOC
        mov        %eax, stringTable__hla_3317 
        popl       %eax 
false__hla_3766:
        movl       %edx, %edi 
        addl       stringTable__hla_3317, %edi 
        rep movsb
        movb       $0, (%edi) 
        movl       $0, (%ebx) 
        mov        %edx, 4(%ebx) 
endif__hla_3765:
        mov        28(%ebp), %eax 
        mov        %eax, 8(%ebx) 
        mov        24(%ebp), %ax 
        mov        %ax, 12(%ebx) 
        mov        20(%ebp), %ax 
        mov        %ax, 14(%ebx) 
        mov        16(%ebp), %al 
        mov        %al, 16(%ebx) 
        movzbl     12(%ebp), %eax 
        mov        %al, 17(%ebx) 
        testb      %al, %al 
        je         false__hla_3767
        mov        8(%ebp), %esi 
        imul       $18, numCOFFsyms__hla_3312, %edi 
        addl       $18, %edi 
        addl       COFFsyms__hla_3311, %edi 
        imul       $18, %eax, %ecx 
        rep movsb
false__hla_3767:
        movzbl     12(%ebp), %eax 
        addl       $1, %eax 
        addl       %eax, numCOFFsyms__hla_3312 
        popl       %eax 
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
xaddCOFFsym__hla_3761__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $28
End_addCOFFsym__hla_3761_3770:
  .size addCOFFsym__hla_3761,End_addCOFFsym__hla_3761_3770-addCOFFsym__hla_3761



        .type      addELFsym__hla_3773,@function

addELFsym__hla_3773:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        cld
        imul       $16, numELFsyms__hla_3315, %ebx 
        lea        16(%ebx), %eax 
        cmpl       elfSymSize__hla_3316, %eax 
        jna        false__hla_3776
        shll       $1, elfSymSize__hla_3316 
        pushl      ELFsyms__hla_3314 
        pushl      elfSymSize__hla_3316 
        call       MEM_REALLOC
        mov        %eax, ELFsyms__hla_3314 
false__hla_3776:
        addl       ELFsyms__hla_3314, %ebx 
        xorl       %edx, %edx 
        mov        28(%ebp), %esi 
        cmpl       $0, %esi 
        je         false__hla_3777
        pushl      %esi 
        call       STR_LENGTH
        movl       %eax, %ecx 
        mov        strTblOffset__hla_3318, %edx 
        lea        1(%edx,%ecx,1), %eax 
        mov        %eax, strTblOffset__hla_3318 
        cmpl       strTblSize__hla_3319, %eax 
        jna        false__hla_3778
        shll       $1, strTblSize__hla_3319 
        pushl      stringTable__hla_3317 
        pushl      strTblSize__hla_3319 
        call       MEM_REALLOC
        mov        %eax, stringTable__hla_3317 
false__hla_3778:
        movl       %edx, %edi 
        addl       stringTable__hla_3317, %edi 
        rep movsb
        movb       $0, (%edi) 
false__hla_3777:
        mov        %edx, (%ebx) 
        mov        24(%ebp), %eax 
        mov        %eax, 4(%ebx) 
        mov        20(%ebp), %eax 
        mov        %eax, 8(%ebx) 
        mov        16(%ebp), %al 
        mov        %al, 12(%ebx) 
        mov        8(%ebp), %al 
        andb       $3, %al 
        mov        %al, 13(%ebx) 
        mov        12(%ebp), %ax 
        mov        %ax, 14(%ebx) 
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
xaddELFsym__hla_3773__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $24
End_addELFsym__hla_3773_3781:
  .size addELFsym__hla_3773,End_addELFsym__hla_3773_3781-addELFsym__hla_3773



        .type      buildRaw__hla_3784,@function

buildRaw__hla_3784:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $4, %esp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %edi 
        pushl      %esi 
        movl       $0, -4(%ebp) 
        mov        24(%ebp), %esi 
        cmpb       $0, 8(%ebp) 
        jne        false__hla_3787
        cmpl       $65535, 20(%ebp) 
        jnae       false__hla_3788
        movl       $1, -4(%ebp) 
        addl       $10, %esi 
false__hla_3788:
false__hla_3787:
        mov        28(%ebp), %ebx 
        mov        16(%ebp), %edi 
        jmp        continue__hla_3789
while__hla_3789:
        movzbl     8(%ebx), %eax 
        cmpl       $20, %eax 
        jg         default__hla_3791
        jmp *      jmpTbl__hla_3791(,%eax,4) 
case__hla_3792:
        jmp        endswitch__hla_3791
case__hla_3793:
        mov        9(%ebx), %ecx 
        movl       %ecx, %edx 
        mov        13(%ebx), %eax 
        subl       $1, %eax 
        addl       %eax, %ecx 
        notl       %eax 
        andl       %eax, %ecx 
        subl       %edx, %ecx 
        jz         false__hla_3794
        cmpb       $1, 12(%ebp) 
        jne        false__hla_3795
        jmp        continue__hla_3796
while__hla_3796:
        mov        $2401421, %eax 
        stosl
        mov        $0, %ax 
        stosw
        stosb
        subl       $7, %ecx 
continue__hla_3796:
        cmpl       $7, %ecx 
        jae        while__hla_3796
exitloop__hla_3796:

        cmpl       $6, %ecx 
        jne        false__hla_3798
        mov        $39821, %eax 
        stosl
        mov        $0, %ax 
        stosw
false__hla_3798:
        cmpl       $5, %ecx 
        jne        false__hla_3799
        mov        $2385037, %eax 
        stosl
        mov        $144, %al 
        stosb
false__hla_3799:
        cmpl       $4, %ecx 
        jne        false__hla_3800
        mov        $2385037, %eax 
        stosl
false__hla_3800:
        cmpl       $3, %ecx 
        jne        false__hla_3801
        mov        $18829, %ax 
        stosw
        mov        $0, %al 
        stosb
false__hla_3801:
        cmpl       $2, %ecx 
        jne        false__hla_3802
        mov        $65419, %ax 
        stosw
false__hla_3802:
        cmpl       $1, %ecx 
        jne        false__hla_3803
        mov        $144, %al 
        stosb
false__hla_3803:
        jmp        endif__hla_3795
false__hla_3795:
        xorl       %eax, %eax 
        rep stosb
endif__hla_3795:
false__hla_3794:
        jmp        endswitch__hla_3791
case__hla_3804:
        cmpb       $3, 12(%ebp) 
        je         false__hla_3805
        pushl      $str__hla_3806 
        call       STDERR_PUTS
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3805:
        jmp        endswitch__hla_3791
case__hla_3807:
        pushl      %esi 
        mov        13(%ebx), %ecx 
        testl      %ecx, %ecx 
        je         false__hla_3808
        lea        17(%ebx), %esi 
        rep movsb
false__hla_3808:
        popl       %esi 
        jmp        endswitch__hla_3791
case__hla_3809:
        cmpb       $1, 12(%ebp) 
        je         false__hla_3810
        pushl      $str__hla_3811 
        call       STDERR_PUTS
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3810:
        jmp        endswitch__hla_3791
case__hla_3812:
        cmpb       $2, 12(%ebp) 
        je         false__hla_3813
        pushl      $str__hla_3814 
        call       STDERR_PUTS
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3813:
        jmp        endswitch__hla_3791
case__hla_3815:
        mov        17(%ebx), %ecx 
        mov        21(%ebx), %eax 
        cmpl       $2, 13(%ebx) 
        jb         byteDup__hla_3816
        ja         dwordDup__hla_3817
        rep stosw
        jmp        done__hla_3818

byteDup__hla_3816:
        rep stosb
        jmp        done__hla_3818

dwordDup__hla_3817:
        rep stosl

done__hla_3818:
        jmp        endswitch__hla_3791
case__hla_3819:
        mov        29(%ebx), %al 
        stosb
        mov        13(%ebx), %eax 
        stosb
        jmp        endswitch__hla_3791
case__hla_3820:
        mov        29(%ebx), %ax 
        stosw
        mov        13(%ebx), %eax 
        stosb
        jmp        endswitch__hla_3791
case__hla_3821:
        cmpb       $1, 32(%ebx) 
        jne        false__hla_3822
        mov        29(%ebx), %al 
        stosb
        mov        13(%ebx), %eax 
        stosb
        jmp        endif__hla_3822
false__hla_3822:
        mov        30(%ebx), %ax 
        stosw
        mov        13(%ebx), %eax 
        stosl
        cmpl       $0, 17(%ebx) 
        je         false__hla_3823
        mov        17(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        16(%eax), %dl 
        testb      $1, 17(%eax) 
        jnz        L3825__hla_
        cmpb       12(%ebp), %dl 
        je         false__hla_3824
L3825__hla_:
        cmpb       $0, 8(%ebp) 
        jne        false__hla_3826
        mov        8(%eax), %eax 
        mov        %eax, 4(%esi) 
        mov        9(%ebx), %eax 
        addl       $2, %eax 
        mov        %eax, (%esi) 
        movw       $20, 8(%esi) 
        addl       $10, %esi 
        jmp        endif__hla_3826
false__hla_3826:
        cmpb       $3, 8(%ebp) 
        jnbe       false__hla_3827
        mov        9(%ebx), %edx 
        addl       $2, %edx 
        mov        %edx, (%esi) 
        mov        8(%eax), %eax 
        shll       $8, %eax 
        orl        $2, %eax 
        mov        %eax, 4(%esi) 
        addl       $8, %esi 
        jmp        endif__hla_3826
false__hla_3827:
        pushl      $str__hla_3828 
        call       STDERR_PUTS
endif__hla_3826:
        mov        21(%ebx), %eax 
        mov        %eax, -4(%edi) 
false__hla_3824:
false__hla_3823:
endif__hla_3822:
        jmp        endswitch__hla_3791
case__hla_3829:
        cmpb       $1, 31(%ebx) 
        jne        false__hla_3830
        mov        29(%ebx), %al 
        stosb
        mov        13(%ebx), %eax 
        stosb
        jmp        endif__hla_3830
false__hla_3830:
        mov        30(%ebx), %al 
        stosb
        mov        13(%ebx), %eax 
        stosl
        cmpl       $0, 17(%ebx) 
        je         false__hla_3831
        mov        17(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        16(%eax), %dl 
        testb      $1, 17(%eax) 
        jnz        L3833__hla_
        cmpb       12(%ebp), %dl 
        je         false__hla_3832
L3833__hla_:
        cmpb       $0, 8(%ebp) 
        jne        false__hla_3834
        mov        8(%eax), %eax 
        mov        %eax, 4(%esi) 
        mov        9(%ebx), %eax 
        addl       $1, %eax 
        mov        %eax, (%esi) 
        movw       $20, 8(%esi) 
        addl       $10, %esi 
        mov        21(%ebx), %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3834
false__hla_3834:
        cmpb       $3, 8(%ebp) 
        jnbe       false__hla_3835
        mov        9(%ebx), %edx 
        addl       $1, %edx 
        mov        %edx, (%esi) 
        mov        8(%eax), %edx 
        shll       $8, %edx 
        orl        $2, %edx 
        mov        %edx, 4(%esi) 
        addl       $8, %esi 
        mov        $-4, %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3834
false__hla_3835:
        pushl      $str__hla_3828 
        call       STDERR_PUTS
endif__hla_3834:
false__hla_3832:
false__hla_3831:
endif__hla_3830:
        jmp        endswitch__hla_3791
case__hla_3836:
        mov        29(%ebx), %al 
        stosb
        mov        13(%ebx), %eax 
        stosl
        cmpl       $0, 17(%ebx) 
        je         false__hla_3837
        mov        17(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        16(%eax), %dl 
        testb      $1, 17(%eax) 
        jnz        L3839__hla_
        cmpb       12(%ebp), %dl 
        je         false__hla_3838
L3839__hla_:
        cmpb       $0, 8(%ebp) 
        jne        false__hla_3840
        mov        8(%eax), %eax 
        mov        %eax, 4(%esi) 
        mov        9(%ebx), %eax 
        addl       $1, %eax 
        mov        %eax, (%esi) 
        movw       $20, 8(%esi) 
        addl       $10, %esi 
        mov        21(%ebx), %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3840
false__hla_3840:
        cmpb       $3, 8(%ebp) 
        jnbe       false__hla_3841
        mov        9(%ebx), %edx 
        addl       $1, %edx 
        mov        %edx, (%esi) 
        mov        8(%eax), %eax 
        shll       $8, %eax 
        orl        $2, %eax 
        mov        %eax, 4(%esi) 
        addl       $8, %esi 
        mov        $-4, %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3840
false__hla_3841:
        pushl      $str__hla_3828 
        call       STDERR_PUTS
endif__hla_3840:
false__hla_3838:
false__hla_3837:
        jmp        endswitch__hla_3791
case__hla_3842:
        mov        17(%ebx), %eax 
        stosl
        cmpl       $0, 13(%ebx) 
        je         false__hla_3843
        cmpb       $0, 8(%ebp) 
        jne        false__hla_3844
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        8(%eax), %eax 
        mov        %eax, 4(%esi) 
        mov        9(%ebx), %eax 
        mov        %eax, (%esi) 
        movw       $6, 8(%esi) 
        addl       $10, %esi 
        jmp        endif__hla_3844
false__hla_3844:
        cmpb       $3, 8(%ebp) 
        jnbe       false__hla_3845
        mov        9(%ebx), %edx 
        mov        %edx, (%esi) 
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        8(%eax), %edx 
        shll       $8, %edx 
        orl        $1, %edx 
        mov        %edx, 4(%esi) 
        addl       $8, %esi 
        jmp        endif__hla_3844
false__hla_3845:
        pushl      $str__hla_3828 
        call       STDERR_PUTS
endif__hla_3844:
false__hla_3843:
        jmp        endswitch__hla_3791
case__hla_3846:
        mov        13(%ebx), %ecx 
        testl      %ecx, %ecx 
        je         false__hla_3847
        xorl       %eax, %eax 
        rep stosb
false__hla_3847:
        jmp        endswitch__hla_3791
default__hla_3791:
        pushl      $str__hla_3848 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTU8
        call       STDERR_NEWLN
endswitch__hla_3791:
        mov        4(%ebx), %ebx 
continue__hla_3789:
        cmpl       $0, %ebx 
        jne        while__hla_3789
exitloop__hla_3789:

        popl       %esi 
        popl       %edi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
xbuildRaw__hla_3784__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $24
End_buildRaw__hla_3784_3851:
  .size buildRaw__hla_3784,End_buildRaw__hla_3784_3851-buildRaw__hla_3784



        .type      sectionPass__hla_3859,@function

sectionPass__hla_3859:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        xorl       %ecx, %ecx 
        mov        12(%ebp), %ebx 
        jmp        continue__hla_3862
while__hla_3862:
        mov        %ecx, 9(%ebx) 
        movzbl     8(%ebx), %eax 
        cmpl       $20, %eax 
        jg         default__hla_3864
        jmp *      jmpTbl__hla_3864(,%eax,4) 
case__hla_3865:
        jmp        endswitch__hla_3864
case__hla_3866:
        movb       $1, currentSection 
        jmp        endswitch__hla_3864
case__hla_3867:
        movb       $2, currentSection 
        jmp        endswitch__hla_3864
case__hla_3868:
        movb       $3, currentSection 
        jmp        endswitch__hla_3864
case__hla_3869:
        mov        13(%ebx), %eax 
        subl       $1, %eax 
        addl       %eax, %ecx 
        notl       %eax 
        andl       %eax, %ecx 
        jmp        endswitch__hla_3864
case__hla_3870:
        addl       13(%ebx), %ecx 
        jmp        endswitch__hla_3864
case__hla_3871:
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        %ecx, 12(%eax) 
        mov        currentSection, %dl 
        mov        %dl, 16(%eax) 
        jmp        endswitch__hla_3864
case__hla_3872:
        addl       13(%ebx), %ecx 
        jmp        endswitch__hla_3864
case__hla_3873:
        mov        13(%ebx), %eax 
        imull      17(%ebx), %eax 
        addl       %eax, %ecx 
        jmp        endswitch__hla_3864
case__hla_3874:
        addl       $2, %ecx 
        mov        17(%ebx), %eax 
        cmpl       $0, %eax 
        je         false__hla_3875
        mov        4(%eax), %edx 
        cmpl       $0, %edx 
        je         false__hla_3876
        mov        17(%edx), %dl 
        testb      $1, %dl 
        jz         false__hla_3877
        pushl      $str__hla_3878 
        call       STDERR_PUTS
        pushl      8(%eax) 
        call       STDERR_PUTS
        pushl      $str__hla_3879 
        call       STDERR_PUTS
        call       printLineNumberChain
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_3877:
false__hla_3876:
false__hla_3875:
        jmp        endswitch__hla_3864
case__hla_3880:
        addl       $1, %ecx 
        mov        8(%ebp), %eax 
        addl       %eax, %ecx 
        mov        %al, 32(%ebx) 
        cmpb       $1, %al 
        jna        false__hla_3881
        addl       $1, %ecx 
false__hla_3881:
        jmp        endswitch__hla_3864
case__hla_3882:
        mov        8(%ebp), %eax 
        lea        1(%ecx,%eax,1), %ecx 
        mov        %al, 31(%ebx) 
        jmp        endswitch__hla_3864
case__hla_3883:
        addl       $3, %ecx 
        jmp        endswitch__hla_3864
case__hla_3884:
        addl       $5, %ecx 
        jmp        endswitch__hla_3864
case__hla_3885:
        addl       $4, %ecx 
        jmp        endswitch__hla_3864
default__hla_3864:
        pushl      $str__hla_3848 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTU8
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
endswitch__hla_3864:
        mov        4(%ebx), %ebx 
continue__hla_3862:
        cmpl       $0, %ebx 
        jne        while__hla_3862
exitloop__hla_3862:

        popl       %edx 
        popl       %ecx 
        popl       %ebx 
xsectionPass__hla_3859__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $8
End_sectionPass__hla_3859_3888:
  .size sectionPass__hla_3859,End_sectionPass__hla_3859_3888-sectionPass__hla_3859



        .type      firstPass__hla_3856,@function

firstPass__hla_3856:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $8, %esp 
        movb       $1, currentSection 
        pushl      20(%ebp) 
        pushl      8(%ebp) 
        call       sectionPass__hla_3859
        movb       $2, currentSection 
        pushl      16(%ebp) 
        pushl      8(%ebp) 
        call       sectionPass__hla_3859
        movb       $3, currentSection 
        pushl      12(%ebp) 
        pushl      8(%ebp) 
        call       sectionPass__hla_3859
xfirstPass__hla_3856__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $16
End_firstPass__hla_3856_3893:
  .size firstPass__hla_3856,End_firstPass__hla_3856_3893-firstPass__hla_3856



        .type      computeDisplacement__hla_3899,@function

computeDisplacement__hla_3899:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        mov        12(%ebp), %ecx 
        mov        8(%ebp), %ebx 
        mov        17(%ebx), %eax 
        mov        4(%eax), %edx 
        testb      $9, 17(%edx) 
        jnz        false__hla_3902
        pushl      $str__hla_3903 
        call       STDERR_PUTS
        pushl      8(%eax) 
        call       STDERR_PUTS
        call       STDERR_NEWLN
        call       printLineNumberChain
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_3902:
        mov        16(%edx), %al 
        mov        17(%edx), %ah 
        andb       $3, %ah 
        testb      %al, %al 
        jne        false__hla_3904
        mov        $1, %eax 
        jmp        endif__hla_3904
false__hla_3904:
        cmpb       $1, %ah 
        jne        false__hla_3905
        mov        $4, %eax 
        jmp        endif__hla_3904
false__hla_3905:
        cmpb       currentSection, %al 
        je         false__hla_3906
        mov        $4, %eax 
        jmp        endif__hla_3904
false__hla_3906:
        mov        12(%edx), %eax 
        subl       %ecx, %eax 
        mov        %eax, 13(%ebx) 
        cmpl       $-128, %eax 
        jnge       false__hla_3907
        cmpl       $127, %eax 
        jnle       false__hla_3907
        mov        $1, %eax 
        jmp        endif__hla_3907
false__hla_3907:
        mov        $4, %eax 
endif__hla_3907:
endif__hla_3904:
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
xcomputeDisplacement__hla_3899__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $8
End_computeDisplacement__hla_3899_3911:
  .size computeDisplacement__hla_3899,End_computeDisplacement__hla_3899_3911-computeDisplacement__hla_3899



        .type      doPhase__hla_3914,@function

doPhase__hla_3914:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $4, %esp 
        xorl       %ecx, %ecx 
        mov        16(%ebp), %ebx 
        jmp        continue__hla_3917
while__hla_3917:
        mov        9(%ebx), %eax 
        mov        %eax, -4(%ebp) 
        mov        %ecx, 9(%ebx) 
        movzbl     8(%ebx), %eax 
        cmpl       $20, %eax 
        jg         default__hla_3919
        jmp *      jmpTbl__hla_3919(,%eax,4) 
case__hla_3920:
        jmp        endswitch__hla_3919
case__hla_3921:
        movb       $1, currentSection 
        jmp        endswitch__hla_3919
case__hla_3922:
        movb       $2, currentSection 
        jmp        endswitch__hla_3919
case__hla_3923:
        movb       $3, currentSection 
        jmp        endswitch__hla_3919
case__hla_3924:
        mov        -4(%ebp), %eax 
        cmpl       9(%ebx), %eax 
        je         false__hla_3925
        mov        12(%ebp), %eax 
        movb       $1, (%eax) 
false__hla_3925:
        jmp        endswitch__hla_3919
case__hla_3926:
        mov        13(%ebx), %eax 
        subl       $1, %eax 
        addl       %eax, %ecx 
        notl       %eax 
        andl       %eax, %ecx 
        mov        4(%ebx), %eax 
        cmpl       9(%eax), %ecx 
        je         false__hla_3927
        mov        12(%ebp), %edx 
        movb       $1, (%edx) 
false__hla_3927:
        jmp        endswitch__hla_3919
case__hla_3928:
        addl       13(%ebx), %ecx 
        jmp        endswitch__hla_3919
case__hla_3929:
        addl       13(%ebx), %ecx 
        jmp        endswitch__hla_3919
case__hla_3930:
        mov        13(%ebx), %eax 
        imull      17(%ebx), %eax 
        addl       %eax, %ecx 
        jmp        endswitch__hla_3919
case__hla_3931:
        addl       $2, %ecx 
        mov        -4(%ebp), %eax 
        addl       $2, %eax 
        pushl      %eax 
        pushl      %ebx 
        call       computeDisplacement__hla_3899
        jmp        endswitch__hla_3919
case__hla_3932:
        mov        $2, %eax 
        mov        $1, %edx 
        cmpb       $4, 32(%ebx) 
        jne        false__hla_3933
        addl       $3, %edx 
        addl       $4, %eax 
false__hla_3933:
        addl       %eax, %ecx 
        addl       -4(%ebp), %eax 
        pushl      %eax 
        pushl      %ebx 
        call       computeDisplacement__hla_3899
        cmpb       %dl, %al 
        je         false__hla_3934
        cmpb       8(%ebp), %al 
        jne        false__hla_3934
        mov        %al, 32(%ebx) 
        mov        12(%ebp), %edx 
        movb       $1, (%edx) 
false__hla_3934:
        jmp        endswitch__hla_3919
case__hla_3936:
        addl       $1, %ecx 
        movzbl     31(%ebx), %edx 
        addl       %edx, %ecx 
        mov        -4(%ebp), %eax 
        addl       $1, %eax 
        addl       %edx, %eax 
        pushl      %eax 
        pushl      %ebx 
        call       computeDisplacement__hla_3899
        cmpb       %dl, %al 
        je         false__hla_3937
        cmpb       8(%ebp), %al 
        jne        false__hla_3937
        mov        8(%ebp), %al 
        mov        %al, 31(%ebx) 
        mov        12(%ebp), %edx 
        movb       $1, (%edx) 
false__hla_3937:
        jmp        endswitch__hla_3919
case__hla_3939:
        addl       $3, %ecx 
        mov        -4(%ebp), %eax 
        addl       $3, %eax 
        pushl      %eax 
        pushl      %ebx 
        call       computeDisplacement__hla_3899
        jmp        endswitch__hla_3919
case__hla_3940:
        addl       $5, %ecx 
        mov        -4(%ebp), %eax 
        addl       $5, %eax 
        pushl      %eax 
        pushl      %ebx 
        call       computeDisplacement__hla_3899
        jmp        endswitch__hla_3919
case__hla_3941:
        addl       $4, %ecx 
        jmp        endswitch__hla_3919
default__hla_3919:
        pushl      $str__hla_3848 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTU8
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
endswitch__hla_3919:
        mov        4(%ebx), %ebx 
continue__hla_3917:
        cmpl       $0, %ebx 
        jne        while__hla_3917
exitloop__hla_3917:

        mov        16(%ebp), %ebx 
        jmp        continue__hla_3942
while__hla_3942:
        cmpb       $3, 8(%ebx) 
        jne        false__hla_3944
        mov        9(%ebx), %edx 
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        cmpl       12(%eax), %edx 
        je         false__hla_3945
        mov        %edx, 12(%eax) 
        mov        12(%ebp), %edx 
        movb       $1, (%edx) 
false__hla_3945:
false__hla_3944:
        mov        4(%ebx), %ebx 
continue__hla_3942:
        cmpl       $0, %ebx 
        jne        while__hla_3942
exitloop__hla_3942:

xdoPhase__hla_3914__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $12
End_doPhase__hla_3914_3948:
  .size doPhase__hla_3914,End_doPhase__hla_3914_3948-doPhase__hla_3914



        .type      dispPhase__hla_3896,@function

dispPhase__hla_3896:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $20, %esp 
        mov        %ebx, -4(%ebp) 
        mov        %ecx, -8(%ebp) 
        mov        %edx, -12(%ebp) 
        movl       $0, -16(%ebp) 
false__hla_3951:
repeat__hla_3951:
        movb       $0, -17(%ebp) 
        pushl      16(%ebp) 
        pushl      %ebp 
        addl       $-17, (%esp) 
        pushl      8(%ebp) 
        call       doPhase__hla_3914
        pushl      12(%ebp) 
        pushl      %ebp 
        addl       $-17, (%esp) 
        pushl      8(%ebp) 
        call       doPhase__hla_3914
        addl       $1, -16(%ebp) 
        cmpl       $16384, -16(%ebp) 
        ja         exitloop__hla_3951
continue__hla_3951:
        cmpb       $0, -17(%ebp) 
        jne        repeat__hla_3951
exitloop__hla_3951:

        mov        -16(%ebp), %eax 
        mov        -4(%ebp), %ebx 
        mov        -8(%ebp), %ecx 
        mov        -12(%ebp), %edx 
xdispPhase__hla_3896__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $12
End_dispPhase__hla_3896_3955:
  .size dispPhase__hla_3896,End_dispPhase__hla_3896_3955-dispPhase__hla_3896



        .type      cleanupPass__hla_3961,@function

cleanupPass__hla_3961:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %esi 
        mov        12(%ebp), %ebx 
        xorl       %esi, %esi 
        jmp        continue__hla_3964
while__hla_3964:
        mov        9(%ebx), %ecx 
        movzbl     8(%ebx), %eax 
        cmpl       $20, %eax 
        jg         default__hla_3966
        jmp *      jmpTbl__hla_3966(,%eax,4) 
case__hla_3967:
        jmp        endswitch__hla_3966
case__hla_3968:
        mov        13(%ebx), %edx 
        mov        4(%edx), %eax 
        mov        %ecx, 12(%eax) 
        testb      $9, 17(%eax) 
        jnz        false__hla_3969
        pushl      $str__hla_3970 
        call       STDERR_PUTS
        pushl      8(%edx) 
        call       STDERR_PUTS
        pushl      $str__hla_3971 
        call       STDERR_PUTS
        call       printLineNumberChain
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3969:
        jmp        endswitch__hla_3966
case__hla_3972:
        mov        13(%ebx), %eax 
        cmpl       $-128, %eax 
        jl         L3974__hla_
        cmpl       $127, %eax 
        jng        false__hla_3973
L3974__hla_:
        pushl      $str__hla_3975 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTI32
        pushl      $str__hla_3976 
        call       STDERR_PUTS
        call       printLineNumberChain
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_3973:
        jmp        endswitch__hla_3966
case__hla_3977:
        mov        13(%ebx), %eax 
        cmpl       $-128, %eax 
        jl         L3979__hla_
        cmpl       $127, %eax 
        jng        false__hla_3978
L3979__hla_:
        pushl      $str__hla_3975 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTI32
        pushl      $str__hla_3976 
        call       STDERR_PUTS
        call       printLineNumberChain
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_3978:
        jmp        endswitch__hla_3966
case__hla_3980:
        cmpb       $4, 32(%ebx) 
        jne        false__hla_3981
        cmpl       $0, 17(%ebx) 
        je         false__hla_3982
        mov        17(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        16(%eax), %dl 
        mov        17(%eax), %dh 
        andb       $3, %dh 
        cmpb       $1, %dh 
        je         L3984__hla_
        cmpb       8(%ebp), %dl 
        je         false__hla_3983
L3984__hla_:
        addl       $1, %esi 
false__hla_3983:
false__hla_3982:
false__hla_3981:
        jmp        endswitch__hla_3966
case__hla_3985:
        cmpb       $4, 31(%ebx) 
        jne        false__hla_3986
        cmpl       $0, 17(%ebx) 
        je         false__hla_3987
        mov        17(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        16(%eax), %dl 
        mov        17(%eax), %dh 
        andb       $3, %dh 
        cmpb       $1, %dh 
        je         L3989__hla_
        cmpb       8(%ebp), %dl 
        je         false__hla_3988
L3989__hla_:
        addl       $1, %esi 
false__hla_3988:
false__hla_3987:
false__hla_3986:
        jmp        endswitch__hla_3966
case__hla_3990:
        cmpl       $0, 17(%ebx) 
        je         false__hla_3991
        mov        17(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        16(%eax), %dl 
        testb      $1, 17(%eax) 
        jnz        L3993__hla_
        cmpb       8(%ebp), %dl 
        je         false__hla_3992
L3993__hla_:
        addl       $1, %esi 
false__hla_3992:
false__hla_3991:
        jmp        endswitch__hla_3966
case__hla_3994:
        addl       $1, %esi 
        jmp        endswitch__hla_3966
default__hla_3966:
        pushl      $str__hla_3848 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTU8
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
endswitch__hla_3966:
        mov        4(%ebx), %ebx 
continue__hla_3964:
        cmpl       $0, %ebx 
        jne        while__hla_3964
exitloop__hla_3964:

        movl       %ecx, %eax 
        movl       %esi, %edx 
        popl       %esi 
        popl       %ecx 
        popl       %ebx 
xcleanupPass__hla_3961__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $8
End_cleanupPass__hla_3961_3997:
  .size cleanupPass__hla_3961,End_cleanupPass__hla_3961_3997-cleanupPass__hla_3961



        .type      finalPass__hla_3958,@function

finalPass__hla_3958:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $8, %esp 
        pushl      %eax 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      16(%ebp) 
        pushl      $1 
        call       cleanupPass__hla_3961
        mov        %eax, codeSize 
        mov        %edx, numCodeRelocs 
        pushl      12(%ebp) 
        pushl      $2 
        call       cleanupPass__hla_3961
        mov        %eax, dataSize 
        mov        %edx, numDataRelocs 
        pushl      8(%ebp) 
        pushl      $3 
        call       cleanupPass__hla_3961
        mov        %eax, bssSize 
        testl      %edx, %edx 
        je         false__hla_4000
        pushl      $str__hla_4001 
        call       STDERR_PUTS
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_4000:
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4002 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        mov        4(%eax), %ebx 
        cmpl       $0, %ebx 
        jne        _0fa3_skipAssertion___hla_4007
        pushl      _0fa4_msg___hla_4005 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0fa3_skipAssertion___hla_4007:
        mov        17(%ebx), %cl 
        andb       $13, %cl 
        cmpb       $4, %cl 
        jne        false__hla_4008
        pushl      $str__hla_4009 
        call       STDERR_PUTS
        pushl      8(%eax) 
        call       STDERR_PUTS
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_4008:
continue__hla_4002:
        popl       %ebp 
        ret        $4
exitfor__hla_4002:

        popl       %edx 
        popl       %ecx 
        popl       %ebx 
        popl       %eax 
xfinalPass__hla_3958__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $12
End_finalPass__hla_3958_4012:
  .size finalPass__hla_3958,End_finalPass__hla_3958_4012-finalPass__hla_3958



        .type      optimizeDisps,@function

optimizeDisps:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $12, %esp 
        cmpb       $0, verboseDebug__hla_3320 
        je         false__hla_4015
        pushl      $str__hla_4016 
        call       STDOUT_PUTS
false__hla_4015:
        pushl      20(%ebp) 
        pushl      16(%ebp) 
        pushl      12(%ebp) 
        pushl      $1 
        call       firstPass__hla_3856
        pushl      20(%ebp) 
        pushl      16(%ebp) 
        pushl      $4 
        call       dispPhase__hla_3896
        mov        %eax, -4(%ebp) 
        cmpl       $16384, %eax 
        jna        false__hla_4017
        pushl      $str__hla_4018 
        call       STDOUT_PUTS
        pushl      20(%ebp) 
        pushl      16(%ebp) 
        pushl      12(%ebp) 
        pushl      $4 
        call       firstPass__hla_3856
        mov        %eax, -8(%ebp) 
        mov        %edx, -12(%ebp) 
        pushl      20(%ebp) 
        pushl      16(%ebp) 
        pushl      $1 
        call       dispPhase__hla_3896
        mov        %eax, -4(%ebp) 
        pushl      20(%ebp) 
        pushl      16(%ebp) 
        pushl      12(%ebp) 
        call       finalPass__hla_3958
        cmpb       $0, 8(%ebp) 
        je         false__hla_4019
        pushl      $str__hla_4020 
        call       STDOUT_PUTS
        pushl      -4(%ebp) 
        call       STDOUT_PUTU32
        pushl      $str__hla_4021 
        call       STDOUT_PUTS
false__hla_4019:
        jmp        endif__hla_4017
false__hla_4017:
        pushl      20(%ebp) 
        pushl      16(%ebp) 
        pushl      12(%ebp) 
        call       finalPass__hla_3958
        cmpb       $0, 8(%ebp) 
        je         false__hla_4022
        pushl      $str__hla_4020 
        call       STDOUT_PUTS
        pushl      -4(%ebp) 
        call       STDOUT_PUTU32
        pushl      $str__hla_4023 
        call       STDOUT_PUTS
false__hla_4022:
endif__hla_4017:
xoptimizeDisps__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $16
End_optimizeDisps_4026:
  .size optimizeDisps,End_optimizeDisps_4026-optimizeDisps



        .type      getSymbol__hla_4035,@function

getSymbol__hla_4035:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %eax 
        pushl      %ebx 
        imul       $18, 12(%ebp), %ebx 
        addl       COFFsyms__hla_3311, %ebx 
        mov        (%ebx), %eax 
        testl      %eax, %eax 
        je         false__hla_4038
        pushl      8(%ebx) 
        movl       $0, 8(%ebx) 
        lea        (%ebx), %eax 
        pushl      %eax 
        pushl      8(%ebp) 
        call       STR_CPYZ
        popl       8(%ebx) 
        jmp        endif__hla_4038
false__hla_4038:
        mov        4(%ebx), %eax 
        addl       stringTable__hla_3317, %eax 
        pushl      %eax 
        pushl      8(%ebp) 
        call       STR_CPYZ
endif__hla_4038:
        popl       %ebx 
        popl       %eax 
xgetSymbol__hla_4035__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $8
End_getSymbol__hla_4035_4041:
  .size getSymbol__hla_4035,End_getSymbol__hla_4035_4041-getSymbol__hla_4035



        .type      dumpRelocs__hla_4044,@function

dumpRelocs__hla_4044:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $1028, %esp 
        pushl      %eax 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %ebp 
        addl       $-1028, (%esp) 
        pushl      $1024 
        call       STR_INIT
        mov        %eax, -4(%ebp) 
        call       STDOUT_NEWLN
        pushl      16(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4047 
        call       STDOUT_PUTS
        mov        12(%ebp), %ebx 
        mov        $0, %ecx 

        jmp        StartFor__hla_4048
for__hla_4048:
        pushl      4(%ebx) 
        pushl      -4(%ebp) 
        call       getSymbol__hla_4035
        pushl      %ecx 
        call       STDOUT_PUTU32
        pushl      $str__hla_4049 
        call       STDOUT_PUTS
        pushl      (%ebx) 
        call       STDOUT_PUTD
        pushl      $str__hla_4050 
        call       STDOUT_PUTS
        pushl      -4(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4051 
        call       STDOUT_PUTS
        movzwl     8(%ebx), %eax 
        cmpl       $20, %eax 
        jg         default__hla_4052
        jmp *      jmpTbl__hla_4052(,%eax,4) 
case__hla_4053:
        pushl      $str__hla_4054 
        call       STDOUT_PUTS
        jmp        endswitch__hla_4052
case__hla_4055:
        pushl      $str__hla_4056 
        call       STDOUT_PUTS
        jmp        endswitch__hla_4052
case__hla_4057:
        pushl      $str__hla_4058 
        call       STDOUT_PUTS
        jmp        endswitch__hla_4052
case__hla_4059:
        pushl      $str__hla_4060 
        call       STDOUT_PUTS
        jmp        endswitch__hla_4052
default__hla_4052:
        pushl      $str__hla_4061 
        call       STDOUT_PUTS
        pushl      %eax 
        call       STDOUT_PUTD
endswitch__hla_4052:
        call       STDOUT_NEWLN
        addl       $10, %ebx 
continue__hla_4048:
        incl       %ecx 

StartFor__hla_4048:
        cmpl       8(%ebp), %ecx 
        jb         for__hla_4048
exitloop__hla_4048:

        popl       %ecx 
        popl       %ebx 
        popl       %eax 
xdumpRelocs__hla_4044__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $12
End_dumpRelocs__hla_4044_4064:
  .size dumpRelocs__hla_4044,End_dumpRelocs__hla_4044_4064-dumpRelocs__hla_4044



        .type      generateCOFF__hla_4029,@function

generateCOFF__hla_4029:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $192, %esp 
        pushl      %eax 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        cmpb       $0, verboseDebug__hla_3320 
        je         false__hla_4067
        pushl      $str__hla_4068 
        call       STDOUT_PUTS
        pushl      24(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4069 
        call       STDOUT_PUTS
        pushl      20(%ebp) 
        call       STDOUT_PUTS
        call       STDOUT_NEWLN
false__hla_4067:
        movl       $65536, strTblSize__hla_3319 
        pushl      $65536 
        call       MEM_ALLOC
        mov        %eax, stringTable__hla_3317 
        movl       $4, strTblOffset__hla_3318 
        pushl      $73728 
        call       MEM_ALLOC
        mov        %eax, COFFsyms__hla_3311 
        movl       %eax, %ebx 
        movl       $73728, coffSymSize__hla_3313 
        movl       $0, numCOFFsyms__hla_3312 
        movb       $46, (%ebx) 
        movb       $102, 1(%ebx) 
        movb       $105, 2(%ebx) 
        movb       $108, 3(%ebx) 
        movb       $101, 4(%ebx) 
        movb       $0, 5(%ebx) 
        movb       $0, 6(%ebx) 
        movb       $0, 7(%ebx) 
        movl       $0, 8(%ebx) 
        movw       $2, 12(%ebx) 
        movw       $0, 14(%ebx) 
        movb       $103, 16(%ebx) 
        pushl      24(%ebp) 
        call       STR_LENGTH
        addl       $18, %eax 
        xorl       %edx, %edx 
        divl       divisor__hla_4070 
        mov        %al, 17(%ebx) 
        addl       $1, %eax 
        mov        %eax, numCOFFsyms__hla_3312 
        lea        18(%ebx), %eax 
        pushl      24(%ebp) 
        pushl      %eax 
        call       ZSTR_CPY
        mov        numCodeRelocs, %eax 
        cmpl       $65535, %eax 
        jna        false__hla_4071
        mov        $65535, %ax 
false__hla_4071:
        mov        %ax, CodeAuxSection__hla_4030+4 
        mov        codeSize, %eax 
        mov        %eax, CodeAuxSection__hla_4030 
        pushl      $str__hla_4072 
        pushl      $0 
        pushl      $1 
        pushl      $0 
        pushl      $3 
        pushl      $1 
        pushl      $CodeAuxSection__hla_4030 
        call       addCOFFsym__hla_3761
        addl       COFFsyms__hla_3311, %eax 
        mov        %eax, -172(%ebp) 
        mov        numDataRelocs, %eax 
        cmpl       $65535, %eax 
        jna        false__hla_4073
        mov        $65535, %ax 
false__hla_4073:
        mov        %ax, DataAuxSection__hla_4031+4 
        mov        dataSize, %eax 
        mov        %eax, DataAuxSection__hla_4031 
        pushl      $str__hla_4074 
        pushl      $0 
        pushl      $2 
        pushl      $0 
        pushl      $3 
        pushl      $1 
        pushl      $DataAuxSection__hla_4031 
        call       addCOFFsym__hla_3761
        addl       COFFsyms__hla_3311, %eax 
        mov        %eax, -176(%ebp) 
        mov        bssSize, %eax 
        mov        %eax, BssAuxSection__hla_4032 
        pushl      $str__hla_4075 
        pushl      $0 
        pushl      $3 
        pushl      $0 
        pushl      $3 
        pushl      $1 
        pushl      $BssAuxSection__hla_4032 
        call       addCOFFsym__hla_3761
        addl       COFFsyms__hla_3311, %eax 
        mov        %eax, -180(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4076 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        mov        4(%edx), %ebx 
        movzbw     16(%ebx), %cx 
        mov        12(%ebx), %edi 
        testb      $1, 17(%ebx) 
        jz         false__hla_4077
        mov        $2, %al 
        mov        $0, %cx 
        xorl       %edi, %edi 
        jmp        endif__hla_4077
false__hla_4077:
        testb      $2, 17(%ebx) 
        jz         false__hla_4078
        mov        $2, %al 
        jmp        endif__hla_4078
false__hla_4078:
        mov        $3, %al 
endif__hla_4078:
endif__hla_4077:
        pushl      8(%edx) 
        pushl      12(%ebx) 
        pushl      %ecx 
        pushl      $0 
        pushl      %eax 
        pushl      $0 
        pushl      $0 
        call       addCOFFsym__hla_3761
        mov        %eax, 8(%ebx) 
continue__hla_4076:
        popl       %ebp 
        ret        $4
exitfor__hla_4076:

        movw       $332, -32(%ebp) 
        movw       $3, -30(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        call       TIME_UTCDATETIME
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        call       TIME_TOUNIXTIME
        mov        %eax, -28(%ebp) 
        movl       $0, -24(%ebp) 
        movl       $0, -20(%ebp) 
        movw       $0, -16(%ebp) 
        movw       $256, -14(%ebp) 
        movb       $46, -72(%ebp) 
        movb       $116, -71(%ebp) 
        movb       $101, -70(%ebp) 
        movb       $120, -69(%ebp) 
        movb       $116, -68(%ebp) 
        movb       $0, -67(%ebp) 
        movb       $0, -66(%ebp) 
        movb       $0, -65(%ebp) 
        mov        codeSize, %eax 
        mov        %eax, -64(%ebp) 
        mov        %eax, -56(%ebp) 
        pushl      %eax 
        call       MEM_ALLOC
        mov        %eax, -164(%ebp) 
        mov        numCodeRelocs, %edx 
        cmpl       $65535, %edx 
        jnb        false__hla_4079
        mov        %dx, -40(%ebp) 
        movzwl     %dx, %eax 
        imul       $10, %eax, %eax 
        pushl      %eax 
        call       MEM_ALLOC
        mov        %eax, -156(%ebp) 
        movl       $1615855648, -36(%ebp) 
        jmp        endif__hla_4079
false__hla_4079:
        movw       $65535, -40(%ebp) 
        addl       $1, %edx 
        imul       $10, %edx, %eax 
        pushl      %eax 
        call       MEM_ALLOC
        mov        %eax, -156(%ebp) 
        mov        %edx, (%eax) 
        movl       $0, 4(%eax) 
        movw       $0, 8(%eax) 
        movl       $1632632864, -36(%ebp) 
endif__hla_4079:
        movl       $0, -60(%ebp) 
        movl       $0, -52(%ebp) 
        movl       $0, -48(%ebp) 
        movl       $0, -44(%ebp) 
        movw       $0, -38(%ebp) 
        pushl      16(%ebp) 
        pushl      -156(%ebp) 
        pushl      numCodeRelocs 
        pushl      -164(%ebp) 
        pushl      $1 
        pushl      $0 
        call       buildRaw__hla_3784
        movb       $46, -112(%ebp) 
        movb       $100, -111(%ebp) 
        movb       $97, -110(%ebp) 
        movb       $116, -109(%ebp) 
        movb       $97, -108(%ebp) 
        movb       $0, -107(%ebp) 
        movb       $0, -106(%ebp) 
        movb       $0, -105(%ebp) 
        mov        dataSize, %eax 
        mov        %eax, -104(%ebp) 
        mov        %eax, -96(%ebp) 
        pushl      %eax 
        call       MEM_ALLOC
        mov        %eax, -168(%ebp) 
        mov        numDataRelocs, %edx 
        cmpl       $65535, %edx 
        jnb        false__hla_4080
        mov        %dx, -80(%ebp) 
        movzwl     %dx, %eax 
        imul       $10, %eax, %eax 
        pushl      %eax 
        call       MEM_ALLOC
        mov        %eax, -160(%ebp) 
        movl       $-1068498880, -76(%ebp) 
        jmp        endif__hla_4080
false__hla_4080:
        movw       $65535, -80(%ebp) 
        addl       $1, %edx 
        imul       $10, %edx, %eax 
        pushl      %eax 
        call       MEM_ALLOC
        mov        %eax, -160(%ebp) 
        mov        %edx, (%eax) 
        movl       $0, 4(%eax) 
        movw       $0, 8(%eax) 
        movl       $-1051721664, -76(%ebp) 
endif__hla_4080:
        movl       $0, -100(%ebp) 
        movl       $0, -92(%ebp) 
        movl       $0, -88(%ebp) 
        movl       $0, -84(%ebp) 
        movw       $0, -78(%ebp) 
        pushl      12(%ebp) 
        pushl      -160(%ebp) 
        pushl      numDataRelocs 
        pushl      -168(%ebp) 
        pushl      $2 
        pushl      $0 
        call       buildRaw__hla_3784
        movb       $46, -152(%ebp) 
        movb       $98, -151(%ebp) 
        movb       $115, -150(%ebp) 
        movb       $115, -149(%ebp) 
        movl       $0, -148(%ebp) 
        mov        bssSize, %eax 
        mov        %eax, -136(%ebp) 
        movl       $0, -144(%ebp) 
        movw       $0, -120(%ebp) 
        movl       $0, -140(%ebp) 
        movl       $0, -132(%ebp) 
        movl       $0, -128(%ebp) 
        movl       $0, -124(%ebp) 
        movw       $0, -118(%ebp) 
        movl       $-1068498816, -116(%ebp) 
        mov        $140, %ecx 
        mov        %ecx, -52(%ebp) 
        addl       codeSize, %ecx 
        addl       $3, %ecx 
        andl       $-4, %ecx 
        mov        %ecx, -48(%ebp) 
        imul       $10, numCodeRelocs, %eax 
        addl       %eax, %ecx 
        addl       $3, %ecx 
        andl       $-4, %ecx 
        mov        %ecx, -92(%ebp) 
        addl       dataSize, %ecx 
        addl       $3, %ecx 
        andl       $-4, %ecx 
        mov        %ecx, -88(%ebp) 
        imul       $10, numDataRelocs, %eax 
        addl       %eax, %ecx 
        mov        %ecx, -24(%ebp) 
        mov        numCOFFsyms__hla_3312, %eax 
        mov        %eax, -20(%ebp) 
        imul       $18, %eax, %eax 
        addl       %eax, %ecx 
        addl       strTblOffset__hla_3318, %ecx 
        mov        %ecx, -188(%ebp) 
        pushl      %ecx 
        call       MEM_ZALLOC
        mov        %eax, -184(%ebp) 
        cld
        mov        -184(%ebp), %edi 
        lea        -32(%ebp), %esi 
        mov        $20, %ecx 
        rep movsb
        lea        -72(%ebp), %esi 
        mov        $40, %ecx 
        rep movsb
        lea        -112(%ebp), %esi 
        mov        $40, %ecx 
        rep movsb
        lea        -152(%ebp), %esi 
        mov        $40, %ecx 
        rep movsb
        mov        -164(%ebp), %esi 
        mov        codeSize, %ecx 
        rep movsb
        addl       $3, %edi 
        andl       $-4, %edi 
        mov        -156(%ebp), %esi 
        imul       $10, numCodeRelocs, %ecx 
        rep movsb
        addl       $3, %edi 
        andl       $-4, %edi 
        mov        -168(%ebp), %esi 
        mov        dataSize, %ecx 
        rep movsb
        addl       $3, %edi 
        andl       $-4, %edi 
        mov        -160(%ebp), %esi 
        imul       $10, numDataRelocs, %ecx 
        rep movsb
        mov        COFFsyms__hla_3311, %esi 
        imul       $18, numCOFFsyms__hla_3312, %ecx 
        rep movsb
        mov        stringTable__hla_3317, %esi 
        mov        strTblOffset__hla_3318, %eax 
        stosl
        addl       $4, %esi 
        lea        -4(%eax), %ecx 
        rep movsb
        pushl      20(%ebp) 
        call       FILEIO_OPENNEW
        mov        %eax, -192(%ebp) 
        pushl      -192(%ebp) 
        pushl      -184(%ebp) 
        pushl      -188(%ebp) 
        call       FILEIO_WRITE
        pushl      -192(%ebp) 
        call       FILEIO_CLOSE
        cmpb       $0, verboseDebug__hla_3320 
        je         false__hla_4081
        pushl      $str__hla_4082 
        call       STDOUT_PUTS
        pushl      numCOFFsyms__hla_3312 
        call       STDOUT_PUTU32
        pushl      $str__hla_4083 
        call       STDOUT_PUTS
        mov        COFFsyms__hla_3311, %ebx 
        xorl       %ecx, %ecx 
        jmp        continue__hla_4084
while__hla_4084:
        pushl      %ecx 
        call       STDOUT_PUTU32
        pushl      $str__hla_4049 
        call       STDOUT_PUTS
        mov        (%ebx), %eax 
        testl      %eax, %eax 
        jne        false__hla_4086
        mov        4(%ebx), %eax 
        addl       stringTable__hla_3317, %eax 
        pushl      %eax 
        call       STDOUT_PUTZS
        jmp        endif__hla_4086
false__hla_4086:
        pushl      8(%ebx) 
        movl       $0, 8(%ebx) 
        pushl      %ebx 
        call       STDOUT_PUTZS
        popl       8(%ebx) 
endif__hla_4086:
        pushl      $str__hla_4087 
        call       STDOUT_PUTS
        cmpb       $103, 16(%ebx) 
        jne        false__hla_4088
        lea        18(%ebx), %eax 
        pushl      %eax 
        call       STDOUT_PUTZS
        jmp        endif__hla_4088
false__hla_4088:
        cmpb       $3, 16(%ebx) 
        jne        false__hla_4089
        pushl      $str__hla_4090 
        call       STDOUT_PUTS
        jmp        endif__hla_4088
false__hla_4089:
        cmpb       $2, 16(%ebx) 
        jne        false__hla_4091
        cmpw       $0, 12(%ebx) 
        jne        false__hla_4092
        pushl      $str__hla_4093 
        call       STDOUT_PUTS
        jmp        endif__hla_4092
false__hla_4092:
        pushl      $str__hla_4094 
        call       STDOUT_PUTS
endif__hla_4092:
        jmp        endif__hla_4088
false__hla_4091:
        pushl      $str__hla_4095 
        call       STDOUT_PUTS
endif__hla_4088:
        call       STDOUT_NEWLN
        movzbl     17(%ebx), %eax 
        addl       $1, %eax 
        addl       %eax, %ecx 
        imul       $18, %eax, %eax 
        addl       %eax, %ebx 
continue__hla_4084:
        cmpl       numCOFFsyms__hla_3312, %ecx 
        jb         while__hla_4084
exitloop__hla_4084:

        pushl      $str__hla_4096 
        pushl      -156(%ebp) 
        pushl      numCodeRelocs 
        call       dumpRelocs__hla_4044
        pushl      $str__hla_4097 
        pushl      -160(%ebp) 
        pushl      numDataRelocs 
        call       dumpRelocs__hla_4044
false__hla_4081:
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
        popl       %eax 
xgenerateCOFF__hla_4029__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $20
End_generateCOFF__hla_4029_4100:
  .size generateCOFF__hla_4029,End_generateCOFF__hla_4029_4100-generateCOFF__hla_4029



        .type      generateELF__hla_4103,@function

generateELF__hla_4103:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $148, %esp 
        pushl      %eax 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        cmpb       $0, verboseDebug__hla_3320 
        je         false__hla_4115
        pushl      $str__hla_4116 
        call       STDOUT_PUTS
        pushl      28(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4069 
        call       STDOUT_PUTS
        pushl      24(%ebp) 
        call       STDOUT_PUTS
        call       STDOUT_NEWLN
false__hla_4115:
        pushl      $64 
        call       MEM_ZALLOC
        mov        %eax, -8(%ebp) 
        movl       $4, -140(%ebp) 
        movl       $5, -144(%ebp) 
        movl       $6, -148(%ebp) 
        lea        1(%eax), %edi 
        movl       $1, shstrtabSection__hla_4105 
        pushl      $str__hla_4117 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        movl       $11, symtabSection__hla_4106 
        pushl      $str__hla_4118 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        movl       $19, strtabSection__hla_4107 
        pushl      $str__hla_4119 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        mov        $27, %ebx 
        mov        %ebx, textSection__hla_4108 
        addl       $6, %ebx 
        pushl      $str__hla_4072 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        mov        %ebx, dataSection__hla_4109 
        addl       $6, %ebx 
        pushl      $str__hla_4074 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        mov        %ebx, bssSection__hla_4110 
        addl       $5, %ebx 
        pushl      $str__hla_4075 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        mov        %ebx, relTextSection__hla_4111 
        addl       $10, %ebx 
        pushl      $str__hla_4120 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        mov        %ebx, relDataSection__hla_4112 
        addl       $10, %ebx 
        pushl      $str__hla_4121 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        mov        %ebx, -104(%ebp) 
        movl       $7, -4(%ebp) 
        cmpl       $0, numCodeRelocs 
        je         false__hla_4122
        addl       $1, -4(%ebp) 
false__hla_4122:
        cmpl       $0, numDataRelocs 
        je         false__hla_4123
        addl       $1, -4(%ebp) 
false__hla_4123:
        imul       $40, -4(%ebp), %eax 
        mov        %eax, -96(%ebp) 
        movl       $262144, strTblSize__hla_3319 
        pushl      $262144 
        call       MEM_ZALLOC
        mov        %eax, stringTable__hla_3317 
        movl       $1, strTblOffset__hla_3318 
        pushl      $1048576 
        call       MEM_ZALLOC
        mov        %eax, ELFsyms__hla_3314 
        movl       %eax, %ebx 
        movl       $1048576, elfSymSize__hla_3316 
        movl       $1, numELFsyms__hla_3315 
        pushl      $0 
        pushl      $0 
        pushl      $0 
        pushl      $3 
        pushw      $0 
        pushw      -140(%ebp) 
        pushl      $0 
        call       addELFsym__hla_3773
        addl       $1, numELFsyms__hla_3315 
        pushl      $0 
        pushl      $0 
        pushl      $0 
        pushl      $3 
        pushw      $0 
        pushw      -144(%ebp) 
        pushl      $0 
        call       addELFsym__hla_3773
        addl       $1, numELFsyms__hla_3315 
        pushl      $0 
        pushl      $0 
        pushl      $0 
        pushl      $3 
        pushw      $0 
        pushw      -148(%ebp) 
        pushl      $0 
        call       addELFsym__hla_3773
        addl       $1, numELFsyms__hla_3315 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4124 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        mov        4(%edx), %ebx 
        movzbl     16(%ebx), %ecx 
        cmpl       $1, %ecx 
        jne        false__hla_4125
        mov        -140(%ebp), %ecx 
        jmp        endif__hla_4125
false__hla_4125:
        cmpl       $2, %ecx 
        jne        false__hla_4126
        mov        -144(%ebp), %ecx 
        jmp        endif__hla_4125
false__hla_4126:
        cmpl       $3, %ecx 
        jne        false__hla_4127
        mov        -148(%ebp), %ecx 
        jmp        endif__hla_4125
false__hla_4127:
        xorl       %ecx, %ecx 
endif__hla_4125:
        mov        12(%ebx), %edi 
        testb      $1, 17(%ebx) 
        jnz        false__hla_4128
        testb      $2, 17(%ebx) 
        jnz        false__hla_4129
        pushl      8(%edx) 
        pushl      %edi 
        pushl      $0 
        pushl      $0 
        pushl      %ecx 
        pushl      $0 
        call       addELFsym__hla_3773
        mov        numELFsyms__hla_3315, %eax 
        mov        %eax, 8(%ebx) 
        addl       $1, numELFsyms__hla_3315 
false__hla_4129:
false__hla_4128:
continue__hla_4124:
        popl       %ebp 
        ret        $4
exitfor__hla_4124:

        mov        numELFsyms__hla_3315, %eax 
        mov        %eax, symtabSection__hla_4106+28 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4130 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        mov        4(%edx), %ebx 
        movzbl     16(%ebx), %ecx 
        cmpl       $1, %ecx 
        jne        false__hla_4131
        mov        -140(%ebp), %ecx 
        jmp        endif__hla_4131
false__hla_4131:
        cmpl       $2, %ecx 
        jne        false__hla_4132
        mov        -144(%ebp), %ecx 
        jmp        endif__hla_4131
false__hla_4132:
        cmpl       $3, %ecx 
        jne        false__hla_4133
        mov        -148(%ebp), %ecx 
        jmp        endif__hla_4131
false__hla_4133:
        xorl       %ecx, %ecx 
endif__hla_4131:
        mov        12(%ebx), %edi 
        testb      $1, 17(%ebx) 
        jz         false__hla_4134
        mov        $16, %al 
        xorl       %ecx, %ecx 
        xorl       %edi, %edi 
        jmp        endif__hla_4134
false__hla_4134:
        testb      $2, 17(%ebx) 
        jz         false__hla_4135
        mov        $16, %al 
        jmp        endif__hla_4135
false__hla_4135:
        jmp        continue__hla_4130
endif__hla_4135:
endif__hla_4134:
        pushl      8(%edx) 
        pushl      %edi 
        pushl      $0 
        pushl      %eax 
        pushl      %ecx 
        pushl      $0 
        call       addELFsym__hla_3773
        mov        numELFsyms__hla_3315, %eax 
        mov        %eax, 8(%ebx) 
        addl       $1, numELFsyms__hla_3315 
continue__hla_4130:
        popl       %ebp 
        ret        $4
exitfor__hla_4130:

        mov        codeSize, %eax 
        testl      %eax, %eax 
        je         false__hla_4136
        pushl      %eax 
        call       MEM_ALLOC
        mov        %eax, -84(%ebp) 
        imul       $8, numCodeRelocs, %eax 
        addl       $8, %eax 
        pushl      %eax 
        call       MEM_ALLOC
        mov        %eax, -76(%ebp) 
        pushl      20(%ebp) 
        pushl      -76(%ebp) 
        pushl      numCodeRelocs 
        pushl      -84(%ebp) 
        pushl      $1 
        pushl      8(%ebp) 
        call       buildRaw__hla_3784
false__hla_4136:
        mov        dataSize, %eax 
        testl      %eax, %eax 
        je         false__hla_4137
        pushl      %eax 
        call       MEM_ALLOC
        mov        %eax, -88(%ebp) 
        imul       $8, numDataRelocs, %eax 
        pushl      %eax 
        call       MEM_ALLOC
        mov        %eax, -80(%ebp) 
        pushl      16(%ebp) 
        pushl      -80(%ebp) 
        pushl      numDataRelocs 
        pushl      -88(%ebp) 
        pushl      $2 
        pushl      8(%ebp) 
        call       buildRaw__hla_3784
false__hla_4137:
        mov        $64, %eax 
        mov        %eax, -92(%ebp) 
        addl       -96(%ebp), %eax 
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, -100(%ebp) 
        addl       -104(%ebp), %eax 
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, -108(%ebp) 
        imul       $16, numELFsyms__hla_3315, %edx 
        addl       %edx, %eax 
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, -116(%ebp) 
        addl       strTblOffset__hla_3318, %eax 
        movl       %eax, %edx 
        addl       $15, %edx 
        andl       $-16, %edx 
        cmpl       $0, codeSize 
        je         false__hla_4138
        mov        %edx, -120(%ebp) 
        addl       codeSize, %edx 
        addl       $15, %edx 
        andl       $-16, %edx 
        jmp        endif__hla_4138
false__hla_4138:
        mov        -100(%ebp), %eax 
        mov        %eax, -120(%ebp) 
endif__hla_4138:
        cmpl       $0, dataSize 
        je         false__hla_4139
        mov        %edx, -128(%ebp) 
        addl       dataSize, %edx 
        addl       $15, %edx 
        andl       $-16, %edx 
        jmp        endif__hla_4139
false__hla_4139:
        mov        -100(%ebp), %eax 
        mov        %eax, -128(%ebp) 
endif__hla_4139:
        cmpl       $0, numCodeRelocs 
        je         false__hla_4140
        mov        %edx, -124(%ebp) 
        imul       $8, numCodeRelocs, %eax 
        addl       %eax, %edx 
        addl       $15, %edx 
        andl       $-16, %edx 
false__hla_4140:
        cmpl       $0, numDataRelocs 
        je         false__hla_4141
        mov        %edx, -132(%ebp) 
        imul       $8, numDataRelocs, %eax 
        addl       %eax, %edx 
false__hla_4141:
        mov        %edx, -16(%ebp) 
        pushl      %edx 
        call       MEM_ZALLOC
        mov        %eax, -12(%ebp) 
        pushl      -100(%ebp) 
        popl       -136(%ebp) 
        cld
        lea        -72(%ebp), %edi 
        mov        $52, %ecx 
        mov        $0, %al 
        rep stosb
        movw       $1, -56(%ebp) 
        movw       $3, -54(%ebp) 
        movl       $1, -52(%ebp) 
        movl       $0, -48(%ebp) 
        movl       $0, -44(%ebp) 
        mov        -92(%ebp), %eax 
        mov        %eax, -40(%ebp) 
        movl       $0, -36(%ebp) 
        movw       $52, -32(%ebp) 
        movw       $0, -30(%ebp) 
        movw       $0, -28(%ebp) 
        movw       $40, -26(%ebp) 
        mov        -4(%ebp), %eax 
        mov        %ax, -24(%ebp) 
        movw       $1, -22(%ebp) 
        lea        -72(%ebp), %ebx 
        movb       $127, (%ebx) 
        movb       $69, 1(%ebx) 
        movb       $76, 2(%ebx) 
        movb       $70, 3(%ebx) 
        movb       $1, 4(%ebx) 
        movb       $1, 5(%ebx) 
        movb       $1, 6(%ebx) 
        cmpb       $2, 8(%ebp) 
        jne        false__hla_4142
        movb       $0, 7(%ebx) 
        jmp        endif__hla_4142
false__hla_4142:
        cmpb       $3, 8(%ebp) 
        jne        false__hla_4143
        movb       $9, 7(%ebx) 
        jmp        endif__hla_4142
false__hla_4143:
        pushl      $str__hla_4144 
        call       STDERR_PUTS
        movb       $0, 7(%ebx) 
endif__hla_4142:
        mov        -100(%ebp), %eax 
        mov        %eax, shstrtabSection__hla_4105+16 
        mov        -104(%ebp), %eax 
        mov        %eax, shstrtabSection__hla_4105+20 
        mov        -108(%ebp), %eax 
        mov        %eax, symtabSection__hla_4106+16 
        imul       $16, numELFsyms__hla_3315, %eax 
        mov        %eax, symtabSection__hla_4106+20 
        mov        %eax, -112(%ebp) 
        mov        -116(%ebp), %eax 
        mov        %eax, strtabSection__hla_4107+16 
        mov        strTblOffset__hla_3318, %eax 
        mov        %eax, strtabSection__hla_4107+20 
        mov        -120(%ebp), %eax 
        mov        %eax, textSection__hla_4108+16 
        mov        codeSize, %eax 
        mov        %eax, textSection__hla_4108+20 
        mov        -128(%ebp), %eax 
        mov        %eax, dataSection__hla_4109+16 
        mov        dataSize, %eax 
        mov        %eax, dataSection__hla_4109+20 
        mov        bssSize, %eax 
        mov        %eax, bssSection__hla_4110+20 
        mov        -136(%ebp), %eax 
        mov        %eax, bssSection__hla_4110+16 
        cmpl       $0, numCodeRelocs 
        je         false__hla_4145
        mov        -124(%ebp), %eax 
        mov        %eax, relTextSection__hla_4111+16 
        imul       $8, numCodeRelocs, %eax 
        mov        %eax, relTextSection__hla_4111+20 
        mov        -140(%ebp), %eax 
        mov        %eax, relTextSection__hla_4111+28 
false__hla_4145:
        cmpl       $0, numDataRelocs 
        je         false__hla_4146
        mov        -132(%ebp), %eax 
        mov        %eax, relDataSection__hla_4112+16 
        imul       $8, numDataRelocs, %eax 
        mov        %eax, relDataSection__hla_4112+20 
        mov        -144(%ebp), %eax 
        mov        %eax, relDataSection__hla_4112+28 
false__hla_4146:
        cld
        mov        -12(%ebp), %edi 
        lea        -72(%ebp), %esi 
        mov        $52, %ecx 
        rep movsb
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        lea        NULLsection__hla_4104, %esi 
        mov        $40, %ecx 
        rep movsb
        lea        shstrtabSection__hla_4105, %esi 
        mov        $40, %ecx 
        rep movsb
        lea        symtabSection__hla_4106, %esi 
        mov        $40, %ecx 
        rep movsb
        lea        strtabSection__hla_4107, %esi 
        mov        $40, %ecx 
        rep movsb
        lea        textSection__hla_4108, %esi 
        mov        $40, %ecx 
        rep movsb
        lea        dataSection__hla_4109, %esi 
        mov        $40, %ecx 
        rep movsb
        lea        bssSection__hla_4110, %esi 
        mov        $40, %ecx 
        rep movsb
        cmpl       $0, numCodeRelocs 
        je         false__hla_4147
        lea        relTextSection__hla_4111, %esi 
        mov        $40, %ecx 
        rep movsb
false__hla_4147:
        cmpl       $0, numDataRelocs 
        je         false__hla_4148
        lea        relDataSection__hla_4112, %esi 
        mov        $40, %ecx 
        rep movsb
false__hla_4148:
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        -8(%ebp), %esi 
        mov        -104(%ebp), %ecx 
        rep movsb
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        ELFsyms__hla_3314, %esi 
        imul       $16, numELFsyms__hla_3315, %ecx 
        rep movsb
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        stringTable__hla_3317, %esi 
        mov        strTblOffset__hla_3318, %ecx 
        rep movsb
        cmpl       $0, codeSize 
        je         false__hla_4149
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        -84(%ebp), %esi 
        mov        codeSize, %ecx 
        rep movsb
false__hla_4149:
        cmpl       $0, dataSize 
        je         false__hla_4150
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        -88(%ebp), %esi 
        mov        dataSize, %ecx 
        rep movsb
false__hla_4150:
        cmpl       $0, numCodeRelocs 
        je         false__hla_4151
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        -76(%ebp), %esi 
        imul       $8, numCodeRelocs, %ecx 
        rep movsb
false__hla_4151:
        cmpl       $0, numDataRelocs 
        je         false__hla_4152
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        -80(%ebp), %esi 
        imul       $8, numDataRelocs, %ecx 
        rep movsb
false__hla_4152:
        pushl      24(%ebp) 
        call       FILEIO_OPENNEW
        mov        %eax, -20(%ebp) 
        pushl      -20(%ebp) 
        pushl      -12(%ebp) 
        pushl      -16(%ebp) 
        call       FILEIO_WRITE
        pushl      -20(%ebp) 
        call       FILEIO_CLOSE
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
        popl       %eax 
xgenerateELF__hla_4103__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $24
End_generateELF__hla_4103_4155:
  .size generateELF__hla_4103,End_generateELF__hla_4103_4155-generateELF__hla_4103



        .type      compileCOFF,@function

compileCOFF:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $32, %esp 
        pushl      %ebx 
        mov        16(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -4(%ebp) 
        mov        12(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -8(%ebp) 
        mov        8(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -12(%ebp) 
        pushl      28(%ebp) 
        pushl      24(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       lexer
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        pushl      -12(%ebp) 
        pushl      20(%ebp) 
        call       optimizeDisps
        pushl      36(%ebp) 
        pushl      32(%ebp) 
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        pushl      -12(%ebp) 
        call       generateCOFF__hla_4029
        mov        16(%ebp), %ebx 
        mov        -4(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        12(%ebp), %ebx 
        mov        -8(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        8(%ebp), %ebx 
        mov        -12(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        $1, %eax 
xcompileCOFF__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $32
End_compileCOFF_4162:
  .size compileCOFF,End_compileCOFF_4162-compileCOFF



        .type      compileELF,@function

compileELF:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $32, %esp 
        pushl      %ebx 
        mov        16(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -4(%ebp) 
        mov        12(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -8(%ebp) 
        mov        8(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -12(%ebp) 
        pushl      32(%ebp) 
        pushl      28(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       lexer
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        pushl      -12(%ebp) 
        pushl      20(%ebp) 
        call       optimizeDisps
        pushl      40(%ebp) 
        pushl      36(%ebp) 
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        pushl      -12(%ebp) 
        pushl      24(%ebp) 
        call       generateELF__hla_4103
        mov        16(%ebp), %ebx 
        mov        -4(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        12(%ebp), %ebx 
        mov        -8(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        8(%ebp), %ebx 
        mov        -12(%ebp), %eax 
        mov        %eax, (%ebx) 
        xorl       %eax, %eax 
xcompileELF__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $36
End_compileELF_4167:
  .size compileELF,End_compileELF_4167-compileELF



        .type      compileMACHO,@function

compileMACHO:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $12, %esp 
        pushl      28(%ebp) 
        pushl      24(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       lexer
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        pushl      -12(%ebp) 
        pushl      20(%ebp) 
        call       optimizeDisps
        mov        $1, %eax 
        pushl      $str__hla_4168 
        call       STDERR_PUTS
        xorl       %eax, %eax 
xcompileMACHO__hla_:
        pushl      %edi 
        pushl      %ecx 
        mov        16(%ebp), %edi 
        mov        -4(%ebp), %ecx 
        mov        %ecx, (%edi) 
        mov        12(%ebp), %edi 
        mov        -8(%ebp), %ecx 
        mov        %ecx, (%edi) 
        mov        8(%ebp), %edi 
        mov        -12(%ebp), %ecx 
        mov        %ecx, (%edi) 
        popl       %ecx 
        popl       %edi 
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $32
End_compileMACHO_4169:
  .size compileMACHO,End_compileMACHO_4169-compileMACHO



        .type      compile__hla_4170,@function

compile__hla_4170:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $28, %esp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        mov        %esp, saveESP__hla_3334 
        mov        ExceptionPtr__hla_, %eax 
        mov        %eax, SaveSEHPointer__hla_3333 
        call       BuildExcepts__hla_
        pushl      %ebp 
        addl       $-28, (%esp) 
        call       CONV_GETDELIMITERS
        pushl      $0 
        pushl      $0 
        pushl      $11008 
        pushl      $0 
        pushl      %ebp 
        addl       $-28, (%esp) 
        call       CSET_SETUNION
        pushl      -16(%ebp) 
        pushl      -20(%ebp) 
        pushl      -24(%ebp) 
        pushl      -28(%ebp) 
        call       CONV_SETDELIMITERS
        cmpb       $0, 8(%ebp) 
        je         false__hla_4173
        pushl      $str__hla_4174 
        call       STDOUT_PUTS
        pushl      40(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4175 
        call       STDOUT_PUTS
        pushl      36(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4176 
        call       STDOUT_PUTS
false__hla_4173:
        pushl      $exception__hla_4178 
        pushl      %ebp 
        mov        ExceptionPtr__hla_, %ebp 
        pushl      8(%ebp) 
        mov        4(%esp), %ebp 
        pushl      $244115826 
        pushl      ExceptionPtr__hla_ 
        mov        %esp, ExceptionPtr__hla_ 
        pushl      $65536 
        movl       $symbolTable, %esi 
        call       TABLE_CREATE
        pushl      $8192 
        movl       $equatesTable, %esi 
        call       TABLE_CREATE
        movzbl     24(%ebp), %eax 
        cmpl       $4, %eax 
        jg         default__hla_4179
        jmp *      jmpTbl__hla_4179(,%eax,4) 
case__hla_4180:
        pushl      40(%ebp) 
        pushl      36(%ebp) 
        pushl      32(%ebp) 
        pushl      28(%ebp) 
        pushl      8(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       compileCOFF
        jmp        endswitch__hla_4179
case__hla_4181:
        pushl      40(%ebp) 
        pushl      36(%ebp) 
        pushl      32(%ebp) 
        pushl      28(%ebp) 
        pushl      $1 
        pushl      8(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       compileELF
        jmp        endswitch__hla_4179
case__hla_4182:
        pushl      40(%ebp) 
        pushl      36(%ebp) 
        pushl      32(%ebp) 
        pushl      28(%ebp) 
        pushl      $2 
        pushl      8(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       compileELF
        jmp        endswitch__hla_4179
case__hla_4183:
        pushl      40(%ebp) 
        pushl      36(%ebp) 
        pushl      32(%ebp) 
        pushl      28(%ebp) 
        pushl      $3 
        pushl      8(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       compileELF
        jmp        endswitch__hla_4179
case__hla_4184:
        pushl      40(%ebp) 
        pushl      36(%ebp) 
        pushl      32(%ebp) 
        pushl      28(%ebp) 
        pushl      8(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       compileMACHO
        jmp        endswitch__hla_4179
default__hla_4179:
        pushl      $str__hla_4185 
        call       STDERR_PUTS
        mov        $1, %eax 
endswitch__hla_4179:
        mov        ExceptionPtr__hla_, %esp 
        popl       ExceptionPtr__hla_ 
        addl       $8, %esp 
        popl       %ebp 
        addl       $4, %esp 
        jmp        endtry__hla_4177
exception__hla_4178:
        call       EX_PRINTEXCEPTIONERROR
        mov        $0, %eax 
endtry__hla_4177:
        cmpb       $0, verboseDebug__hla_3320 
        je         false__hla_4186
        call       STDOUT_NEWLN
        pushl      $str__hla_4187 
        call       STDOUT_PUTS
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4188 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        pushl      8(%edx) 
        pushl      $-24 
        pushl      $32 
        call       STDOUT_PUTSSIZE
        pushl      $str__hla_4049 
        call       STDOUT_PUTS
        mov        4(%edx), %edx 
        mov        17(%edx), %ah 
        testb      $1, %ah 
        mov        $32, %al 
        jz         false__hla_4189
        mov        $88, %al 
false__hla_4189:
        pushl      %eax 
        call       STDOUT_PUTC
        testb      $2, %ah 
        mov        $32, %al 
        jz         false__hla_4190
        mov        $80, %al 
false__hla_4190:
        pushl      %eax 
        call       STDOUT_PUTC
        testb      $4, %ah 
        mov        $32, %al 
        jz         false__hla_4191
        mov        $82, %al 
false__hla_4191:
        pushl      %eax 
        call       STDOUT_PUTC
        testb      $8, %ah 
        mov        $32, %al 
        jz         false__hla_4192
        mov        $68, %al 
false__hla_4192:
        pushl      %eax 
        call       STDOUT_PUTC
        pushl      $str__hla_4193 
        call       STDOUT_PUTS
        pushl      12(%edx) 
        call       STDOUT_PUTD
        pushl      $str__hla_4194 
        call       STDOUT_PUTS
        pushl      $0 
        pushl      %eax 
        mov        16(%edx), %al 
        mov        %al, 4(%esp) 
        popl       %eax 
        call       STDOUT_PUTU8
        call       STDOUT_NEWLN
continue__hla_4188:
        popl       %ebp 
        ret        $4
exitfor__hla_4188:

        call       STDOUT_NEWLN
false__hla_4186:
        jmp        Exit_compile_hlabe__hla_4195

QuitMain__hla_:
        mov        $1, %eax 

Exit_compile_hlabe__hla_4195:
        mov        saveESP__hla_3334, %esp 
        pushl      %eax 
        mov        SaveSEHPointer__hla_3333, %eax 
        mov        %eax, ExceptionPtr__hla_ 
        mov        20(%ebp), %ecx 
        mov        -4(%ebp), %edx 
        mov        %edx, (%ecx) 
        mov        16(%ebp), %ecx 
        mov        -8(%ebp), %edx 
        mov        %edx, (%ecx) 
        mov        12(%ebp), %ecx 
        mov        -12(%ebp), %edx 
        mov        %edx, (%ecx) 
        popl       %eax 
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
xcompile__hla_4170__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $36
End_compile__hla_4170_4198:
  .size compile__hla_4170,End_compile__hla_4170_4198-compile__hla_4170



        .type      _hlabe_compile,@function

_hlabe_compile:
End__hlabe_compile_4199:
  .size _hlabe_compile,End__hlabe_compile_4199-_hlabe_compile



        .type      hlabe_compile,@function

hlabe_compile:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $2088, %esp 
        mov        %ebx, -4(%ebp) 
        mov        %ecx, -8(%ebp) 
        mov        %edx, -12(%ebp) 
        mov        %esi, -16(%ebp) 
        mov        %edi, -20(%ebp) 
        pushl      %ebp 
        addl       $-1064, (%esp) 
        pushl      $1024 
        call       STR_INIT
        mov        %eax, -24(%ebp) 
        pushl      %ebp 
        addl       $-2088, (%esp) 
        pushl      $1024 
        call       STR_INIT
        mov        %eax, -28(%ebp) 
        pushl      8(%ebp) 
        pushl      -24(%ebp) 
        call       STR_CPYZ
        pushl      12(%ebp) 
        pushl      -28(%ebp) 
        call       STR_CPYZ
        pushl      -24(%ebp) 
        pushl      -28(%ebp) 
        pushl      16(%ebp) 
        pushl      20(%ebp) 
        pushl      24(%ebp) 
        pushl      %ebp 
        addl       $-32, (%esp) 
        pushl      %ebp 
        addl       $-36, (%esp) 
        pushl      %ebp 
        addl       $-40, (%esp) 
        pushl      28(%ebp) 
        call       compile__hla_4170
        mov        -4(%ebp), %ebx 
        mov        -8(%ebp), %ecx 
        mov        -12(%ebp), %edx 
        mov        -16(%ebp), %esi 
        mov        -20(%ebp), %edi 
xhlabe_compile__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
End_hlabe_compile_4204:
  .size hlabe_compile,End_hlabe_compile_4204-hlabe_compile





