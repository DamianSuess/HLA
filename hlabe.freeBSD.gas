// Assembly code emitted by HLA compiler
// Version 2.7 build 3322 (prototype)
// HLA compiler written by Randall Hyde
// GAS compatible output


        .global    numCodeRelocs
        .global    dataSize
        .global    QuitMain__hla_
        .global    numDataRelocs
        .global    _hlabe_compile
        .global    compileMACHO
        .global    DfltExHndlr__hla_
        .global    bssSize
        .global    compileELF
        .global    symbolTable
        .global    codeSize
        .global    hlabe_compile
        .global    currentSection
        .global    lexer
        .global    equatesTable
        .global    compileCOFF
        .global    printLineNumberChain
        .global    optimizeDisps
        .global    InstallSignals__hla_


  .text


        .extern    MEM_FREE
        .extern    STR_CPY
        .extern    STR_INIT
        .extern    STR_CPYZ
        .extern    EX_PRINTEXCEPTIONERROR
        .extern    MEM_ALLOC1
        .extern    FILEIO_OPENNEW
        .extern    STR_A_CPY
        .extern    STDOUT_PUTSSIZE
        .extern    CONV_GETDELIMITERS
        .extern    CONV_SETDELIMITERS
        .extern    FILEIO_CLOSE
        .extern    STDERR_PUTI32
        .extern    MEM_ZALLOC
        .extern    STR_LENGTH
        .extern    STDERR_PUTS
        .extern    STDERR_PUTC
        .extern    _HLA_GET_EXCEPTIONPTREBP
        .extern    STDERR_PUTU32
        .extern    STDOUT_PUTU32
        .extern    _HLA_PUSH_EXCEPTIONPTR
        .extern    FILEIO_WRITE
        .extern    STDERR_NEWLN
        .extern    STDOUT_NEWLN
        .extern    DefaultExceptionHandler__hla_
        .extern    abstract__hla_
        .extern    STDOUT_PUTZS
        .extern    CONV_ATOH128
        .extern    STR_A_BUFTOSTR2
        .extern    _HLA_SET_EXCEPTIONPTR
        .extern    STDERR_PUTU8
        .extern    STDOUT_PUTU8
        .extern    ZSTR_CPY
        .extern    CONV_ATOU128
        .extern    TABLE_GETNODE
        .extern    TIME_UTCDATETIME
        .extern    MEM_REALLOC1
        .extern    BuildExcepts__hla_
        .extern    CONV_ATOH80
        .extern    CONV_ATOH64
        .extern    TIME_TOUNIXTIME
        .extern    CONV_ATOH32
        .extern    STDOUT_PUTS
        .extern    STDOUT_PUTD
        .extern    STDOUT_PUTC
        .extern    CONV_ATOU64
        .extern    CONV_ATOU32
        .extern    CSET_SETUNION
        .extern    Raise__hla_
        .extern    TABLE_CREATE
        .extern    shortDfltExcept__hla_
        .extern    TABLE_LOOKUP






  .text



        .type      DfltExHndlr__hla_,@function

DfltExHndlr__hla_:
        pushl      %ebp 
        movl       %esp, %ebp 
        jmp        DefaultExceptionHandler__hla_
xDfltExHndlr__hla___hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
End_DfltExHndlr__hla__3336:
  .size DfltExHndlr__hla_,End_DfltExHndlr__hla__3336-DfltExHndlr__hla_



        .type      InstallSignals__hla_,@function

InstallSignals__hla_:
        pushl      %ebp 
        movl       %esp, %ebp 
xInstallSignals__hla___hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
End_InstallSignals__hla__3339:
  .size InstallSignals__hla_,End_InstallSignals__hla__3339-InstallSignals__hla_



        .type      freeTableRecord__hla_3346,@function

freeTableRecord__hla_3346:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      4(%ebx) 
        call       MEM_FREE
xfreeTableRecord__hla_3346__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
End_freeTableRecord__hla_3346_3351:
  .size freeTableRecord__hla_3346,End_freeTableRecord__hla_3346_3351-freeTableRecord__hla_3346



        .type      printLineNumberChain,@function

printLineNumberChain:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        mov        25(%ebx), %ebx 
        jmp        continue__hla_3354
while__hla_3354:
        pushl      $9 
        call       STDERR_PUTC
        pushl      4(%ebx) 
        call       STDERR_PUTS
        pushl      $58 
        call       STDERR_PUTC
        pushl      8(%ebx) 
        call       STDERR_PUTU32
        mov        (%ebx), %ebx 
        cmpl       $0, %ebx 
        je         false__hla_3356
        pushl      $str__hla_3357 
        call       STDERR_PUTS
false__hla_3356:
continue__hla_3354:
        cmpl       $0, %ebx 
        jne        while__hla_3354
exitloop__hla_3354:

        call       STDERR_NEWLN
        popl       %ebx 
xprintLineNumberChain__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
End_printLineNumberChain_3360:
  .size printLineNumberChain,End_printLineNumberChain_3360-printLineNumberChain



        .type      skipToEoln__hla_3373,@function

skipToEoln__hla_3373:
        jmp        continue__hla_3376
while__hla_3376:
        incl       %ebx 
continue__hla_3376:
        cmpl       end_source__hla_3369, %ebx 
        jnb        L3378__hla_
        cmpb       $10, (%ebx) 
        jne        while__hla_3376
L3378__hla_:
exitloop__hla_3376:

        incl       %ebx 
        incl       lineNumber__hla_3363 
        ret
End_skipToEoln__hla_3373_3381:
  .size skipToEoln__hla_3373,End_skipToEoln__hla_3373_3381-skipToEoln__hla_3373



        .type      skipSpaces__hla_3384,@function

skipSpaces__hla_3384:
        decl       %ebx 

skipSpcs__hla_3387:
        incl       %ebx 
        cmpl       end_source__hla_3369, %ebx 
        jae        skippedSpaces__hla_3388
        mov        (%ebx), %al 
        cmpb       $32, %al 
        je         skipSpcs__hla_3387
        cmpb       $9, %al 
        je         skipSpcs__hla_3387
        cmpb       $13, %al 
        je         skipSpcs__hla_3387

skippedSpaces__hla_3388:
        ret
End_skipSpaces__hla_3384_3391:
  .size skipSpaces__hla_3384,End_skipSpaces__hla_3384_3391-skipSpaces__hla_3384



        .type      skipSpaces2__hla_3394,@function

skipSpaces2__hla_3394:
        decl       %ebx 

skipSpcs__hla_3397:
        incl       %ebx 
        cmpl       end_source__hla_3369, %ebx 
        jae        skippedSpaces__hla_3398
        mov        (%ebx), %al 
        cmpb       $32, %al 
        je         skipSpcs__hla_3397
        cmpb       $9, %al 
        je         skipSpcs__hla_3397
        cmpb       $13, %al 
        je         skipSpcs__hla_3397
        ret

skippedSpaces__hla_3398:
        pushl      $str__hla_3399 
        call       STDOUT_PUTS
        mov        $20, %eax 
        jmp        Raise__hla_
End_skipSpaces2__hla_3394_3402:
  .size skipSpaces2__hla_3394,End_skipSpaces2__hla_3394_3402-skipSpaces2__hla_3394



        .type      grabID__hla_3405,@function

grabID__hla_3405:
        mov        4(%esp), %ecx 
forever__hla_3410:
continue__hla_3409:
        cmpl       end_source__hla_3369, %ebx 
        jae        exitloop__hla_3409
        movzbl     (%ebx), %eax 
        btl        %eax, idSet__hla_3406 
        jnc        exitloop__hla_3409
        mov        %al, (%ecx) 
        incl       %ebx 
        incl       %ecx 
        jmp        forever__hla_3410
exitloop__hla_3409:

        movb       $0, (%ecx) 
        mov        4(%esp), %edx 
        subl       %edx, %ecx 
        mov        %ecx, -4(%edx) 
        pushl      %esi 
        pushl      %edi 
false__hla_3413:
repeat__hla_3413:
        pushl      %edx 
        movl       $equatesTable, %esi 
        mov        (%esi), %edi 
        call *     8(%edi) 
        cmpl       $0, %eax 
        je         false__hla_3414
        mov        4(%eax), %eax 
        pushl      %eax 
        pushl      %edx 
        call       STR_CPY
false__hla_3414:
continue__hla_3413:
        cmpl       $0, %eax 
        jne        repeat__hla_3413
exitloop__hla_3413:

        popl       %edi 
        popl       %esi 
        cmpl       end_source__hla_3369, %ebx 
        setb       %al 
        movzbl     %al, %eax 
        ret        $4
End_grabID__hla_3405_3417:
  .size grabID__hla_3405,End_grabID__hla_3405_3417-grabID__hla_3405



        .type      unknownStmt__hla_3420,@function

unknownStmt__hla_3420:
        pushl      $str__hla_3423 
        call       STDOUT_PUTS
        mov        start_stmt__hla_3370, %ebx 
        jmp        continue__hla_3424
while__hla_3424:
        pushl      (%ebx) 
        call       STDOUT_PUTC
        incl       %ebx 
continue__hla_3424:
        cmpl       end_source__hla_3369, %ebx 
        jnb        L3426__hla_
        cmpb       $10, (%ebx) 
        jne        while__hla_3424
L3426__hla_:
exitloop__hla_3424:

        incl       %ebx 
        incl       lineNumber__hla_3363 
        call       STDOUT_NEWLN
        ret
End_unknownStmt__hla_3420_3429:
  .size unknownStmt__hla_3420,End_unknownStmt__hla_3420_3429-unknownStmt__hla_3420



        .type      getOperand__hla_3435,@function

getOperand__hla_3435:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $1028, %esp 
        pushl      %esi 
        call       skipSpaces2__hla_3394
        movzbl     (%ebx), %eax 
        cmpl       $36, %eax 
        jl         default__hla_3438
        cmpl       $122, %eax 
        jg         default__hla_3438
        jmp *      jmpTbl__hla_3438-144(,%eax,4) 
case__hla_3439:
        lea        1(%ebx), %esi 
        call       CONV_ATOH32
        movl       %esi, %ebx 
        xorl       %edx, %edx 
        jmp        endswitch__hla_3438
case__hla_3440:
        lea        (%ebx), %esi 
        call       CONV_ATOU32
        movl       %esi, %ebx 
        xorl       %edx, %edx 
        jmp        endswitch__hla_3438
case__hla_3441:
        pushl      %ebp 
        addl       $-1028, (%esp) 
        pushl      $1024 
        call       STR_INIT
        mov        %eax, -4(%ebp) 
        pushl      -4(%ebp) 
        call       grabID__hla_3405
        pushl      -4(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        call *     4(%edi) 
        cmpl       $0, 4(%eax) 
        jne        false__hla_3442
        movl       %eax, %edx 
        pushl      $24 
        call       MEM_ALLOC1
        mov        %eax, 4(%edx) 
        movb       $4, 21(%eax) 
        mov        8(%edx), %ecx 
        mov        %ecx, 4(%eax) 
        movl       $0, 12(%eax) 
        movl       $0, (%eax) 
        movb       $0, 20(%eax) 
        jmp        endif__hla_3442
false__hla_3442:
        mov        4(%eax), %edx 
        orb        $4, 21(%edx) 
        movl       %eax, %edx 
endif__hla_3442:
        xorl       %eax, %eax 
        jmp        endswitch__hla_3438
case__hla_3443:
        addl       $1, %ebx 
        call       RelExpr__hla_3432
        pushl      %eax 
        call       skipSpaces2__hla_3394
        cmpb       $41, %al 
        je         false__hla_3444
        pushl      $str__hla_3445 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3363 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $9, %eax 
        jmp        Raise__hla_
false__hla_3444:
        addl       $1, %ebx 
        popl       %eax 
        jmp        endswitch__hla_3438
default__hla_3438:
        pushl      $str__hla_3446 
        call       STDOUT_PUTS
        pushl      %eax 
        call       STDOUT_PUTC
        pushl      $str__hla_3447 
        call       STDOUT_PUTS
        pushl      lineNumber__hla_3363 
        call       STDOUT_PUTU32
        call       STDOUT_NEWLN
        mov        $20, %eax 
        jmp        Raise__hla_
endswitch__hla_3438:
        popl       %esi 
xgetOperand__hla_3435__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
End_getOperand__hla_3435_3450:
  .size getOperand__hla_3435,End_getOperand__hla_3435_3450-getOperand__hla_3435



        .type      RelExpr__hla_3432,@function

RelExpr__hla_3432:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $8, %esp 
        call       getOperand__hla_3435
        mov        %eax, -4(%ebp) 
        mov        %edx, -8(%ebp) 
forever__hla_3454:
continue__hla_3453:
        movzbl     (%ebx), %eax 
        cmpl       $43, %eax 
        je         case__hla_3456
        cmpl       $45, %eax 
        je         case__hla_3459
        jmp        default__hla_3455
case__hla_3456:
        addl       $1, %ebx 
        call       getOperand__hla_3435
        cmpl       $0, %edx 
        je         false__hla_3457
        pushl      $str__hla_3458 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3363 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3457:
        addl       %eax, -4(%ebp) 
        jmp        endswitch__hla_3455
case__hla_3459:
        addl       $1, %ebx 
        call       getOperand__hla_3435
        cmpl       $0, %edx 
        je         false__hla_3460
        pushl      $str__hla_3458 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3363 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3460:
        negl       %eax 
        addl       %eax, -4(%ebp) 
        jmp        endswitch__hla_3455
default__hla_3455:
        jmp        exitloop__hla_3453
endswitch__hla_3455:
        jmp        forever__hla_3454
exitloop__hla_3453:

        mov        -4(%ebp), %eax 
        mov        -8(%ebp), %edx 
xRelExpr__hla_3432__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
End_RelExpr__hla_3432_3463:
  .size RelExpr__hla_3432,End_RelExpr__hla_3432_3463-RelExpr__hla_3432



        .type      EvalExpr__hla_3466,@function

EvalExpr__hla_3466:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %edx 
        call       RelExpr__hla_3432
        cmpl       $0, %edx 
        je         false__hla_3469
        pushl      $str__hla_3470 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3363 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3469:
        popl       %edx 
xEvalExpr__hla_3466__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
End_EvalExpr__hla_3466_3473:
  .size EvalExpr__hla_3466,End_EvalExpr__hla_3466_3473-EvalExpr__hla_3466



        .type      parseBytes__hla_3476,@function

parseBytes__hla_3476:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $12, %esp 
        call       skipSpaces2__hla_3394
        cmpb       $34, (%ebx) 
        jne        false__hla_3479
        addl       $1, %ebx 
        mov        %ebx, -4(%ebp) 
        jmp        continue__hla_3480
while__hla_3480:
        addl       $1, %ebx 
continue__hla_3480:
        cmpb       $34, (%ebx) 
        jne        while__hla_3480
exitloop__hla_3480:

        mov        %ebx, -8(%ebp) 
        call       skipSpaces2__hla_3394
        cmpb       $44, (%ebx) 
        jne        false__hla_3482
        addl       $1, %ebx 
        mov        -8(%ebp), %eax 
        subl       -4(%ebp), %eax 
        addl       8(%ebp), %eax 
        pushl      %eax 
        call       parseBytes__hla_3476
        jmp        endif__hla_3482
false__hla_3482:
        mov        -8(%ebp), %ecx 
        subl       -4(%ebp), %ecx 
        addl       8(%ebp), %ecx 
        addl       $17, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC1
        subl       $17, %ecx 
        pushl      %edx 
        mov        tknListTail__hla_3364, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %ecx, 13(%eax) 
        mov        %eax, tknListTail__hla_3364 
        popl       %edx 
        addl       $17, %eax 
endif__hla_3482:
        pushl      %esi 
        pushl      %edi 
        pushl      %ecx 
        cld
        mov        -4(%ebp), %esi 
        movl       %eax, %edi 
        addl       8(%ebp), %edi 
        mov        -8(%ebp), %ecx 
        subl       %esi, %ecx 
        cld
        rep movsb
        popl       %ecx 
        popl       %edi 
        popl       %esi 
        jmp        endif__hla_3479
false__hla_3479:
        call       EvalExpr__hla_3466
        cmpl       $256, %eax 
        jnae       false__hla_3483
        pushl      $str__hla_3484 
        call       STDOUT_PUTS
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_3483:
        mov        %al, -9(%ebp) 
        call       skipSpaces2__hla_3394
        cmpb       $44, (%ebx) 
        jne        false__hla_3485
        addl       $1, %ebx 
        mov        8(%ebp), %eax 
        addl       $1, %eax 
        pushl      %eax 
        call       parseBytes__hla_3476
        jmp        endif__hla_3485
false__hla_3485:
        mov        8(%ebp), %ecx 
        addl       $18, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC1
        subl       $17, %ecx 
        pushl      %edx 
        mov        tknListTail__hla_3364, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %ecx, 13(%eax) 
        mov        %eax, tknListTail__hla_3364 
        popl       %edx 
        addl       $17, %eax 
endif__hla_3485:
        pushl      %ebx 
        pushl      %edx 
        mov        -9(%ebp), %bl 
        mov        8(%ebp), %edx 
        mov        %bl, (%eax,%edx,1) 
        popl       %edx 
        popl       %ebx 
endif__hla_3479:
xparseBytes__hla_3476__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
End_parseBytes__hla_3476_3488:
  .size parseBytes__hla_3476,End_parseBytes__hla_3476_3488-parseBytes__hla_3476



        .type      parseWords__hla_3491,@function

parseWords__hla_3491:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $12, %esp 
        pushl      %edx 
        call       skipSpaces2__hla_3394
        call       EvalExpr__hla_3466
        cmpl       $65536, %eax 
        jnae       false__hla_3494
        pushl      $str__hla_3495 
        call       STDOUT_PUTS
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_3494:
        mov        %ax, -10(%ebp) 
        call       skipSpaces2__hla_3394
        cmpb       $44, (%ebx) 
        jne        false__hla_3496
        addl       $1, %ebx 
        mov        8(%ebp), %eax 
        addl       $2, %eax 
        pushl      %eax 
        call       parseWords__hla_3491
        jmp        endif__hla_3496
false__hla_3496:
        mov        8(%ebp), %ecx 
        addl       $19, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC1
        subl       $17, %ecx 
        mov        tknListTail__hla_3364, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %ecx, 13(%eax) 
        mov        %eax, tknListTail__hla_3364 
        addl       $17, %eax 
        pushl      %ebx 
        mov        -10(%ebp), %bx 
        mov        8(%ebp), %edx 
        mov        %bx, (%eax,%edx,1) 
        popl       %ebx 
endif__hla_3496:
        popl       %edx 
xparseWords__hla_3491__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
End_parseWords__hla_3491_3499:
  .size parseWords__hla_3491,End_parseWords__hla_3491_3499-parseWords__hla_3491



        .type      parseDwords__hla_3502,@function

parseDwords__hla_3502:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $16, %esp 
        pushl      %edx 
        call       skipSpaces2__hla_3394
        call       RelExpr__hla_3432
        mov        %eax, -12(%ebp) 
        cmpl       $0, %edx 
        jne        false__hla_3505
        pushl      $21 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3364, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        movl       $4, 13(%eax) 
        mov        %eax, tknListTail__hla_3364 
        mov        -12(%ebp), %edx 
        mov        %edx, 17(%eax) 
        clc
        jmp        endif__hla_3505
false__hla_3505:
        pushl      $21 
        call       MEM_ALLOC1
        pushl      %edx 
        mov        tknListTail__hla_3364, %edx 
        movb       $5, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %eax, tknListTail__hla_3364 
        popl       %edx 
        mov        %edx, 13(%eax) 
        mov        -12(%ebp), %edx 
        mov        %edx, 17(%eax) 
        stc
endif__hla_3505:
        popl       %edx 
xparseDwords__hla_3502__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
End_parseDwords__hla_3502_3508:
  .size parseDwords__hla_3502,End_parseDwords__hla_3502_3508-parseDwords__hla_3502



        .type      EvalQWord__hla_3514,@function

EvalQWord__hla_3514:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %esi 
        mov        (%ebx), %al 
        cmpb       $36, %al 
        jne        false__hla_3517
        addl       $1, %ebx 
        lea        (%ebx), %esi 
        call       CONV_ATOH64
        movl       %esi, %ebx 
        jmp        endif__hla_3517
false__hla_3517:
        lea        (%ebx), %esi 
        call       CONV_ATOU64
        movl       %esi, %ebx 
endif__hla_3517:
        popl       %esi 
xEvalQWord__hla_3514__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
End_EvalQWord__hla_3514_3520:
  .size EvalQWord__hla_3514,End_EvalQWord__hla_3514_3520-EvalQWord__hla_3514



        .type      parseQWords__hla_3511,@function

parseQWords__hla_3511:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $16, %esp 
        pushl      %edx 
        call       skipSpaces2__hla_3394
        call       EvalQWord__hla_3514
        mov        %eax, -16(%ebp) 
        mov        %edx, -12(%ebp) 
        call       skipSpaces2__hla_3394
        cmpb       $44, (%ebx) 
        jne        false__hla_3523
        addl       $1, %ebx 
        mov        8(%ebp), %eax 
        addl       $8, %eax 
        pushl      %eax 
        call       parseQWords__hla_3511
        jmp        endif__hla_3523
false__hla_3523:
        mov        8(%ebp), %ecx 
        addl       $25, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC1
        subl       $17, %ecx 
        mov        tknListTail__hla_3364, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %ecx, 13(%eax) 
        mov        %eax, tknListTail__hla_3364 
        addl       $17, %eax 
        pushl      %ebx 
        mov        -16(%ebp), %ebx 
        mov        8(%ebp), %edx 
        mov        %ebx, (%eax,%edx,1) 
        mov        -12(%ebp), %ebx 
        mov        %ebx, 4(%eax,%edx,1) 
        popl       %ebx 
endif__hla_3523:
        popl       %edx 
xparseQWords__hla_3511__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
End_parseQWords__hla_3511_3526:
  .size parseQWords__hla_3511,End_parseQWords__hla_3511_3526-parseQWords__hla_3511



        .type      EvalTByte__hla_3532,@function

EvalTByte__hla_3532:
        pushl      %esi 
        mov        (%ebx), %al 
        cmpb       $36, %al 
        jne        false__hla_3535
        addl       $1, %ebx 
        lea        (%ebx), %esi 
        pushl      %ebp 
        addl       $-24, (%esp) 
        call       CONV_ATOH80
        movl       %esi, %ebx 
        jmp        endif__hla_3535
false__hla_3535:
        lea        (%ebx), %esi 
        pushl      %ebp 
        addl       $-24, (%esp) 
        call       CONV_ATOU128
        movl       %esi, %ebx 
        movzwl     -14(%ebp), %eax 
        orl        -12(%ebp), %eax 
        testl      %eax, %eax 
        je         false__hla_3536
        pushl      $str__hla_3537 
        call       STDOUT_PUTS
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_3536:
endif__hla_3535:
        popl       %esi 
        ret
End_EvalTByte__hla_3532_3540:
  .size EvalTByte__hla_3532,End_EvalTByte__hla_3532_3540-EvalTByte__hla_3532



        .type      parseTBytes__hla_3529,@function

parseTBytes__hla_3529:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $24, %esp 
        pushl      %edx 
        call       skipSpaces2__hla_3394
        call       EvalTByte__hla_3532
        call       skipSpaces2__hla_3394
        cmpb       $44, (%ebx) 
        jne        false__hla_3543
        addl       $1, %ebx 
        mov        8(%ebp), %eax 
        addl       $10, %eax 
        pushl      %eax 
        call       parseTBytes__hla_3529
        jmp        endif__hla_3543
false__hla_3543:
        mov        8(%ebp), %ecx 
        addl       $27, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC1
        subl       $17, %ecx 
        mov        tknListTail__hla_3364, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %ecx, 13(%eax) 
        mov        %eax, tknListTail__hla_3364 
        addl       $17, %eax 
        pushl      %ebx 
        mov        -24(%ebp), %ebx 
        mov        8(%ebp), %edx 
        mov        %ebx, (%eax,%edx,1) 
        mov        -20(%ebp), %ebx 
        mov        %ebx, 4(%eax,%edx,1) 
        mov        -16(%ebp), %bx 
        mov        %bx, 8(%eax,%edx,1) 
        popl       %ebx 
endif__hla_3543:
        popl       %edx 
xparseTBytes__hla_3529__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
End_parseTBytes__hla_3529_3546:
  .size parseTBytes__hla_3529,End_parseTBytes__hla_3529_3546-parseTBytes__hla_3529



        .type      EvalLWord__hla_3552,@function

EvalLWord__hla_3552:
        pushl      %esi 
        mov        (%ebx), %al 
        cmpb       $36, %al 
        jne        false__hla_3555
        addl       $1, %ebx 
        lea        (%ebx), %esi 
        pushl      %ebp 
        addl       $-24, (%esp) 
        call       CONV_ATOH128
        movl       %esi, %ebx 
        jmp        endif__hla_3555
false__hla_3555:
        lea        (%ebx), %esi 
        pushl      %ebp 
        addl       $-24, (%esp) 
        call       CONV_ATOU128
        movl       %esi, %ebx 
endif__hla_3555:
        popl       %esi 
        ret
End_EvalLWord__hla_3552_3558:
  .size EvalLWord__hla_3552,End_EvalLWord__hla_3552_3558-EvalLWord__hla_3552



        .type      parseLWords__hla_3549,@function

parseLWords__hla_3549:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $24, %esp 
        pushl      %edx 
        call       skipSpaces2__hla_3394
        call       EvalLWord__hla_3552
        call       skipSpaces2__hla_3394
        cmpb       $44, (%ebx) 
        jne        false__hla_3561
        addl       $1, %ebx 
        mov        8(%ebp), %eax 
        addl       $16, %eax 
        pushl      %eax 
        call       parseTBytes__hla_3529
        jmp        endif__hla_3561
false__hla_3561:
        mov        8(%ebp), %ecx 
        addl       $33, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC1
        subl       $17, %ecx 
        mov        tknListTail__hla_3364, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %ecx, 13(%eax) 
        mov        %eax, tknListTail__hla_3364 
        addl       $17, %eax 
        pushl      %ebx 
        mov        -24(%ebp), %ebx 
        mov        8(%ebp), %edx 
        mov        %ebx, (%eax,%edx,1) 
        mov        -20(%ebp), %ebx 
        mov        %ebx, 4(%eax,%edx,1) 
        mov        -16(%ebp), %ebx 
        mov        %ebx, 8(%eax,%edx,1) 
        mov        -12(%ebp), %ebx 
        mov        %ebx, 12(%eax,%edx,1) 
        popl       %ebx 
endif__hla_3561:
        popl       %edx 
xparseLWords__hla_3549__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
End_parseLWords__hla_3549_3564:
  .size parseLWords__hla_3549,End_parseLWords__hla_3549_3564-parseLWords__hla_3549



        .type      coalesce__hla_3567,@function

coalesce__hla_3567:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $32, %esp 
        mov        %eax, -16(%ebp) 
        mov        %ecx, -20(%ebp) 
        mov        %edx, -24(%ebp) 
        mov        %esi, -28(%ebp) 
        mov        %edi, -32(%ebp) 
        mov        8(%ebp), %edx 
        mov        (%edx), %esi 
        mov        %esi, -8(%ebp) 
        mov        (%esi), %eax 
        mov        %eax, -4(%ebp) 
        mov        13(%edx), %ecx 
        addl       13(%esi), %ecx 
        mov        %ecx, -12(%ebp) 
        addl       $17, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC1
        mov        13(%esi), %ecx 
        addl       $17, %ecx 
        movl       %eax, %edi 
        cld
        rep movsb
        mov        -12(%ebp), %ecx 
        mov        %ecx, 13(%eax) 
        mov        8(%ebp), %esi 
        mov        13(%esi), %ecx 
        addl       $17, %esi 
        cld
        rep movsb
        mov        -4(%ebp), %edx 
        mov        %eax, 4(%edx) 
        mov        %edx, (%eax) 
        movl       $0, 4(%eax) 
        mov        %eax, tknListTail__hla_3364 
        pushl      8(%ebp) 
        call       MEM_FREE
        pushl      -8(%ebp) 
        call       MEM_FREE
        mov        -16(%ebp), %eax 
        mov        -20(%ebp), %ecx 
        mov        -24(%ebp), %edx 
        mov        -28(%ebp), %esi 
        mov        -32(%ebp), %edi 
xcoalesce__hla_3567__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
End_coalesce__hla_3567_3572:
  .size coalesce__hla_3567,End_coalesce__hla_3567_3572-coalesce__hla_3567



        .type      initStmt__hla_3575,@function

initStmt__hla_3575:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ecx 
        pushl      8(%ebp) 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3364, %ecx 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        mov        %eax, 4(%ecx) 
        mov        %eax, tknListTail__hla_3364 
        popl       %ecx 
xinitStmt__hla_3575__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
End_initStmt__hla_3575_3580:
  .size initStmt__hla_3575,End_initStmt__hla_3575_3580-initStmt__hla_3575



        .type      parseSourceFileList__hla_3583,@function

parseSourceFileList__hla_3583:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %edx 
        call       skipSpaces2__hla_3394
        cmpb       $59, (%ebx) 
        jne        false__hla_3587
        pushl      %ecx 
        pushl      %esi 
        pushl      %edi 
        addl       $1, %ebx 
        call       skipSpaces2__hla_3394
        movl       %ebx, %ecx 
        subl       $1, %ebx 
false__hla_3588:
repeat__hla_3588:
        addl       $1, %ebx 
        movzbl     (%ebx), %eax 
        btl        %eax, filenameDelims__hla_3584 
continue__hla_3588:
        jnc        repeat__hla_3588
exitloop__hla_3588:

        movl       %ebx, %eax 
        subl       %ecx, %eax 
        cmpl       $512, %eax 
        jna        false__hla_3589
        pushl      $str__hla_3590 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3363 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_3589:
        pushl      $12 
        call       MEM_ALLOC1
        mov        8(%ebp), %edx 
        mov        %eax, (%edx) 
        movl       %eax, %edx 
        pushl      %ecx 
        pushl      %ebx 
        call       STR_A_BUFTOSTR2
        addl       $1, %ebx 
        mov        %eax, 4(%edx) 
        cmpb       $44, (%ebx) 
        jne        false__hla_3591
        addl       $1, %ebx 
false__hla_3591:
        call       skipSpaces2__hla_3394
        movl       %ebx, %esi 
        call       CONV_ATOU32
        movl       %esi, %ebx 
        mov        %eax, 8(%edx) 
        movl       $0, (%edx) 
        lea        (%edx), %eax 
        popl       %edi 
        popl       %esi 
        popl       %ecx 
        pushl      %eax 
        call       parseSourceFileList__hla_3583
        jmp        endif__hla_3587
false__hla_3587:
        mov        8(%ebp), %edx 
        movl       $0, (%edx) 
endif__hla_3587:
        popl       %edx 
xparseSourceFileList__hla_3583__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
End_parseSourceFileList__hla_3583_3594:
  .size parseSourceFileList__hla_3583,End_parseSourceFileList__hla_3583_3594-parseSourceFileList__hla_3583



        .type      getDisp__hla_3597,@function

getDisp__hla_3597:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %eax 
        call       skipSpaces__hla_3384
        call       RelExpr__hla_3432
        popl       %ecx 
        mov        %eax, 21(%ecx) 
        mov        %edx, 17(%ecx) 
        movl       $0, 13(%ecx) 
        lea        25(%ecx), %eax 
        pushl      %eax 
        call       parseSourceFileList__hla_3583
        call       skipToEoln__hla_3373
xgetDisp__hla_3597__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
End_getDisp__hla_3597_3602:
  .size getDisp__hla_3597,End_getDisp__hla_3597_3602-getDisp__hla_3597



        .type      emitDummy__hla_3605,@function

emitDummy__hla_3605:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %eax 
        pushl      %ecx 
        pushl      $13 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3364, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $21, 8(%eax) 
        mov        %eax, tknListTail__hla_3364 
        popl       %ecx 
        popl       %eax 
xemitDummy__hla_3605__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
End_emitDummy__hla_3605_3610:
  .size emitDummy__hla_3605,End_emitDummy__hla_3605_3610-emitDummy__hla_3605



        .type      lexer,@function

lexer:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $5144, %esp 
        movl       $0, -12(%ebp) 
        movl       $0, -4(%ebp) 
        pushl      %ebp 
        addl       $-1036, (%esp) 
        pushl      $1024 
        call       STR_INIT
        mov        %eax, -8(%ebp) 
        mov        20(%ebp), %eax 
        mov        %eax, end_source__hla_3369 
        pushl      $13 
        call       MEM_ALLOC1
        movl       $0, 4(%eax) 
        movl       $0, (%eax) 
        movb       $0, 8(%eax) 
        mov        %eax, -5136(%ebp) 
        mov        %eax, codeListTail__hla_3366 
        mov        %eax, tknListTail__hla_3364 
        movl       $codeListTail__hla_3366, lastTailPtr__hla_3365 
        movb       $1, currentSection 
        pushl      $13 
        call       MEM_ALLOC1
        movl       $0, 4(%eax) 
        movl       $0, (%eax) 
        movb       $0, 8(%eax) 
        mov        %eax, -5140(%ebp) 
        mov        %eax, dataListTail__hla_3367 
        pushl      $13 
        call       MEM_ALLOC1
        movl       $0, 4(%eax) 
        movl       $0, (%eax) 
        movb       $0, 8(%eax) 
        mov        %eax, -5144(%ebp) 
        mov        %eax, bssListTail__hla_3368 
        mov        24(%ebp), %ebx 
forever__hla_3614:
continue__hla_3613:
        mov        %ebx, start_stmt__hla_3370 
        decl       %ebx 

skipSpcs__hla_3615:
        incl       %ebx 
        cmpl       end_source__hla_3369, %ebx 
        jae        exitloop__hla_3613
        mov        (%ebx), %al 
        cmpb       $32, %al 
        je         skipSpcs__hla_3615
        cmpb       $9, %al 
        je         skipSpcs__hla_3615
        cmpb       $13, %al 
        je         skipSpcs__hla_3615
        cmpb       $10, %al 
        jne        false__hla_3617
        incl       %ebx 
        incl       lineNumber__hla_3363 
        jmp        continue__hla_3613
false__hla_3617:
        cmpb       $59, %al 
        jne        false__hla_3618
        call       skipToEoln__hla_3373
        jmp        continue__hla_3613
false__hla_3618:
        cmpb       $46, %al 
        jne        false__hla_3619
        addl       $1, %ebx 
        movzbl     (%ebx), %eax 
        cmpl       $97, %eax 
        jl         default__hla_3620
        cmpl       $122, %eax 
        jg         default__hla_3620
        jmp *      jmpTbl__hla_3620-388(,%eax,4) 
case__hla_3621:
        pushl      $17 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3364, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $1, 8(%eax) 
        mov        %eax, tknListTail__hla_3364 
        addl       $1, %ebx 
        call       EvalExpr__hla_3466
        mov        tknListTail__hla_3364, %ecx 
        mov        %eax, 13(%ecx) 
        call       skipToEoln__hla_3373
        jmp        endswitch__hla_3620
case__hla_3622:
        addl       $1, %ebx 
        pushl      $0 
        call       parseBytes__hla_3476
        subl       $17, %eax 
        mov        (%eax), %ecx 
        cmpl       $0, %ecx 
        jne        _0e27_skipAssertion___hla_3627
        pushl      _0e28_msg___hla_3625 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0e27_skipAssertion___hla_3627:
        cmpb       $2, 8(%ecx) 
        jne        false__hla_3628
        pushl      %eax 
        call       coalesce__hla_3567
false__hla_3628:
        call       skipToEoln__hla_3373
        jmp        endswitch__hla_3620
case__hla_3629:
        call       emitDummy__hla_3605
        movb       $1, currentSection 
        mov        lastTailPtr__hla_3365, %eax 
        mov        tknListTail__hla_3364, %ecx 
        mov        %ecx, (%eax) 
        movl       $codeListTail__hla_3366, lastTailPtr__hla_3365 
        mov        codeListTail__hla_3366, %eax 
        mov        %eax, tknListTail__hla_3364 
        pushl      $13 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3364, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $10, 8(%eax) 
        mov        %eax, tknListTail__hla_3364 
        call       skipToEoln__hla_3373
        jmp        endswitch__hla_3620
case__hla_3630:
        addl       $1, %ebx 
        pushl      $0 
        call       parseDwords__hla_3502
        jc         false__hla_3631
        mov        (%eax), %ecx 
        cmpl       $0, %ecx 
        jne        _0e30_skipAssertion___hla_3636
        pushl      _0e31_msg___hla_3634 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0e30_skipAssertion___hla_3636:
        cmpb       $2, 8(%ecx) 
        jne        false__hla_3637
        pushl      %eax 
        call       coalesce__hla_3567
false__hla_3637:
false__hla_3631:
        call       skipToEoln__hla_3373
        jmp        endswitch__hla_3620
case__hla_3638:
        addl       $1, %ebx 
        call       skipSpaces2__hla_3394
        pushl      -8(%ebp) 
        call       grabID__hla_3405
        pushl      -8(%ebp) 
        movl       $equatesTable, %esi 
        mov        (%esi), %edi 
        call *     4(%edi) 
        cmpl       $0, 4(%eax) 
        jne        false__hla_3639
        pushl      %eax 
        call       skipSpaces2__hla_3394
        cmpb       $44, (%ebx) 
        je         false__hla_3640
        pushl      $str__hla_3641 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3363 
        call       STDERR_PUTU32
        pushl      $str__hla_3642 
        call       STDERR_PUTS
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3640:
        addl       $1, %ebx 
        call       skipSpaces2__hla_3394
        pushl      -8(%ebp) 
        call       grabID__hla_3405
        pushl      -8(%ebp) 
        call       STR_A_CPY
        popl       %edx 
        mov        %eax, 4(%edx) 
        jmp        endif__hla_3639
false__hla_3639:
        pushl      $str__hla_3643 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3363 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
endif__hla_3639:
        jmp        endswitch__hla_3620
case__hla_3644:
        addl       $1, %ebx 
        call       skipSpaces2__hla_3394
        pushl      -8(%ebp) 
        call       grabID__hla_3405
        pushl      -8(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        call *     4(%edi) 
        cmpl       $0, 4(%eax) 
        je         false__hla_3645
        movl       %eax, %edx 
        pushl      $17 
        call       MEM_ALLOC1
        movb       $4, 8(%eax) 
        mov        %edx, 13(%eax) 
        mov        tknListTail__hla_3364, %ecx 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        mov        %eax, 4(%ecx) 
        mov        %eax, tknListTail__hla_3364 
        jmp        endif__hla_3645
false__hla_3645:
        pushl      $str__hla_3646 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3363 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
endif__hla_3645:
        call       skipToEoln__hla_3373
        jmp        endswitch__hla_3620
case__hla_3647:
        addl       $1, %ebx 
        pushl      $0 
        call       parseLWords__hla_3549
        subl       $17, %eax 
        mov        (%eax), %ecx 
        cmpl       $0, %ecx 
        jne        _0e40_skipAssertion___hla_3652
        pushl      _0e41_msg___hla_3650 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0e40_skipAssertion___hla_3652:
        cmpb       $2, 8(%ecx) 
        jne        false__hla_3653
        pushl      %eax 
        call       coalesce__hla_3567
false__hla_3653:
        call       skipToEoln__hla_3373
        jmp        endswitch__hla_3620
case__hla_3654:
        addl       $1, %ebx 
        call       skipSpaces2__hla_3394
        pushl      -8(%ebp) 
        call       grabID__hla_3405
        pushl      -8(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        call *     4(%edi) 
        cmpl       $0, 4(%eax) 
        jne        false__hla_3655
        movl       %eax, %ecx 
        pushl      $24 
        call       MEM_ALLOC1
        mov        %eax, 4(%ecx) 
        movb       $2, 21(%eax) 
        movl       $0, 12(%eax) 
        movl       $0, (%eax) 
        mov        8(%ecx), %ecx 
        mov        %ecx, 4(%eax) 
        movb       $0, 20(%eax) 
        jmp        endif__hla_3655
false__hla_3655:
        mov        4(%eax), %ecx 
        testb      $1, 21(%ecx) 
        jz         false__hla_3656
        pushl      $str__hla_3657 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3363 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3656:
        orb        $2, 21(%ecx) 
endif__hla_3655:
        call       skipToEoln__hla_3373
        jmp        endswitch__hla_3620
case__hla_3658:
        addl       $1, %ebx 
        pushl      $0 
        call       parseQWords__hla_3511
        subl       $17, %eax 
        mov        (%eax), %ecx 
        cmpl       $0, %ecx 
        jne        _0e4b_skipAssertion___hla_3663
        pushl      _0e4c_msg___hla_3661 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0e4b_skipAssertion___hla_3663:
        cmpb       $2, 8(%ecx) 
        jne        false__hla_3664
        pushl      %eax 
        call       coalesce__hla_3567
false__hla_3664:
        call       skipToEoln__hla_3373
        jmp        endswitch__hla_3620
case__hla_3665:
        pushl      $17 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3364, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $6, 8(%eax) 
        mov        %eax, tknListTail__hla_3364 
        addl       $1, %ebx 
        call       EvalExpr__hla_3466
        mov        tknListTail__hla_3364, %ecx 
        mov        %eax, 13(%ecx) 
        call       skipToEoln__hla_3373
        jmp        endswitch__hla_3620
case__hla_3666:
        call       emitDummy__hla_3605
        movb       $2, currentSection 
        mov        lastTailPtr__hla_3365, %eax 
        mov        tknListTail__hla_3364, %ecx 
        mov        %ecx, (%eax) 
        movl       $dataListTail__hla_3367, lastTailPtr__hla_3365 
        mov        dataListTail__hla_3367, %eax 
        mov        %eax, tknListTail__hla_3364 
        pushl      $13 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3364, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $12, 8(%eax) 
        mov        %eax, tknListTail__hla_3364 
        call       skipToEoln__hla_3373
        jmp        endswitch__hla_3620
case__hla_3667:
        addl       $1, %ebx 
        pushl      $0 
        call       parseTBytes__hla_3529
        subl       $17, %eax 
        mov        (%eax), %ecx 
        cmpl       $0, %ecx 
        jne        _0e54_skipAssertion___hla_3672
        pushl      _0e55_msg___hla_3670 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0e54_skipAssertion___hla_3672:
        cmpb       $2, 8(%ecx) 
        jne        false__hla_3673
        pushl      %eax 
        call       coalesce__hla_3567
false__hla_3673:
        call       skipToEoln__hla_3373
        jmp        endswitch__hla_3620
case__hla_3674:
        addl       $1, %ebx 
        mov        (%ebx), %al 
        cmpb       $98, %al 
        jne        false__hla_3675
        pushl      $25 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3364, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $7, 8(%eax) 
        mov        %eax, tknListTail__hla_3364 
        addl       $1, %ebx 
        call       EvalExpr__hla_3466
        mov        tknListTail__hla_3364, %ecx 
        mov        %eax, 17(%ecx) 
        call       skipSpaces2__hla_3394
        cmpb       $44, (%ebx) 
        je         false__hla_3676
        pushl      $str__hla_3677 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3363 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3676:
        addl       $1, %ebx 
        call       EvalExpr__hla_3466
        mov        tknListTail__hla_3364, %ecx 
        mov        %eax, 21(%ecx) 
        movl       $1, 13(%ecx) 
        jmp        endif__hla_3675
false__hla_3675:
        cmpb       $119, %al 
        jne        false__hla_3678
        pushl      $25 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3364, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $8, 8(%eax) 
        mov        %eax, tknListTail__hla_3364 
        addl       $1, %ebx 
        call       EvalExpr__hla_3466
        mov        tknListTail__hla_3364, %ecx 
        mov        %eax, 17(%ecx) 
        call       skipSpaces2__hla_3394
        cmpb       $44, (%ebx) 
        je         false__hla_3679
        pushl      $str__hla_3680 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3363 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3679:
        addl       $1, %ebx 
        call       EvalExpr__hla_3466
        mov        tknListTail__hla_3364, %ecx 
        mov        %eax, 21(%ecx) 
        movl       $2, 13(%ecx) 
        jmp        endif__hla_3675
false__hla_3678:
        cmpb       $100, %al 
        jne        false__hla_3681
        pushl      $25 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3364, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $9, 8(%eax) 
        mov        %eax, tknListTail__hla_3364 
        addl       $1, %ebx 
        call       EvalExpr__hla_3466
        mov        tknListTail__hla_3364, %ecx 
        mov        %eax, 17(%ecx) 
        call       skipSpaces2__hla_3394
        cmpb       $44, (%ebx) 
        je         false__hla_3682
        pushl      $str__hla_3683 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3363 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3682:
        addl       $1, %ebx 
        call       EvalExpr__hla_3466
        mov        tknListTail__hla_3364, %ecx 
        mov        %eax, 21(%ecx) 
        movl       $4, 13(%ecx) 
        jmp        endif__hla_3675
false__hla_3681:
        call       unknownStmt__hla_3420
endif__hla_3675:
        call       skipToEoln__hla_3373
        jmp        endswitch__hla_3620
case__hla_3684:
        call       emitDummy__hla_3605
        movb       $3, currentSection 
        mov        lastTailPtr__hla_3365, %eax 
        mov        tknListTail__hla_3364, %ecx 
        mov        %ecx, (%eax) 
        movl       $bssListTail__hla_3368, lastTailPtr__hla_3365 
        mov        bssListTail__hla_3368, %eax 
        mov        %eax, tknListTail__hla_3364 
        pushl      $13 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3364, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $13, 8(%eax) 
        mov        %eax, tknListTail__hla_3364 
        call       skipToEoln__hla_3373
        jmp        endswitch__hla_3620
case__hla_3685:
        addl       $1, %ebx 
        pushl      $0 
        call       parseWords__hla_3491
        subl       $17, %eax 
        mov        (%eax), %ecx 
        cmpl       $0, %ecx 
        jne        _0e66_skipAssertion___hla_3690
        pushl      _0e67_msg___hla_3688 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0e66_skipAssertion___hla_3690:
        cmpb       $2, 8(%ecx) 
        jne        false__hla_3691
        pushl      %eax 
        call       coalesce__hla_3567
false__hla_3691:
        call       skipToEoln__hla_3373
        jmp        endswitch__hla_3620
case__hla_3692:
        addl       $1, %ebx 
        call       skipSpaces2__hla_3394
        pushl      -8(%ebp) 
        call       grabID__hla_3405
        pushl      -8(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        call *     4(%edi) 
        cmpl       $0, 4(%eax) 
        jne        false__hla_3693
        movl       %eax, %ecx 
        pushl      $24 
        call       MEM_ALLOC1
        mov        %eax, 4(%ecx) 
        movb       $1, 21(%eax) 
        movl       $0, 12(%eax) 
        movl       $0, (%eax) 
        mov        8(%ecx), %ecx 
        mov        %ecx, 4(%eax) 
        mov        currentSection, %cl 
        mov        %cl, 20(%eax) 
        jmp        endif__hla_3693
false__hla_3693:
        mov        4(%eax), %ecx 
        testb      $1, 21(%ecx) 
        jz         false__hla_3694
        mov        8(%eax), %eax 
        pushl      $str__hla_3695 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTS
        pushl      $str__hla_3696 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3363 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
        jmp        endif__hla_3694
false__hla_3694:
        testb      $8, 21(%ecx) 
        jz         false__hla_3697
        orb        $2, 21(%ecx) 
        jmp        endif__hla_3697
false__hla_3697:
        orb        $1, 21(%ecx) 
endif__hla_3697:
endif__hla_3694:
        movl       %ecx, %eax 
        mov        currentSection, %cl 
        mov        %cl, 20(%eax) 
endif__hla_3693:
        call       skipToEoln__hla_3373
        jmp        endswitch__hla_3620
case__hla_3698:
        call       skipToEoln__hla_3373
        jmp        endswitch__hla_3620
default__hla_3620:
        call       unknownStmt__hla_3420
endswitch__hla_3620:
        jmp        endif__hla_3619
false__hla_3619:
        cmpb       $58, %al 
        jne        false__hla_3699
        addl       $1, %ebx 
        call       skipSpaces2__hla_3394
        pushl      -8(%ebp) 
        call       grabID__hla_3405
        pushl      $17 
        call       MEM_ALLOC1
        movl       %eax, %edx 
        pushl      -8(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        call *     4(%edi) 
        cmpl       $0, 4(%eax) 
        jne        false__hla_3700
        movl       %eax, %ecx 
        pushl      $24 
        call       MEM_ALLOC1
        mov        %eax, 4(%ecx) 
        movb       $8, 21(%eax) 
        movl       $0, 12(%eax) 
        movl       $0, (%eax) 
        mov        8(%ecx), %edx 
        mov        %edx, 4(%eax) 
        mov        currentSection, %dl 
        mov        %dl, 20(%eax) 
        movb       $0, 22(%eax) 
        movl       $0, 16(%eax) 
        movl       %ecx, %eax 
        jmp        endif__hla_3700
false__hla_3700:
        mov        4(%eax), %ecx 
        testb      $8, 21(%ecx) 
        jz         false__hla_3701
        pushl      $str__hla_3702 
        call       STDERR_PUTS
        pushl      8(%eax) 
        call       STDERR_PUTS
        pushl      $str__hla_3703 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3363 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3701:
        testb      $1, 21(%ecx) 
        jz         false__hla_3704
        andb       $254, 21(%ecx) 
        orb        $2, 21(%ecx) 
false__hla_3704:
        orb        $8, 21(%ecx) 
        mov        currentSection, %dl 
        mov        %dl, 20(%ecx) 
        movb       $0, 22(%ecx) 
        movl       $0, 16(%ecx) 
endif__hla_3700:
        movl       %eax, %edx 
        pushl      $17 
        call       MEM_ALLOC1
        movb       $3, 8(%eax) 
        mov        %edx, 13(%eax) 
        mov        tknListTail__hla_3364, %ecx 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        mov        %eax, 4(%ecx) 
        mov        %eax, tknListTail__hla_3364 
        call       skipToEoln__hla_3373
        jmp        endif__hla_3619
false__hla_3699:
        lea        10(%ebx), %ecx 
        cmpl       end_source__hla_3369, %ecx 
        jna        false__hla_3705
        call       unknownStmt__hla_3420
        jmp        endif__hla_3705
false__hla_3705:
        cmpb       $106, %al 
        jne        false__hla_3706
        mov        1(%ebx), %eax 
        movl       %eax, %edx 
        bswap      %edx 
        cmpb       $32, %ah 
        jne        false__hla_3707
        cmpb       $97, %al 
        je         ja_instr__hla_3708
        cmpb       $98, %al 
        je         jb_instr__hla_3709
        cmpb       $99, %al 
        je         jc_instr__hla_3710
        cmpb       $101, %al 
        je         je_instr__hla_3711
        cmpb       $103, %al 
        je         jg_instr__hla_3712
        cmpb       $108, %al 
        je         jl_instr__hla_3713
        cmpb       $111, %al 
        je         jo_instr__hla_3714
        cmpb       $112, %al 
        je         jp_instr__hla_3715
        cmpb       $115, %al 
        je         js_instr__hla_3716
        cmpb       $122, %al 
        je         jz_instr__hla_3717
        call       unknownStmt__hla_3420
        jmp        Done__hla_3718

jnbe_instr__hla_3719:
        addl       $2, %ebx 

ja_instr__hla_3708:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3575
        movb       $16, 8(%eax) 
        movb       $119, 29(%eax) 
        movw       $34575, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3597
        jmp        Done__hla_3718

jnae_instr__hla_3720:
        addl       $2, %ebx 

jb_instr__hla_3709:

jc_instr__hla_3710:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3575
        movb       $16, 8(%eax) 
        movb       $114, 29(%eax) 
        movw       $33295, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3597
        jmp        Done__hla_3718

je_instr__hla_3711:

jz_instr__hla_3717:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3575
        movb       $16, 8(%eax) 
        movb       $116, 29(%eax) 
        movw       $33807, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3597
        jmp        Done__hla_3718

jnle_instr__hla_3721:
        addl       $2, %ebx 

jg_instr__hla_3712:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3575
        movb       $16, 8(%eax) 
        movb       $127, 29(%eax) 
        movw       $36623, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3597
        jmp        Done__hla_3718

jnge_instr__hla_3722:
        addl       $2, %ebx 

jl_instr__hla_3713:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3575
        movb       $16, 8(%eax) 
        movb       $124, 29(%eax) 
        movw       $35855, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3597
        jmp        Done__hla_3718

jo_instr__hla_3714:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3575
        movb       $16, 8(%eax) 
        movb       $112, 29(%eax) 
        movw       $32783, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3597
        jmp        Done__hla_3718

jpe_instr__hla_3723:
        addl       $1, %ebx 

jp_instr__hla_3715:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3575
        movb       $16, 8(%eax) 
        movb       $122, 29(%eax) 
        movw       $35343, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3597
        jmp        Done__hla_3718

js_instr__hla_3716:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3575
        movb       $16, 8(%eax) 
        movb       $120, 29(%eax) 
        movw       $34831, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3597
        jmp        Done__hla_3718
        jmp        endif__hla_3707
false__hla_3707:
        cmpb       $32, %dh 
        jne        false__hla_3724
        cmpw       $28781, %ax 
        je         jmp_instr__hla_3725
        cmpw       $25953, %ax 
        je         jae_instr__hla_3726
        cmpw       $25954, %ax 
        je         jbe_instr__hla_3727
        cmpw       $25959, %ax 
        je         jge_instr__hla_3728
        cmpw       $25964, %ax 
        je         jle_instr__hla_3729
        cmpw       $24942, %ax 
        je         jna_instr__hla_3730
        cmpw       $25198, %ax 
        je         jnb_instr__hla_3731
        cmpw       $25454, %ax 
        je         jnc_instr__hla_3732
        cmpw       $25966, %ax 
        je         jne_instr__hla_3733
        cmpw       $26478, %ax 
        je         jng_instr__hla_3734
        cmpw       $27758, %ax 
        je         jnl_instr__hla_3735
        cmpw       $28526, %ax 
        je         jno_instr__hla_3736
        cmpw       $28782, %ax 
        je         jnp_instr__hla_3737
        cmpw       $29550, %ax 
        je         jns_instr__hla_3738
        cmpw       $31342, %ax 
        je         jnz_instr__hla_3739
        cmpw       $25968, %ax 
        je         jpe_instr__hla_3723
        cmpw       $28528, %ax 
        je         jpo_instr__hla_3740
        call       unknownStmt__hla_3420
        jmp        Done__hla_3718

jmp_instr__hla_3725:
        pushl      $32 
        call       initStmt__hla_3575
        movb       $18, 8(%eax) 
        movb       $235, 29(%eax) 
        movb       $233, 30(%eax) 
        movb       $1, 31(%eax) 
        addl       $3, %ebx 
        call       getDisp__hla_3597
        jmp        Done__hla_3718

jnc_instr__hla_3732:

jnb_instr__hla_3731:

jae_instr__hla_3726:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3575
        movb       $16, 8(%eax) 
        movb       $115, 29(%eax) 
        movw       $33551, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3597
        jmp        Done__hla_3718

jna_instr__hla_3730:

jbe_instr__hla_3727:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3575
        movb       $16, 8(%eax) 
        movb       $118, 29(%eax) 
        movw       $34319, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3597
        jmp        Done__hla_3718

jnl_instr__hla_3735:

jge_instr__hla_3728:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3575
        movb       $16, 8(%eax) 
        movb       $125, 29(%eax) 
        movw       $36111, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3597
        jmp        Done__hla_3718

jng_instr__hla_3734:

jle_instr__hla_3729:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3575
        movb       $16, 8(%eax) 
        movb       $126, 29(%eax) 
        movw       $36367, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3597
        jmp        Done__hla_3718

jne_instr__hla_3733:

jnz_instr__hla_3739:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3575
        movb       $16, 8(%eax) 
        movb       $117, 29(%eax) 
        movw       $34063, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3597
        jmp        Done__hla_3718

jno_instr__hla_3736:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3575
        movb       $16, 8(%eax) 
        movb       $113, 29(%eax) 
        movw       $33039, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3597
        jmp        Done__hla_3718

jnp_instr__hla_3737:

jpo_instr__hla_3740:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3575
        movb       $16, 8(%eax) 
        movb       $123, 29(%eax) 
        movw       $35599, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3597
        jmp        Done__hla_3718

jns_instr__hla_3738:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3575
        movb       $16, 8(%eax) 
        movb       $121, 29(%eax) 
        movw       $35087, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3597
        jmp        Done__hla_3718
        jmp        endif__hla_3707
false__hla_3724:
        cmpb       $32, %dl 
        jne        false__hla_3741
        cmpl       $543514990, %eax 
        je         jnae_instr__hla_3720
        cmpl       $543515246, %eax 
        je         jnbe_instr__hla_3719
        cmpl       $543516526, %eax 
        je         jnge_instr__hla_3722
        cmpl       $543517806, %eax 
        je         jnle_instr__hla_3721
        cmpl       $544897123, %eax 
        je         jcxz_instr__hla_3742
        call       unknownStmt__hla_3420
        jmp        Done__hla_3718

jcxz_instr__hla_3742:
        addl       $4, %ebx 
        pushl      $31 
        call       initStmt__hla_3575
        movb       $15, 8(%eax) 
        movw       $58215, 29(%eax) 
        call       getDisp__hla_3597
        jmp        Done__hla_3718
        jmp        endif__hla_3707
false__hla_3741:
        cmpl       $2054710117, %eax 
        jne        false__hla_3743
        cmpb       $32, 5(%ebx) 
        jne        false__hla_3743
        addl       $5, %ebx 
        pushl      $30 
        call       initStmt__hla_3575
        movb       $14, 8(%eax) 
        movb       $227, 29(%eax) 
        call       getDisp__hla_3597
        jmp        Done__hla_3718
        jmp        endif__hla_3707
false__hla_3743:
        call       unknownStmt__hla_3420
endif__hla_3707:
        jmp        endif__hla_3705
false__hla_3706:
        cmpb       $108, %al 
        jne        false__hla_3745
        lea        7(%ebx), %ecx 
        cmpl       end_source__hla_3369, %ecx 
        jnb        false__hla_3745
        cmpb       $111, 1(%ebx) 
        jne        false__hla_3745
        cmpb       $111, 2(%ebx) 
        jne        false__hla_3745
        cmpb       $112, 3(%ebx) 
        jne        false__hla_3745
        mov        4(%ebx), %al 
        cmpb       $32, %al 
        je         L3751__hla_
        cmpb       $101, %al 
        jne        L3754__hla_
        cmpb       $32, 5(%ebx) 
        je         L3751__hla_
L3754__hla_:
        cmpb       $122, %al 
        jne        L3755__hla_
        cmpb       $32, 5(%ebx) 
        je         L3751__hla_
L3755__hla_:
        mov        5(%ebx), %ah 
        cmpb       $110, %al 
        jne        false__hla_3745
        cmpb       $101, %ah 
        jne        L3758__hla_
        cmpb       $32, 6(%ebx) 
        je         L3757__hla_
L3758__hla_:
        cmpb       $122, %ah 
        jne        false__hla_3745
        cmpb       $32, 6(%ebx) 
        jne        false__hla_3745
L3757__hla_:
L3751__hla_:
        cmpb       $32, %al 
        jne        false__hla_3760
        addl       $4, %ebx 
        pushl      $30 
        call       initStmt__hla_3575
        movb       $14, 8(%eax) 
        movb       $226, 29(%eax) 
        call       getDisp__hla_3597
        jmp        Done__hla_3718
        jmp        endif__hla_3760
false__hla_3760:
        cmpb       $101, %al 
        je         L3762__hla_
        cmpb       $122, %al 
        jne        false__hla_3761
L3762__hla_:
        addl       $5, %ebx 
        pushl      $30 
        call       initStmt__hla_3575
        movb       $14, 8(%eax) 
        movb       $225, 29(%eax) 
        call       getDisp__hla_3597
        jmp        Done__hla_3718
        jmp        endif__hla_3760
false__hla_3761:
        cmpb       $110, %al 
        jne        false__hla_3763
        cmpb       $101, %ah 
        je         L3765__hla_
        cmpb       $122, %ah 
        jne        false__hla_3763
L3765__hla_:
        addl       $6, %ebx 
        pushl      $30 
        call       initStmt__hla_3575
        movb       $14, 8(%eax) 
        movb       $224, 29(%eax) 
        call       getDisp__hla_3597
        jmp        Done__hla_3718
        jmp        endif__hla_3760
false__hla_3763:
        call       skipToEoln__hla_3373
endif__hla_3760:
        jmp        endif__hla_3705
false__hla_3745:
        cmpb       $99, %al 
        jne        false__hla_3766
        addl       $5, %ebx 
        cmpl       end_source__hla_3369, %ebx 
        jnb        false__hla_3766
        cmpb       $97, -4(%ebx) 
        jne        false__hla_3766
        cmpb       $108, -3(%ebx) 
        jne        false__hla_3766
        cmpb       $108, -2(%ebx) 
        jne        false__hla_3766
        cmpb       $32, -1(%ebx) 
        jne        false__hla_3766
        pushl      $30 
        call       initStmt__hla_3575
        movb       $17, 8(%eax) 
        movb       $232, 29(%eax) 
        call       getDisp__hla_3597
        jmp        endif__hla_3705
false__hla_3766:
        call       unknownStmt__hla_3420
endif__hla_3705:

Done__hla_3718:
endif__hla_3619:
        jmp        forever__hla_3614
exitloop__hla_3613:

        call       emitDummy__hla_3605
xlexer__hla_:
        pushl      %edi 
        pushl      %ecx 
        mov        16(%ebp), %edi 
        mov        -5136(%ebp), %ecx 
        mov        %ecx, (%edi) 
        mov        12(%ebp), %edi 
        mov        -5140(%ebp), %ecx 
        mov        %ecx, (%edi) 
        mov        8(%ebp), %edi 
        mov        -5144(%ebp), %ecx 
        mov        %ecx, (%edi) 
        popl       %ecx 
        popl       %edi 
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $20
End_lexer_3774:
  .size lexer,End_lexer_3774-lexer



        .type      addCOFFsym__hla_3777,@function

addCOFFsym__hla_3777:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        cld
        pushl      numCOFFsyms__hla_3314 
        imul       $18, numCOFFsyms__hla_3314, %ebx 
        movzbl     12(%ebp), %eax 
        addl       $1, %eax 
        imul       $18, %eax, %eax 
        addl       %ebx, %eax 
        cmpl       coffSymSize__hla_3315, %eax 
        jna        false__hla_3780
        shll       $1, coffSymSize__hla_3315 
        pushl      COFFsyms__hla_3313 
        pushl      coffSymSize__hla_3315 
        call       MEM_REALLOC1
        mov        %eax, COFFsyms__hla_3313 
false__hla_3780:
        addl       COFFsyms__hla_3313, %ebx 
        mov        32(%ebp), %esi 
        pushl      %esi 
        call       STR_LENGTH
        movl       %eax, %ecx 
        cmpl       $8, %eax 
        jnbe       false__hla_3781
        movl       $0, (%ebx) 
        movl       $0, 4(%ebx) 
        lea        (%ebx), %edi 
        cld
        rep movsb
        jmp        endif__hla_3781
false__hla_3781:
        mov        strTblOffset__hla_3323, %edx 
        lea        1(%edx,%ecx,1), %eax 
        mov        %eax, strTblOffset__hla_3323 
        cmpl       strTblSize__hla_3324, %eax 
        jna        false__hla_3782
        pushl      %eax 
        shll       $1, strTblSize__hla_3324 
        pushl      stringTable__hla_3322 
        pushl      strTblSize__hla_3324 
        call       MEM_REALLOC1
        mov        %eax, stringTable__hla_3322 
        popl       %eax 
false__hla_3782:
        movl       %edx, %edi 
        addl       stringTable__hla_3322, %edi 
        cld
        rep movsb
        movb       $0, (%edi) 
        movl       $0, (%ebx) 
        mov        %edx, 4(%ebx) 
endif__hla_3781:
        mov        28(%ebp), %eax 
        mov        %eax, 8(%ebx) 
        mov        24(%ebp), %ax 
        mov        %ax, 12(%ebx) 
        mov        20(%ebp), %ax 
        mov        %ax, 14(%ebx) 
        mov        16(%ebp), %al 
        mov        %al, 16(%ebx) 
        movzbl     12(%ebp), %eax 
        mov        %al, 17(%ebx) 
        testb      %al, %al 
        je         false__hla_3783
        mov        8(%ebp), %esi 
        imul       $18, numCOFFsyms__hla_3314, %edi 
        addl       $18, %edi 
        addl       COFFsyms__hla_3313, %edi 
        imul       $18, %eax, %ecx 
        cld
        rep movsb
false__hla_3783:
        movzbl     12(%ebp), %eax 
        addl       $1, %eax 
        addl       %eax, numCOFFsyms__hla_3314 
        popl       %eax 
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
xaddCOFFsym__hla_3777__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $28
End_addCOFFsym__hla_3777_3786:
  .size addCOFFsym__hla_3777,End_addCOFFsym__hla_3777_3786-addCOFFsym__hla_3777



        .type      addELFsym__hla_3789,@function

addELFsym__hla_3789:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        cld
        imul       $16, numELFsyms__hla_3317, %ebx 
        lea        16(%ebx), %eax 
        cmpl       elfSymSize__hla_3318, %eax 
        jna        false__hla_3792
        shll       $1, elfSymSize__hla_3318 
        pushl      ELFsyms__hla_3316 
        pushl      elfSymSize__hla_3318 
        call       MEM_REALLOC1
        mov        %eax, ELFsyms__hla_3316 
false__hla_3792:
        addl       ELFsyms__hla_3316, %ebx 
        xorl       %edx, %edx 
        mov        28(%ebp), %esi 
        cmpl       $0, %esi 
        je         false__hla_3793
        pushl      %esi 
        call       STR_LENGTH
        movl       %eax, %ecx 
        mov        strTblOffset__hla_3323, %edx 
        lea        1(%edx,%ecx,1), %eax 
        mov        %eax, strTblOffset__hla_3323 
        cmpl       strTblSize__hla_3324, %eax 
        jna        false__hla_3794
        shll       $1, strTblSize__hla_3324 
        pushl      stringTable__hla_3322 
        pushl      strTblSize__hla_3324 
        call       MEM_REALLOC1
        mov        %eax, stringTable__hla_3322 
false__hla_3794:
        movl       %edx, %edi 
        addl       stringTable__hla_3322, %edi 
        cld
        rep movsb
        movb       $0, (%edi) 
false__hla_3793:
        mov        %edx, (%ebx) 
        mov        24(%ebp), %eax 
        mov        %eax, 4(%ebx) 
        mov        20(%ebp), %eax 
        mov        %eax, 8(%ebx) 
        mov        16(%ebp), %al 
        mov        %al, 12(%ebx) 
        mov        8(%ebp), %al 
        andb       $3, %al 
        mov        %al, 13(%ebx) 
        mov        12(%ebp), %ax 
        mov        %ax, 14(%ebx) 
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
xaddELFsym__hla_3789__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $24
End_addELFsym__hla_3789_3797:
  .size addELFsym__hla_3789,End_addELFsym__hla_3789_3797-addELFsym__hla_3789



        .type      addMachoSym__hla_3800,@function

addMachoSym__hla_3800:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %eax 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        imul       $12, numMachoSyms__hla_3321, %ebx 
        lea        12(%ebx), %eax 
        cmpl       MachoSymSize__hla_3320, %eax 
        jna        false__hla_3803
        shll       $1, MachoSymSize__hla_3320 
        pushl      MachoSyms__hla_3319 
        pushl      MachoSymSize__hla_3320 
        call       MEM_REALLOC1
        mov        %eax, MachoSyms__hla_3319 
false__hla_3803:
        addl       MachoSyms__hla_3319, %ebx 
        mov        20(%ebp), %esi 
        cmpl       $0, %esi 
        jne        _0edc_skipAssertion___hla_3808
        pushl      _0edd_msg___hla_3806 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0edc_skipAssertion___hla_3808:
        pushl      %esi 
        call       STR_LENGTH
        movl       %eax, %ecx 
        mov        strTblOffset__hla_3323, %edx 
        lea        1(%edx,%ecx,1), %eax 
        mov        %eax, strTblOffset__hla_3323 
        cmpl       strTblSize__hla_3324, %eax 
        jna        false__hla_3809
        shll       $1, strTblSize__hla_3324 
        pushl      stringTable__hla_3322 
        pushl      strTblSize__hla_3324 
        call       MEM_REALLOC1
        mov        %eax, stringTable__hla_3322 
false__hla_3809:
        movl       %edx, %edi 
        addl       stringTable__hla_3322, %edi 
        cld
        rep movsb
        movb       $0, (%edi) 
        mov        %edx, (%ebx) 
        mov        16(%ebp), %eax 
        mov        %eax, 8(%ebx) 
        mov        12(%ebp), %al 
        mov        %al, 4(%ebx) 
        mov        8(%ebp), %al 
        mov        %al, 5(%ebx) 
        movw       $0, 6(%ebx) 
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
        popl       %eax 
xaddMachoSym__hla_3800__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $16
End_addMachoSym__hla_3800_3812:
  .size addMachoSym__hla_3800,End_addMachoSym__hla_3800_3812-addMachoSym__hla_3800



        .type      buildRaw__hla_3815,@function

buildRaw__hla_3815:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %edi 
        pushl      %esi 
        mov        24(%ebp), %esi 
        cmpb       $0, 8(%ebp) 
        jne        false__hla_3818
        mov        20(%ebp), %eax 
        cmpl       $65535, %eax 
        jnae       false__hla_3819
        mov        %eax, (%esi) 
        addl       $10, %esi 
false__hla_3819:
false__hla_3818:
        mov        32(%ebp), %ebx 
        mov        16(%ebp), %edi 
        jmp        continue__hla_3820
while__hla_3820:
        movzbl     8(%ebx), %eax 
        cmpl       $21, %eax 
        jg         default__hla_3822
        jmp *      jmpTbl__hla_3822(,%eax,4) 
case__hla_3823:
        jmp        endswitch__hla_3822
case__hla_3824:
        mov        9(%ebx), %ecx 
        movl       %ecx, %edx 
        mov        13(%ebx), %eax 
        subl       $1, %eax 
        addl       %eax, %ecx 
        notl       %eax 
        andl       %eax, %ecx 
        subl       %edx, %ecx 
        jz         false__hla_3825
        cmpb       $1, 12(%ebp) 
        jne        false__hla_3826
        jmp        continue__hla_3827
while__hla_3827:
        mov        $2401421, %eax 
        stosl
        mov        $0, %ax 
        stosw
        stosb
        subl       $7, %ecx 
continue__hla_3827:
        cmpl       $7, %ecx 
        jae        while__hla_3827
exitloop__hla_3827:

        cmpl       $6, %ecx 
        jne        false__hla_3829
        mov        $39821, %eax 
        stosl
        mov        $0, %ax 
        stosw
false__hla_3829:
        cmpl       $5, %ecx 
        jne        false__hla_3830
        mov        $2385037, %eax 
        stosl
        mov        $144, %al 
        stosb
false__hla_3830:
        cmpl       $4, %ecx 
        jne        false__hla_3831
        mov        $2385037, %eax 
        stosl
false__hla_3831:
        cmpl       $3, %ecx 
        jne        false__hla_3832
        mov        $18829, %ax 
        stosw
        mov        $0, %al 
        stosb
false__hla_3832:
        cmpl       $2, %ecx 
        jne        false__hla_3833
        mov        $65419, %ax 
        stosw
false__hla_3833:
        cmpl       $1, %ecx 
        jne        false__hla_3834
        mov        $144, %al 
        stosb
false__hla_3834:
        jmp        endif__hla_3826
false__hla_3826:
        xorl       %eax, %eax 
        cld
        rep stosb
endif__hla_3826:
false__hla_3825:
        jmp        endswitch__hla_3822
case__hla_3835:
        cmpb       $3, 12(%ebp) 
        je         false__hla_3836
        pushl      $str__hla_3837 
        call       STDERR_PUTS
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3836:
        jmp        endswitch__hla_3822
case__hla_3838:
        pushl      %esi 
        mov        13(%ebx), %ecx 
        testl      %ecx, %ecx 
        je         false__hla_3839
        lea        17(%ebx), %esi 
        cld
        rep movsb
false__hla_3839:
        popl       %esi 
        jmp        endswitch__hla_3822
case__hla_3840:
        cmpb       $1, 12(%ebp) 
        je         false__hla_3841
        pushl      $str__hla_3842 
        call       STDERR_PUTS
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3841:
        jmp        endswitch__hla_3822
case__hla_3843:
        cmpb       $2, 12(%ebp) 
        je         false__hla_3844
        pushl      $str__hla_3845 
        call       STDERR_PUTS
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3844:
        jmp        endswitch__hla_3822
case__hla_3846:
        mov        17(%ebx), %ecx 
        mov        21(%ebx), %eax 
        cmpl       $2, 13(%ebx) 
        jb         byteDup__hla_3847
        ja         dwordDup__hla_3848
        cld
        rep stosw
        jmp        done__hla_3849

byteDup__hla_3847:
        cld
        rep stosb
        jmp        done__hla_3849

dwordDup__hla_3848:
        cld
        rep stosl

done__hla_3849:
        jmp        endswitch__hla_3822
case__hla_3850:
        mov        29(%ebx), %al 
        stosb
        mov        13(%ebx), %eax 
        stosb
        jmp        endswitch__hla_3822
case__hla_3851:
        mov        29(%ebx), %ax 
        stosw
        mov        13(%ebx), %eax 
        stosb
        jmp        endswitch__hla_3822
case__hla_3852:
        cmpb       $1, 32(%ebx) 
        jne        false__hla_3853
        mov        29(%ebx), %al 
        stosb
        mov        13(%ebx), %eax 
        addl       21(%ebx), %eax 
        stosb
        jmp        endif__hla_3853
false__hla_3853:
        mov        30(%ebx), %ax 
        stosw
        mov        13(%ebx), %eax 
        addl       21(%ebx), %eax 
        stosl
        cmpl       $0, 17(%ebx) 
        je         false__hla_3854
        mov        17(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        20(%eax), %dl 
        testb      $1, 21(%eax) 
        jnz        L3856__hla_
        cmpb       12(%ebp), %dl 
        je         false__hla_3855
L3856__hla_:
        mov        8(%ebp), %dl 
        testb      %dl, %dl 
        jne        false__hla_3857
        mov        8(%eax), %eax 
        mov        %eax, 4(%esi) 
        mov        9(%ebx), %eax 
        addl       $2, %eax 
        mov        %eax, (%esi) 
        movw       $20, 8(%esi) 
        addl       $10, %esi 
        mov        21(%ebx), %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3857
false__hla_3857:
        cmpb       $1, %dl 
        jnae       false__hla_3858
        cmpb       $2, %dl 
        jnbe       false__hla_3858
        mov        9(%ebx), %edx 
        addl       $2, %edx 
        mov        %edx, (%esi) 
        mov        8(%eax), %eax 
        shll       $8, %eax 
        orl        $2, %eax 
        mov        %eax, 4(%esi) 
        addl       $8, %esi 
        mov        21(%ebx), %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3857
false__hla_3858:
        cmpb       $3, %dl 
        jne        false__hla_3860
        mov        9(%ebx), %edx 
        addl       $2, %edx 
        mov        %edx, (%esi) 
        mov        8(%eax), %eax 
        orl        $218103808, %eax 
        mov        %eax, 4(%esi) 
        addl       $8, %esi 
        mov        9(%ebx), %eax 
        addl       $6, %eax 
        negl       %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3857
false__hla_3860:
        pushl      $str__hla_3861 
        call       STDERR_PUTS
endif__hla_3857:
false__hla_3855:
false__hla_3854:
endif__hla_3853:
        jmp        endswitch__hla_3822
case__hla_3862:
        cmpb       $1, 31(%ebx) 
        jne        false__hla_3863
        mov        29(%ebx), %al 
        stosb
        mov        13(%ebx), %eax 
        addl       21(%ebx), %eax 
        stosb
        jmp        endif__hla_3863
false__hla_3863:
        mov        30(%ebx), %al 
        stosb
        mov        13(%ebx), %eax 
        addl       21(%ebx), %eax 
        stosl
        cmpl       $0, 17(%ebx) 
        je         false__hla_3864
        mov        17(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        20(%eax), %dl 
        mov        21(%eax), %dh 
        andb       $3, %dh 
        testb      $1, %dh 
        jnz        L3866__hla_
        cmpb       12(%ebp), %dl 
        jne        L3866__hla_
        testb      %dh, %dh 
        je         false__hla_3865
        cmpb       $1, 8(%ebp) 
        jnae       false__hla_3865
        cmpb       $2, 8(%ebp) 
        jnbe       false__hla_3865
L3866__hla_:
        mov        8(%ebp), %dl 
        testb      %dl, %dl 
        jne        false__hla_3870
        mov        8(%eax), %eax 
        mov        %eax, 4(%esi) 
        mov        9(%ebx), %eax 
        addl       $1, %eax 
        mov        %eax, (%esi) 
        movw       $20, 8(%esi) 
        addl       $10, %esi 
        mov        21(%ebx), %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3870
false__hla_3870:
        cmpb       $1, %dl 
        jnae       false__hla_3871
        cmpb       $2, %dl 
        jnbe       false__hla_3871
        mov        9(%ebx), %edx 
        addl       $1, %edx 
        mov        %edx, (%esi) 
        mov        8(%eax), %edx 
        shll       $8, %edx 
        orl        $2, %edx 
        mov        %edx, 4(%esi) 
        addl       $8, %esi 
        testb      $1, 21(%eax) 
        jz         false__hla_3873
        movl       $-4, -4(%edi) 
false__hla_3873:
        jmp        endif__hla_3870
false__hla_3871:
        cmpb       $3, %dl 
        jne        false__hla_3874
        mov        9(%ebx), %edx 
        addl       $1, %edx 
        mov        %edx, (%esi) 
        mov        8(%eax), %eax 
        orl        $218103808, %eax 
        mov        %eax, 4(%esi) 
        addl       $8, %esi 
        mov        9(%ebx), %eax 
        addl       $5, %eax 
        negl       %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3870
false__hla_3874:
        pushl      $str__hla_3861 
        call       STDERR_PUTS
endif__hla_3870:
false__hla_3865:
false__hla_3864:
endif__hla_3863:
        jmp        endswitch__hla_3822
case__hla_3875:
        mov        29(%ebx), %al 
        stosb
        mov        13(%ebx), %eax 
        addl       21(%ebx), %eax 
        stosl
        cmpl       $0, 17(%ebx) 
        je         false__hla_3876
        mov        17(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        20(%eax), %dl 
        mov        21(%eax), %dh 
        andb       $3, %dh 
        testb      $1, %dh 
        jnz        L3878__hla_
        cmpb       12(%ebp), %dl 
        jne        L3878__hla_
        testb      %dh, %dh 
        je         false__hla_3877
        cmpb       $1, 8(%ebp) 
        jnae       false__hla_3877
        cmpb       $2, 8(%ebp) 
        jnbe       false__hla_3877
L3878__hla_:
        mov        8(%ebp), %dl 
        testb      %dl, %dl 
        jne        false__hla_3882
        mov        8(%eax), %eax 
        mov        %eax, 4(%esi) 
        mov        9(%ebx), %eax 
        addl       $1, %eax 
        mov        %eax, (%esi) 
        movw       $20, 8(%esi) 
        addl       $10, %esi 
        mov        21(%ebx), %eax 
        addl       13(%ebx), %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3882
false__hla_3882:
        cmpb       $1, %dl 
        jnae       false__hla_3883
        cmpb       $2, %dl 
        jnbe       false__hla_3883
        mov        9(%ebx), %edx 
        addl       $1, %edx 
        mov        %edx, (%esi) 
        mov        21(%eax), %dl 
        mov        8(%eax), %eax 
        shll       $8, %eax 
        orl        $2, %eax 
        mov        %eax, 4(%esi) 
        addl       $8, %esi 
        movl       $-4, -4(%edi) 
        jmp        endif__hla_3882
false__hla_3883:
        cmpb       $3, %dl 
        jne        false__hla_3885
        mov        9(%ebx), %edx 
        addl       $1, %edx 
        mov        %edx, (%esi) 
        mov        8(%eax), %eax 
        orl        $218103808, %eax 
        mov        %eax, 4(%esi) 
        addl       $8, %esi 
        mov        9(%ebx), %eax 
        addl       $5, %eax 
        negl       %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3882
false__hla_3885:
        pushl      $str__hla_3861 
        call       STDERR_PUTS
endif__hla_3882:
false__hla_3877:
false__hla_3876:
        jmp        endswitch__hla_3822
case__hla_3886:
        cmpl       $0, 13(%ebx) 
        je         false__hla_3887
        mov        8(%ebp), %dl 
        testb      %dl, %dl 
        jne        false__hla_3888
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        8(%eax), %eax 
        mov        %eax, 4(%esi) 
        mov        9(%ebx), %eax 
        mov        %eax, (%esi) 
        movw       $6, 8(%esi) 
        addl       $10, %esi 
        mov        17(%ebx), %eax 
        stosl
        jmp        endif__hla_3888
false__hla_3888:
        cmpb       $1, %dl 
        jnae       false__hla_3889
        cmpb       $2, %dl 
        jnbe       false__hla_3889
        mov        9(%ebx), %edx 
        mov        %edx, (%esi) 
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        8(%eax), %edx 
        shll       $8, %edx 
        orl        $1, %edx 
        mov        %edx, 4(%esi) 
        addl       $8, %esi 
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        17(%ebx), %eax 
        stosl
        jmp        endif__hla_3888
false__hla_3889:
        cmpb       $3, %dl 
        jne        false__hla_3891
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        9(%ebx), %edx 
        subl       28(%ebp), %edx 
        testb      $1, 21(%eax) 
        jnz        L3893__hla_
        cmpl       $0, 17(%ebx) 
        jne        false__hla_3892
L3893__hla_:
        mov        %edx, (%esi) 
        testb      $1, 21(%eax) 
        jz         false__hla_3894
        mov        8(%eax), %eax 
        orl        $201326592, %eax 
        mov        %eax, 4(%esi) 
        addl       $8, %esi 
        mov        17(%ebx), %eax 
        stosl
        jmp        endif__hla_3894
false__hla_3894:
        movzbl     20(%eax), %eax 
        cmpb       $1, %al 
        jne        false__hla_3895
        mov        $1, %al 
        jmp        endif__hla_3895
false__hla_3895:
        cmpb       $2, %al 
        jne        false__hla_3896
        mov        $2, %al 
        jmp        endif__hla_3895
false__hla_3896:
        cmpb       $3, %al 
        jne        false__hla_3897
        mov        $3, %al 
        jmp        endif__hla_3895
false__hla_3897:
        pushl      $str__hla_3898 
        call       STDOUT_PUTS
        pushl      %eax 
        call       STDOUT_PUTU8
        call       STDOUT_NEWLN
        mov        $8, %eax 
        jmp        Raise__hla_
endif__hla_3895:
        orl        $67108864, %eax 
        mov        %eax, 4(%esi) 
        addl       $8, %esi 
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        12(%eax), %eax 
        stosl
endif__hla_3894:
        jmp        endif__hla_3892
false__hla_3892:
        mov        %edx, (%esi) 
        orl        $-1610612736, (%esi) 
        mov        12(%eax), %eax 
        mov        %eax, 4(%esi) 
        addl       17(%ebx), %eax 
        stosl
        addl       $8, %esi 
endif__hla_3892:
        jmp        endif__hla_3888
false__hla_3891:
        pushl      $str__hla_3861 
        call       STDERR_PUTS
endif__hla_3888:
false__hla_3887:
        jmp        endswitch__hla_3822
case__hla_3899:
        mov        13(%ebx), %ecx 
        testl      %ecx, %ecx 
        je         false__hla_3900
        xorl       %eax, %eax 
        cld
        rep stosb
false__hla_3900:
        jmp        endswitch__hla_3822
default__hla_3822:
        pushl      $str__hla_3901 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTU8
        call       STDERR_NEWLN
endswitch__hla_3822:
        mov        4(%ebx), %ebx 
continue__hla_3820:
        cmpl       $0, %ebx 
        jne        while__hla_3820
exitloop__hla_3820:

        popl       %esi 
        popl       %edi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
xbuildRaw__hla_3815__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $28
End_buildRaw__hla_3815_3904:
  .size buildRaw__hla_3815,End_buildRaw__hla_3815_3904-buildRaw__hla_3815



        .type      sectionPass__hla_3912,@function

sectionPass__hla_3912:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        mov        8(%ebp), %ecx 
        mov        16(%ebp), %ebx 
        jmp        continue__hla_3915
while__hla_3915:
        mov        %ecx, 9(%ebx) 
        movzbl     8(%ebx), %eax 
        cmpl       $21, %eax 
        jg         default__hla_3917
        jmp *      jmpTbl__hla_3917(,%eax,4) 
case__hla_3918:
        jmp        endswitch__hla_3917
case__hla_3919:
        movb       $1, currentSection 
        jmp        endswitch__hla_3917
case__hla_3920:
        movb       $2, currentSection 
        jmp        endswitch__hla_3917
case__hla_3921:
        movb       $3, currentSection 
        jmp        endswitch__hla_3917
case__hla_3922:
        mov        13(%ebx), %eax 
        subl       $1, %eax 
        addl       %eax, %ecx 
        notl       %eax 
        andl       %eax, %ecx 
        jmp        endswitch__hla_3917
case__hla_3923:
        addl       13(%ebx), %ecx 
        jmp        endswitch__hla_3917
case__hla_3924:
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        %ecx, 12(%eax) 
        mov        currentSection, %dl 
        mov        %dl, 20(%eax) 
        jmp        endswitch__hla_3917
case__hla_3925:
        addl       13(%ebx), %ecx 
        jmp        endswitch__hla_3917
case__hla_3926:
        mov        13(%ebx), %eax 
        imull      17(%ebx), %eax 
        addl       %eax, %ecx 
        jmp        endswitch__hla_3917
case__hla_3927:
        addl       $2, %ecx 
        mov        17(%ebx), %eax 
        cmpl       $0, %eax 
        je         false__hla_3928
        mov        4(%eax), %edx 
        cmpl       $0, %edx 
        je         false__hla_3929
        mov        21(%edx), %dl 
        testb      $1, %dl 
        jz         false__hla_3930
        pushl      $str__hla_3931 
        call       STDERR_PUTS
        pushl      8(%eax) 
        call       STDERR_PUTS
        pushl      $str__hla_3932 
        call       STDERR_PUTS
        call       printLineNumberChain
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_3930:
false__hla_3929:
false__hla_3928:
        jmp        endswitch__hla_3917
case__hla_3933:
        addl       $1, %ecx 
        mov        12(%ebp), %eax 
        addl       %eax, %ecx 
        mov        %al, 32(%ebx) 
        cmpb       $1, %al 
        jna        false__hla_3934
        addl       $1, %ecx 
false__hla_3934:
        jmp        endswitch__hla_3917
case__hla_3935:
        mov        12(%ebp), %eax 
        lea        1(%ecx,%eax,1), %ecx 
        mov        %al, 31(%ebx) 
        jmp        endswitch__hla_3917
case__hla_3936:
        addl       $3, %ecx 
        jmp        endswitch__hla_3917
case__hla_3937:
        addl       $5, %ecx 
        jmp        endswitch__hla_3917
case__hla_3938:
        addl       $4, %ecx 
        jmp        endswitch__hla_3917
default__hla_3917:
        pushl      $str__hla_3901 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTU8
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
endswitch__hla_3917:
        mov        4(%ebx), %ebx 
continue__hla_3915:
        cmpl       $0, %ebx 
        jne        while__hla_3915
exitloop__hla_3915:

        movl       %ecx, %eax 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
xsectionPass__hla_3912__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $12
End_sectionPass__hla_3912_3941:
  .size sectionPass__hla_3912,End_sectionPass__hla_3912_3941-sectionPass__hla_3912



        .type      firstPass__hla_3909,@function

firstPass__hla_3909:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $8, %esp 
        movb       $1, currentSection 
        movl       $0, codeStart__hla_3325 
        pushl      24(%ebp) 
        pushl      12(%ebp) 
        pushl      codeStart__hla_3325 
        call       sectionPass__hla_3912
        mov        %eax, codeEnd__hla_3326 
        cmpb       $3, 8(%ebp) 
        jne        false__hla_3944
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, dataStart__hla_3327 
        jmp        endif__hla_3944
false__hla_3944:
        movl       $0, dataStart__hla_3327 
endif__hla_3944:
        movb       $2, currentSection 
        pushl      20(%ebp) 
        pushl      12(%ebp) 
        pushl      dataStart__hla_3327 
        call       sectionPass__hla_3912
        mov        %eax, dataEnd__hla_3328 
        cmpb       $3, 8(%ebp) 
        jne        false__hla_3945
        addl       $15, %eax 
        andl       $-16, %eax 
        jmp        endif__hla_3945
false__hla_3945:
        xorl       %eax, %eax 
endif__hla_3945:
        mov        %eax, bssStart__hla_3329 
        movb       $3, currentSection 
        pushl      16(%ebp) 
        pushl      12(%ebp) 
        pushl      %eax 
        call       sectionPass__hla_3912
        mov        %eax, bssEnd__hla_3330 
xfirstPass__hla_3909__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $20
End_firstPass__hla_3909_3948:
  .size firstPass__hla_3909,End_firstPass__hla_3909_3948-firstPass__hla_3909



        .type      computeDisplacement__hla_3954,@function

computeDisplacement__hla_3954:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        mov        12(%ebp), %ecx 
        mov        8(%ebp), %ebx 
        mov        17(%ebx), %eax 
        mov        4(%eax), %edx 
        testb      $9, 21(%edx) 
        jnz        false__hla_3957
        pushl      $str__hla_3958 
        call       STDERR_PUTS
        pushl      8(%eax) 
        call       STDERR_PUTS
        call       STDERR_NEWLN
        call       printLineNumberChain
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_3957:
        mov        20(%edx), %al 
        mov        21(%edx), %ah 
        andb       $3, %ah 
        testb      %al, %al 
        jne        false__hla_3959
        mov        $1, %eax 
        jmp        endif__hla_3959
false__hla_3959:
        cmpb       $1, %ah 
        jne        false__hla_3960
        mov        $4, %eax 
        jmp        endif__hla_3959
false__hla_3960:
        cmpb       currentSection, %al 
        je         false__hla_3961
        mov        $4, %eax 
        jmp        endif__hla_3959
false__hla_3961:
        mov        12(%edx), %eax 
        subl       %ecx, %eax 
        mov        %eax, 13(%ebx) 
        cmpl       $-128, %eax 
        jnge       false__hla_3962
        cmpl       $127, %eax 
        jnle       false__hla_3962
        mov        $1, %eax 
        jmp        endif__hla_3962
false__hla_3962:
        mov        $4, %eax 
endif__hla_3962:
endif__hla_3959:
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
xcomputeDisplacement__hla_3954__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $8
End_computeDisplacement__hla_3954_3966:
  .size computeDisplacement__hla_3954,End_computeDisplacement__hla_3954_3966-computeDisplacement__hla_3954



        .type      doPhase__hla_3969,@function

doPhase__hla_3969:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $4, %esp 
        mov        8(%ebp), %ecx 
        mov        20(%ebp), %ebx 
        jmp        continue__hla_3972
while__hla_3972:
        mov        9(%ebx), %eax 
        mov        %eax, -4(%ebp) 
        mov        %ecx, 9(%ebx) 
        movzbl     8(%ebx), %eax 
        cmpl       $21, %eax 
        jg         default__hla_3974
        jmp *      jmpTbl__hla_3974(,%eax,4) 
case__hla_3975:
        jmp        endswitch__hla_3974
case__hla_3976:
        movb       $1, currentSection 
        jmp        endswitch__hla_3974
case__hla_3977:
        movb       $2, currentSection 
        jmp        endswitch__hla_3974
case__hla_3978:
        movb       $3, currentSection 
        jmp        endswitch__hla_3974
case__hla_3979:
        mov        -4(%ebp), %eax 
        cmpl       9(%ebx), %eax 
        je         false__hla_3980
        mov        16(%ebp), %eax 
        movb       $1, (%eax) 
false__hla_3980:
        jmp        endswitch__hla_3974
case__hla_3981:
        mov        13(%ebx), %eax 
        subl       $1, %eax 
        addl       %eax, %ecx 
        notl       %eax 
        andl       %eax, %ecx 
        mov        4(%ebx), %eax 
        cmpl       9(%eax), %ecx 
        je         false__hla_3982
        mov        16(%ebp), %edx 
        movb       $1, (%edx) 
false__hla_3982:
        jmp        endswitch__hla_3974
case__hla_3983:
        addl       13(%ebx), %ecx 
        jmp        endswitch__hla_3974
case__hla_3984:
        addl       13(%ebx), %ecx 
        jmp        endswitch__hla_3974
case__hla_3985:
        mov        13(%ebx), %eax 
        imull      17(%ebx), %eax 
        addl       %eax, %ecx 
        jmp        endswitch__hla_3974
case__hla_3986:
        addl       $2, %ecx 
        mov        -4(%ebp), %eax 
        addl       $2, %eax 
        pushl      %eax 
        pushl      %ebx 
        call       computeDisplacement__hla_3954
        jmp        endswitch__hla_3974
case__hla_3987:
        mov        $2, %eax 
        mov        $1, %edx 
        cmpb       $4, 32(%ebx) 
        jne        false__hla_3988
        addl       $3, %edx 
        addl       $4, %eax 
false__hla_3988:
        addl       %eax, %ecx 
        addl       -4(%ebp), %eax 
        pushl      %eax 
        pushl      %ebx 
        call       computeDisplacement__hla_3954
        cmpb       %dl, %al 
        je         false__hla_3989
        cmpb       12(%ebp), %al 
        jne        false__hla_3989
        mov        %al, 32(%ebx) 
        mov        16(%ebp), %edx 
        movb       $1, (%edx) 
false__hla_3989:
        jmp        endswitch__hla_3974
case__hla_3991:
        addl       $1, %ecx 
        movzbl     31(%ebx), %edx 
        addl       %edx, %ecx 
        mov        -4(%ebp), %eax 
        addl       $1, %eax 
        addl       %edx, %eax 
        pushl      %eax 
        pushl      %ebx 
        call       computeDisplacement__hla_3954
        cmpb       %dl, %al 
        je         false__hla_3992
        cmpb       12(%ebp), %al 
        jne        false__hla_3992
        mov        12(%ebp), %al 
        mov        %al, 31(%ebx) 
        mov        16(%ebp), %edx 
        movb       $1, (%edx) 
false__hla_3992:
        jmp        endswitch__hla_3974
case__hla_3994:
        addl       $3, %ecx 
        mov        -4(%ebp), %eax 
        addl       $3, %eax 
        pushl      %eax 
        pushl      %ebx 
        call       computeDisplacement__hla_3954
        jmp        endswitch__hla_3974
case__hla_3995:
        addl       $5, %ecx 
        mov        -4(%ebp), %eax 
        addl       $5, %eax 
        pushl      %eax 
        pushl      %ebx 
        call       computeDisplacement__hla_3954
        jmp        endswitch__hla_3974
case__hla_3996:
        addl       $4, %ecx 
        jmp        endswitch__hla_3974
default__hla_3974:
        pushl      $str__hla_3901 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTU8
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
endswitch__hla_3974:
        mov        4(%ebx), %ebx 
continue__hla_3972:
        cmpl       $0, %ebx 
        jne        while__hla_3972
exitloop__hla_3972:

        mov        20(%ebp), %ebx 
        jmp        continue__hla_3997
while__hla_3997:
        cmpb       $3, 8(%ebx) 
        jne        false__hla_3999
        mov        9(%ebx), %edx 
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        cmpl       12(%eax), %edx 
        je         false__hla_4000
        mov        %edx, 12(%eax) 
        mov        16(%ebp), %edx 
        movb       $1, (%edx) 
false__hla_4000:
false__hla_3999:
        mov        4(%ebx), %ebx 
continue__hla_3997:
        cmpl       $0, %ebx 
        jne        while__hla_3997
exitloop__hla_3997:

xdoPhase__hla_3969__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $16
End_doPhase__hla_3969_4003:
  .size doPhase__hla_3969,End_doPhase__hla_3969_4003-doPhase__hla_3969



        .type      dispPhase__hla_3951,@function

dispPhase__hla_3951:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $20, %esp 
        mov        %ebx, -4(%ebp) 
        mov        %ecx, -8(%ebp) 
        mov        %edx, -12(%ebp) 
        movl       $0, -16(%ebp) 
false__hla_4006:
repeat__hla_4006:
        movb       $0, -17(%ebp) 
        movl       $0, codeStart__hla_3325 
        pushl      24(%ebp) 
        pushl      %ebp 
        addl       $-17, (%esp) 
        pushl      12(%ebp) 
        pushl      codeStart__hla_3325 
        call       doPhase__hla_3969
        mov        %ecx, codeEnd__hla_3326 
        cmpb       $3, 8(%ebp) 
        jne        false__hla_4007
        addl       $15, %ecx 
        andl       $-16, %ecx 
        jmp        endif__hla_4007
false__hla_4007:
        xorl       %ecx, %ecx 
endif__hla_4007:
        mov        %ecx, dataStart__hla_3327 
        pushl      20(%ebp) 
        pushl      %ebp 
        addl       $-17, (%esp) 
        pushl      12(%ebp) 
        pushl      %ecx 
        call       doPhase__hla_3969
        mov        %ecx, dataEnd__hla_3328 
        cmpb       $3, 8(%ebp) 
        jne        false__hla_4008
        addl       $15, %ecx 
        andl       $-16, %ecx 
        mov        %ecx, bssStart__hla_3329 
        pushl      16(%ebp) 
        pushl      %ebp 
        addl       $-17, (%esp) 
        pushl      12(%ebp) 
        pushl      %ecx 
        call       doPhase__hla_3969
        mov        %ecx, bssEnd__hla_3330 
false__hla_4008:
        addl       $1, -16(%ebp) 
        cmpl       $16384, -16(%ebp) 
        ja         exitloop__hla_4006
continue__hla_4006:
        cmpb       $0, -17(%ebp) 
        jne        repeat__hla_4006
exitloop__hla_4006:

        mov        -16(%ebp), %eax 
        mov        -4(%ebp), %ebx 
        mov        -8(%ebp), %ecx 
        mov        -12(%ebp), %edx 
xdispPhase__hla_3951__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $20
End_dispPhase__hla_3951_4012:
  .size dispPhase__hla_3951,End_dispPhase__hla_3951_4012-dispPhase__hla_3951



        .type      cleanupPass__hla_4018,@function

cleanupPass__hla_4018:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %esi 
        mov        16(%ebp), %ebx 
        xorl       %esi, %esi 
        jmp        continue__hla_4021
while__hla_4021:
        mov        9(%ebx), %ecx 
        movzbl     8(%ebx), %eax 
        cmpl       $21, %eax 
        jg         default__hla_4023
        jmp *      jmpTbl__hla_4023(,%eax,4) 
case__hla_4024:
        jmp        endswitch__hla_4023
case__hla_4025:
        mov        13(%ebx), %edx 
        mov        4(%edx), %eax 
        movb       $1, 22(%eax) 
        movl       %ecx, %edx 
        subl       12(%eax), %edx 
        mov        %edx, 16(%eax) 
        jmp        endswitch__hla_4023
case__hla_4026:
        mov        13(%ebx), %edx 
        mov        4(%edx), %eax 
        mov        %ecx, 12(%eax) 
        testb      $9, 21(%eax) 
        jnz        false__hla_4027
        pushl      $str__hla_4028 
        call       STDERR_PUTS
        pushl      8(%edx) 
        call       STDERR_PUTS
        pushl      $str__hla_4029 
        call       STDERR_PUTS
        call       printLineNumberChain
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_4027:
        jmp        endswitch__hla_4023
case__hla_4030:
        mov        13(%ebx), %eax 
        cmpl       $-128, %eax 
        jl         L4032__hla_
        cmpl       $127, %eax 
        jng        false__hla_4031
L4032__hla_:
        pushl      $str__hla_4033 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTI32
        pushl      $str__hla_4034 
        call       STDERR_PUTS
        call       printLineNumberChain
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_4031:
        jmp        endswitch__hla_4023
case__hla_4035:
        mov        13(%ebx), %eax 
        cmpl       $-128, %eax 
        jl         L4037__hla_
        cmpl       $127, %eax 
        jng        false__hla_4036
L4037__hla_:
        pushl      $str__hla_4033 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTI32
        pushl      $str__hla_4034 
        call       STDERR_PUTS
        call       printLineNumberChain
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_4036:
        jmp        endswitch__hla_4023
case__hla_4038:
        cmpb       $4, 32(%ebx) 
        jne        false__hla_4039
        cmpl       $0, 17(%ebx) 
        je         false__hla_4040
        mov        17(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        20(%eax), %dl 
        mov        21(%eax), %dh 
        andb       $3, %dh 
        cmpb       $1, %dh 
        je         L4042__hla_
        cmpb       12(%ebp), %dl 
        je         false__hla_4041
L4042__hla_:
        addl       $1, %esi 
false__hla_4041:
false__hla_4040:
false__hla_4039:
        jmp        endswitch__hla_4023
case__hla_4043:
        cmpb       $4, 31(%ebx) 
        jne        false__hla_4044
        cmpl       $0, 17(%ebx) 
        je         false__hla_4045
        mov        17(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        20(%eax), %dl 
        mov        21(%eax), %dh 
        andb       $3, %dh 
        cmpb       $1, %dh 
        je         L4047__hla_
        cmpb       12(%ebp), %dl 
        jne        L4047__hla_
        testb      %dh, %dh 
        je         false__hla_4046
        cmpb       $1, 8(%ebp) 
        jnae       false__hla_4046
        cmpb       $2, 8(%ebp) 
        jnbe       false__hla_4046
L4047__hla_:
        addl       $1, %esi 
false__hla_4046:
false__hla_4045:
false__hla_4044:
        jmp        endswitch__hla_4023
case__hla_4051:
        cmpl       $0, 17(%ebx) 
        je         false__hla_4052
        mov        17(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        20(%eax), %dl 
        mov        21(%eax), %dh 
        andb       $3, %dh 
        testb      $1, %dh 
        jnz        L4054__hla_
        cmpb       12(%ebp), %dl 
        jne        L4054__hla_
        testb      %dh, %dh 
        je         false__hla_4053
        cmpb       $1, 8(%ebp) 
        jnae       false__hla_4053
        cmpb       $2, 8(%ebp) 
        jnbe       false__hla_4053
L4054__hla_:
        addl       $1, %esi 
false__hla_4053:
false__hla_4052:
        jmp        endswitch__hla_4023
case__hla_4058:
        addl       $1, %esi 
        jmp        endswitch__hla_4023
default__hla_4023:
        pushl      $str__hla_3901 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTU8
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
endswitch__hla_4023:
        mov        4(%ebx), %ebx 
continue__hla_4021:
        cmpl       $0, %ebx 
        jne        while__hla_4021
exitloop__hla_4021:

        movl       %ecx, %eax 
        movl       %esi, %edx 
        popl       %esi 
        popl       %ecx 
        popl       %ebx 
xcleanupPass__hla_4018__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $12
End_cleanupPass__hla_4018_4061:
  .size cleanupPass__hla_4018,End_cleanupPass__hla_4018_4061-cleanupPass__hla_4018



        .type      finalPass__hla_4015,@function

finalPass__hla_4015:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $8, %esp 
        pushl      %eax 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      20(%ebp) 
        pushl      $1 
        pushl      8(%ebp) 
        call       cleanupPass__hla_4018
        mov        %eax, codeEnd__hla_3326 
        mov        %edx, numCodeRelocs 
        pushl      16(%ebp) 
        pushl      $2 
        pushl      8(%ebp) 
        call       cleanupPass__hla_4018
        mov        %eax, dataEnd__hla_3328 
        mov        %edx, numDataRelocs 
        pushl      12(%ebp) 
        pushl      $3 
        pushl      8(%ebp) 
        call       cleanupPass__hla_4018
        mov        %eax, bssEnd__hla_3330 
        testl      %edx, %edx 
        je         false__hla_4064
        pushl      $str__hla_4065 
        call       STDERR_PUTS
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_4064:
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4066 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        mov        4(%eax), %ebx 
        cmpl       $0, %ebx 
        jne        _0fe3_skipAssertion___hla_4071
        pushl      _0fe4_msg___hla_4069 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0fe3_skipAssertion___hla_4071:
        mov        21(%ebx), %cl 
        andb       $13, %cl 
        cmpb       $4, %cl 
        jne        false__hla_4072
        pushl      $str__hla_4073 
        call       STDERR_PUTS
        pushl      8(%eax) 
        call       STDERR_PUTS
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_4072:
continue__hla_4066:
        popl       %ebp 
        ret        $4
exitfor__hla_4066:

        popl       %edx 
        popl       %ecx 
        popl       %ebx 
        popl       %eax 
xfinalPass__hla_4015__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $16
End_finalPass__hla_4015_4076:
  .size finalPass__hla_4015,End_finalPass__hla_4015_4076-finalPass__hla_4015



        .type      optimizeDisps,@function

optimizeDisps:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $12, %esp 
        cmpb       $0, verboseDebug__hla_3331 
        je         false__hla_4079
        pushl      $str__hla_4080 
        call       STDOUT_PUTS
false__hla_4079:
        pushl      24(%ebp) 
        pushl      20(%ebp) 
        pushl      16(%ebp) 
        pushl      $1 
        pushl      8(%ebp) 
        call       firstPass__hla_3909
        pushl      24(%ebp) 
        pushl      20(%ebp) 
        pushl      16(%ebp) 
        pushl      $4 
        pushl      8(%ebp) 
        call       dispPhase__hla_3951
        mov        %eax, -4(%ebp) 
        cmpl       $16384, %eax 
        jna        false__hla_4081
        pushl      $str__hla_4082 
        call       STDOUT_PUTS
        pushl      24(%ebp) 
        pushl      20(%ebp) 
        pushl      16(%ebp) 
        pushl      $4 
        pushl      8(%ebp) 
        call       firstPass__hla_3909
        mov        %eax, -8(%ebp) 
        mov        %edx, -12(%ebp) 
        pushl      24(%ebp) 
        pushl      20(%ebp) 
        pushl      16(%ebp) 
        pushl      $1 
        pushl      8(%ebp) 
        call       dispPhase__hla_3951
        mov        %eax, -4(%ebp) 
        pushl      24(%ebp) 
        pushl      20(%ebp) 
        pushl      16(%ebp) 
        pushl      8(%ebp) 
        call       finalPass__hla_4015
        cmpb       $0, 12(%ebp) 
        je         false__hla_4083
        pushl      $str__hla_4084 
        call       STDOUT_PUTS
        pushl      -4(%ebp) 
        call       STDOUT_PUTU32
        pushl      $str__hla_4085 
        call       STDOUT_PUTS
false__hla_4083:
        jmp        endif__hla_4081
false__hla_4081:
        pushl      24(%ebp) 
        pushl      20(%ebp) 
        pushl      16(%ebp) 
        pushl      8(%ebp) 
        call       finalPass__hla_4015
        cmpb       $0, 12(%ebp) 
        je         false__hla_4086
        pushl      $str__hla_4084 
        call       STDOUT_PUTS
        pushl      -4(%ebp) 
        call       STDOUT_PUTU32
        pushl      $str__hla_4087 
        call       STDOUT_PUTS
false__hla_4086:
endif__hla_4081:
        mov        codeEnd__hla_3326, %eax 
        subl       codeStart__hla_3325, %eax 
        mov        %eax, codeSize 
        mov        dataEnd__hla_3328, %eax 
        subl       dataStart__hla_3327, %eax 
        mov        %eax, dataSize 
        mov        bssEnd__hla_3330, %eax 
        subl       bssStart__hla_3329, %eax 
        mov        %eax, bssSize 
xoptimizeDisps__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $20
End_optimizeDisps_4090:
  .size optimizeDisps,End_optimizeDisps_4090-optimizeDisps



        .type      getSymbol__hla_4099,@function

getSymbol__hla_4099:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %eax 
        pushl      %ebx 
        imul       $18, 12(%ebp), %ebx 
        addl       COFFsyms__hla_3313, %ebx 
        mov        (%ebx), %eax 
        testl      %eax, %eax 
        je         false__hla_4102
        pushl      8(%ebx) 
        movl       $0, 8(%ebx) 
        lea        (%ebx), %eax 
        pushl      %eax 
        pushl      8(%ebp) 
        call       STR_CPYZ
        popl       8(%ebx) 
        jmp        endif__hla_4102
false__hla_4102:
        mov        4(%ebx), %eax 
        addl       stringTable__hla_3322, %eax 
        pushl      %eax 
        pushl      8(%ebp) 
        call       STR_CPYZ
endif__hla_4102:
        popl       %ebx 
        popl       %eax 
xgetSymbol__hla_4099__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $8
End_getSymbol__hla_4099_4105:
  .size getSymbol__hla_4099,End_getSymbol__hla_4099_4105-getSymbol__hla_4099



        .type      dumpRelocs__hla_4108,@function

dumpRelocs__hla_4108:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $1028, %esp 
        pushl      %eax 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %ebp 
        addl       $-1028, (%esp) 
        pushl      $1024 
        call       STR_INIT
        mov        %eax, -4(%ebp) 
        call       STDOUT_NEWLN
        pushl      16(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4111 
        call       STDOUT_PUTS
        mov        12(%ebp), %ebx 
        mov        $0, %ecx 

        jmp        StartFor__hla_4112
for__hla_4112:
        pushl      4(%ebx) 
        pushl      -4(%ebp) 
        call       getSymbol__hla_4099
        pushl      %ecx 
        call       STDOUT_PUTU32
        pushl      $str__hla_4113 
        call       STDOUT_PUTS
        pushl      (%ebx) 
        call       STDOUT_PUTD
        pushl      $str__hla_4114 
        call       STDOUT_PUTS
        pushl      -4(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4115 
        call       STDOUT_PUTS
        movzwl     8(%ebx), %eax 
        cmpl       $20, %eax 
        jg         default__hla_4116
        jmp *      jmpTbl__hla_4116(,%eax,4) 
case__hla_4117:
        pushl      $str__hla_4118 
        call       STDOUT_PUTS
        jmp        endswitch__hla_4116
case__hla_4119:
        pushl      $str__hla_4120 
        call       STDOUT_PUTS
        jmp        endswitch__hla_4116
case__hla_4121:
        pushl      $str__hla_4122 
        call       STDOUT_PUTS
        jmp        endswitch__hla_4116
case__hla_4123:
        pushl      $str__hla_4124 
        call       STDOUT_PUTS
        jmp        endswitch__hla_4116
default__hla_4116:
        pushl      $str__hla_4125 
        call       STDOUT_PUTS
        pushl      %eax 
        call       STDOUT_PUTD
endswitch__hla_4116:
        call       STDOUT_NEWLN
        addl       $10, %ebx 
continue__hla_4112:
        incl       %ecx 

StartFor__hla_4112:
        cmpl       8(%ebp), %ecx 
        jb         for__hla_4112
exitloop__hla_4112:

        popl       %ecx 
        popl       %ebx 
        popl       %eax 
xdumpRelocs__hla_4108__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $12
End_dumpRelocs__hla_4108_4128:
  .size dumpRelocs__hla_4108,End_dumpRelocs__hla_4108_4128-dumpRelocs__hla_4108



        .type      generateCOFF__hla_4093,@function

generateCOFF__hla_4093:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $192, %esp 
        pushl      %eax 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        cmpb       $0, verboseDebug__hla_3331 
        je         false__hla_4131
        pushl      $str__hla_4132 
        call       STDOUT_PUTS
        pushl      24(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4133 
        call       STDOUT_PUTS
        pushl      20(%ebp) 
        call       STDOUT_PUTS
        call       STDOUT_NEWLN
false__hla_4131:
        movl       $65536, strTblSize__hla_3324 
        pushl      $65536 
        call       MEM_ALLOC1
        mov        %eax, stringTable__hla_3322 
        movl       $4, strTblOffset__hla_3323 
        pushl      $73728 
        call       MEM_ALLOC1
        mov        %eax, COFFsyms__hla_3313 
        movl       %eax, %ebx 
        movl       $73728, coffSymSize__hla_3315 
        movl       $0, numCOFFsyms__hla_3314 
        movb       $46, (%ebx) 
        movb       $102, 1(%ebx) 
        movb       $105, 2(%ebx) 
        movb       $108, 3(%ebx) 
        movb       $101, 4(%ebx) 
        movb       $0, 5(%ebx) 
        movb       $0, 6(%ebx) 
        movb       $0, 7(%ebx) 
        movl       $0, 8(%ebx) 
        movw       $2, 12(%ebx) 
        movw       $0, 14(%ebx) 
        movb       $103, 16(%ebx) 
        pushl      24(%ebp) 
        call       STR_LENGTH
        addl       $18, %eax 
        xorl       %edx, %edx 
        divl       divisor__hla_4134 
        mov        %al, 17(%ebx) 
        addl       $1, %eax 
        mov        %eax, numCOFFsyms__hla_3314 
        lea        18(%ebx), %eax 
        pushl      24(%ebp) 
        pushl      %eax 
        call       ZSTR_CPY
        mov        numCodeRelocs, %eax 
        cmpl       $65535, %eax 
        jnae       false__hla_4135
        mov        $65535, %ax 
        addl       $1, numCodeRelocs 
false__hla_4135:
        mov        %ax, CodeAuxSection__hla_4094+4 
        mov        codeSize, %eax 
        mov        %eax, CodeAuxSection__hla_4094 
        pushl      $str__hla_4136 
        pushl      $0 
        pushl      $1 
        pushl      $0 
        pushl      $3 
        pushl      $1 
        pushl      $CodeAuxSection__hla_4094 
        call       addCOFFsym__hla_3777
        addl       COFFsyms__hla_3313, %eax 
        mov        %eax, -172(%ebp) 
        mov        numDataRelocs, %eax 
        cmpl       $65535, %eax 
        jnae       false__hla_4137
        mov        $65535, %ax 
        addl       $1, numDataRelocs 
false__hla_4137:
        mov        %ax, DataAuxSection__hla_4095+4 
        mov        dataSize, %eax 
        mov        %eax, DataAuxSection__hla_4095 
        pushl      $str__hla_4138 
        pushl      $0 
        pushl      $2 
        pushl      $0 
        pushl      $3 
        pushl      $1 
        pushl      $DataAuxSection__hla_4095 
        call       addCOFFsym__hla_3777
        addl       COFFsyms__hla_3313, %eax 
        mov        %eax, -176(%ebp) 
        mov        bssSize, %eax 
        mov        %eax, BssAuxSection__hla_4096 
        pushl      $str__hla_4139 
        pushl      $0 
        pushl      $3 
        pushl      $0 
        pushl      $3 
        pushl      $1 
        pushl      $BssAuxSection__hla_4096 
        call       addCOFFsym__hla_3777
        addl       COFFsyms__hla_3313, %eax 
        mov        %eax, -180(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4140 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        mov        4(%edx), %ebx 
        movzbw     20(%ebx), %cx 
        mov        12(%ebx), %edi 
        testb      $1, 21(%ebx) 
        jz         false__hla_4141
        mov        $2, %al 
        mov        $0, %cx 
        xorl       %edi, %edi 
        jmp        endif__hla_4141
false__hla_4141:
        testb      $2, 21(%ebx) 
        jz         false__hla_4142
        mov        $2, %al 
        jmp        endif__hla_4142
false__hla_4142:
        mov        $3, %al 
endif__hla_4142:
endif__hla_4141:
        pushl      8(%edx) 
        pushl      12(%ebx) 
        pushl      %ecx 
        pushl      $0 
        pushl      %eax 
        pushl      $0 
        pushl      $0 
        call       addCOFFsym__hla_3777
        mov        %eax, 8(%ebx) 
continue__hla_4140:
        popl       %ebp 
        ret        $4
exitfor__hla_4140:

        movw       $332, -32(%ebp) 
        movw       $3, -30(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        call       TIME_UTCDATETIME
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        call       TIME_TOUNIXTIME
        mov        %eax, -28(%ebp) 
        movl       $0, -24(%ebp) 
        movl       $0, -20(%ebp) 
        movw       $0, -16(%ebp) 
        movw       $256, -14(%ebp) 
        movb       $46, -72(%ebp) 
        movb       $116, -71(%ebp) 
        movb       $101, -70(%ebp) 
        movb       $120, -69(%ebp) 
        movb       $116, -68(%ebp) 
        movb       $0, -67(%ebp) 
        movb       $0, -66(%ebp) 
        movb       $0, -65(%ebp) 
        mov        codeSize, %eax 
        mov        %eax, -64(%ebp) 
        mov        %eax, -56(%ebp) 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -164(%ebp) 
        mov        numCodeRelocs, %edx 
        cmpl       $65535, %edx 
        jnb        false__hla_4143
        mov        %dx, -40(%ebp) 
        movzwl     %dx, %eax 
        imul       $10, %eax, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -156(%ebp) 
        movl       $1615855648, -36(%ebp) 
        jmp        endif__hla_4143
false__hla_4143:
        movw       $65535, -40(%ebp) 
        imul       $10, %edx, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -156(%ebp) 
        mov        %edx, (%eax) 
        movl       $0, 4(%eax) 
        movw       $0, 8(%eax) 
        movl       $1632632864, -36(%ebp) 
endif__hla_4143:
        movl       $0, -60(%ebp) 
        movl       $0, -52(%ebp) 
        movl       $0, -48(%ebp) 
        movl       $0, -44(%ebp) 
        movw       $0, -38(%ebp) 
        pushl      16(%ebp) 
        pushl      codeStart__hla_3325 
        pushl      -156(%ebp) 
        pushl      numCodeRelocs 
        pushl      -164(%ebp) 
        pushl      $1 
        pushl      $0 
        call       buildRaw__hla_3815
        movb       $46, -112(%ebp) 
        movb       $100, -111(%ebp) 
        movb       $97, -110(%ebp) 
        movb       $116, -109(%ebp) 
        movb       $97, -108(%ebp) 
        movb       $0, -107(%ebp) 
        movb       $0, -106(%ebp) 
        movb       $0, -105(%ebp) 
        mov        dataSize, %eax 
        mov        %eax, -104(%ebp) 
        mov        %eax, -96(%ebp) 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -168(%ebp) 
        mov        numDataRelocs, %edx 
        cmpl       $65535, %edx 
        jnb        false__hla_4144
        mov        %dx, -80(%ebp) 
        movzwl     %dx, %eax 
        imul       $10, %eax, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -160(%ebp) 
        movl       $-1068498880, -76(%ebp) 
        jmp        endif__hla_4144
false__hla_4144:
        movw       $65535, -80(%ebp) 
        imul       $10, %edx, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -160(%ebp) 
        mov        %edx, (%eax) 
        movl       $0, 4(%eax) 
        movw       $0, 8(%eax) 
        movl       $-1051721664, -76(%ebp) 
endif__hla_4144:
        movl       $0, -100(%ebp) 
        movl       $0, -92(%ebp) 
        movl       $0, -88(%ebp) 
        movl       $0, -84(%ebp) 
        movw       $0, -78(%ebp) 
        pushl      12(%ebp) 
        pushl      dataStart__hla_3327 
        pushl      -160(%ebp) 
        pushl      numDataRelocs 
        pushl      -168(%ebp) 
        pushl      $2 
        pushl      $0 
        call       buildRaw__hla_3815
        movb       $46, -152(%ebp) 
        movb       $98, -151(%ebp) 
        movb       $115, -150(%ebp) 
        movb       $115, -149(%ebp) 
        movl       $0, -148(%ebp) 
        mov        bssSize, %eax 
        mov        %eax, -136(%ebp) 
        movl       $0, -144(%ebp) 
        movw       $0, -120(%ebp) 
        movl       $0, -140(%ebp) 
        movl       $0, -132(%ebp) 
        movl       $0, -128(%ebp) 
        movl       $0, -124(%ebp) 
        movw       $0, -118(%ebp) 
        movl       $-1068498816, -116(%ebp) 
        mov        $140, %ecx 
        mov        %ecx, -52(%ebp) 
        addl       codeSize, %ecx 
        addl       $3, %ecx 
        andl       $-4, %ecx 
        mov        %ecx, -48(%ebp) 
        imul       $10, numCodeRelocs, %eax 
        addl       %eax, %ecx 
        addl       $3, %ecx 
        andl       $-4, %ecx 
        mov        %ecx, -92(%ebp) 
        addl       dataSize, %ecx 
        addl       $3, %ecx 
        andl       $-4, %ecx 
        mov        %ecx, -88(%ebp) 
        imul       $10, numDataRelocs, %eax 
        addl       %eax, %ecx 
        mov        %ecx, -24(%ebp) 
        mov        numCOFFsyms__hla_3314, %eax 
        mov        %eax, -20(%ebp) 
        imul       $18, %eax, %eax 
        addl       %eax, %ecx 
        addl       strTblOffset__hla_3323, %ecx 
        mov        %ecx, -188(%ebp) 
        pushl      %ecx 
        call       MEM_ZALLOC
        mov        %eax, -184(%ebp) 
        mov        -184(%ebp), %edi 
        lea        -32(%ebp), %esi 
        mov        $20, %ecx 
        cld
        rep movsb
        lea        -72(%ebp), %esi 
        mov        $40, %ecx 
        rep movsb
        lea        -112(%ebp), %esi 
        mov        $40, %ecx 
        rep movsb
        lea        -152(%ebp), %esi 
        mov        $40, %ecx 
        rep movsb
        mov        -164(%ebp), %esi 
        mov        codeSize, %ecx 
        rep movsb
        addl       $3, %edi 
        andl       $-4, %edi 
        mov        -156(%ebp), %esi 
        imul       $10, numCodeRelocs, %ecx 
        rep movsb
        addl       $3, %edi 
        andl       $-4, %edi 
        mov        -168(%ebp), %esi 
        mov        dataSize, %ecx 
        rep movsb
        addl       $3, %edi 
        andl       $-4, %edi 
        mov        -160(%ebp), %esi 
        imul       $10, numDataRelocs, %ecx 
        rep movsb
        mov        COFFsyms__hla_3313, %esi 
        imul       $18, numCOFFsyms__hla_3314, %ecx 
        rep movsb
        mov        stringTable__hla_3322, %esi 
        mov        strTblOffset__hla_3323, %eax 
        stosl
        addl       $4, %esi 
        lea        -4(%eax), %ecx 
        rep movsb
        pushl      20(%ebp) 
        call       FILEIO_OPENNEW
        mov        %eax, -192(%ebp) 
        pushl      -192(%ebp) 
        pushl      -184(%ebp) 
        pushl      -188(%ebp) 
        call       FILEIO_WRITE
        pushl      -192(%ebp) 
        call       FILEIO_CLOSE
        cmpb       $0, verboseDebug__hla_3331 
        je         false__hla_4145
        pushl      $str__hla_4146 
        call       STDOUT_PUTS
        pushl      numCOFFsyms__hla_3314 
        call       STDOUT_PUTU32
        pushl      $str__hla_4147 
        call       STDOUT_PUTS
        mov        COFFsyms__hla_3313, %ebx 
        xorl       %ecx, %ecx 
        jmp        continue__hla_4148
while__hla_4148:
        pushl      %ecx 
        call       STDOUT_PUTU32
        pushl      $str__hla_4113 
        call       STDOUT_PUTS
        mov        (%ebx), %eax 
        testl      %eax, %eax 
        jne        false__hla_4150
        mov        4(%ebx), %eax 
        addl       stringTable__hla_3322, %eax 
        pushl      %eax 
        call       STDOUT_PUTZS
        jmp        endif__hla_4150
false__hla_4150:
        pushl      8(%ebx) 
        movl       $0, 8(%ebx) 
        pushl      %ebx 
        call       STDOUT_PUTZS
        popl       8(%ebx) 
endif__hla_4150:
        pushl      $str__hla_4151 
        call       STDOUT_PUTS
        cmpb       $103, 16(%ebx) 
        jne        false__hla_4152
        lea        18(%ebx), %eax 
        pushl      %eax 
        call       STDOUT_PUTZS
        jmp        endif__hla_4152
false__hla_4152:
        cmpb       $3, 16(%ebx) 
        jne        false__hla_4153
        pushl      $str__hla_4154 
        call       STDOUT_PUTS
        jmp        endif__hla_4152
false__hla_4153:
        cmpb       $2, 16(%ebx) 
        jne        false__hla_4155
        cmpw       $0, 12(%ebx) 
        jne        false__hla_4156
        pushl      $str__hla_4157 
        call       STDOUT_PUTS
        jmp        endif__hla_4156
false__hla_4156:
        pushl      $str__hla_4158 
        call       STDOUT_PUTS
endif__hla_4156:
        jmp        endif__hla_4152
false__hla_4155:
        pushl      $str__hla_4159 
        call       STDOUT_PUTS
endif__hla_4152:
        call       STDOUT_NEWLN
        movzbl     17(%ebx), %eax 
        addl       $1, %eax 
        addl       %eax, %ecx 
        imul       $18, %eax, %eax 
        addl       %eax, %ebx 
continue__hla_4148:
        cmpl       numCOFFsyms__hla_3314, %ecx 
        jb         while__hla_4148
exitloop__hla_4148:

        pushl      $str__hla_4160 
        pushl      -156(%ebp) 
        pushl      numCodeRelocs 
        call       dumpRelocs__hla_4108
        pushl      $str__hla_4161 
        pushl      -160(%ebp) 
        pushl      numDataRelocs 
        call       dumpRelocs__hla_4108
false__hla_4145:
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
        popl       %eax 
xgenerateCOFF__hla_4093__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $20
End_generateCOFF__hla_4093_4164:
  .size generateCOFF__hla_4093,End_generateCOFF__hla_4093_4164-generateCOFF__hla_4093



        .type      generateELF__hla_4167,@function

generateELF__hla_4167:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $148, %esp 
        pushl      %eax 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        cmpb       $0, verboseDebug__hla_3331 
        je         false__hla_4179
        pushl      $str__hla_4180 
        call       STDOUT_PUTS
        pushl      28(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4133 
        call       STDOUT_PUTS
        pushl      24(%ebp) 
        call       STDOUT_PUTS
        call       STDOUT_NEWLN
false__hla_4179:
        pushl      $64 
        call       MEM_ZALLOC
        mov        %eax, -8(%ebp) 
        movl       $4, -140(%ebp) 
        movl       $5, -144(%ebp) 
        movl       $6, -148(%ebp) 
        lea        1(%eax), %edi 
        movl       $1, shstrtabSection__hla_4169 
        pushl      $str__hla_4181 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        movl       $11, symtabSection__hla_4170 
        pushl      $str__hla_4182 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        movl       $19, strtabSection__hla_4171 
        pushl      $str__hla_4183 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        mov        $27, %ebx 
        mov        %ebx, textSection__hla_4172 
        addl       $6, %ebx 
        pushl      $str__hla_4136 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        mov        %ebx, dataSection__hla_4173 
        addl       $6, %ebx 
        pushl      $str__hla_4138 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        mov        %ebx, bssSection__hla_4174 
        addl       $5, %ebx 
        pushl      $str__hla_4139 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        mov        %ebx, relTextSection__hla_4175 
        addl       $10, %ebx 
        pushl      $str__hla_4184 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        mov        %ebx, relDataSection__hla_4176 
        addl       $10, %ebx 
        pushl      $str__hla_4185 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        mov        %ebx, -104(%ebp) 
        movl       $7, -4(%ebp) 
        cmpl       $0, numCodeRelocs 
        je         false__hla_4186
        addl       $1, -4(%ebp) 
false__hla_4186:
        cmpl       $0, numDataRelocs 
        je         false__hla_4187
        addl       $1, -4(%ebp) 
false__hla_4187:
        imul       $40, -4(%ebp), %eax 
        mov        %eax, -96(%ebp) 
        movl       $262144, strTblSize__hla_3324 
        pushl      $262144 
        call       MEM_ZALLOC
        mov        %eax, stringTable__hla_3322 
        movl       $1, strTblOffset__hla_3323 
        pushl      $1048576 
        call       MEM_ZALLOC
        mov        %eax, ELFsyms__hla_3316 
        movl       %eax, %ebx 
        movl       $1048576, elfSymSize__hla_3318 
        movl       $1, numELFsyms__hla_3317 
        pushl      $0 
        pushl      $0 
        pushl      $0 
        pushl      $3 
        pushw      $0 
        pushw      -140(%ebp) 
        pushl      $0 
        call       addELFsym__hla_3789
        addl       $1, numELFsyms__hla_3317 
        pushl      $0 
        pushl      $0 
        pushl      $0 
        pushl      $3 
        pushw      $0 
        pushw      -144(%ebp) 
        pushl      $0 
        call       addELFsym__hla_3789
        addl       $1, numELFsyms__hla_3317 
        pushl      $0 
        pushl      $0 
        pushl      $0 
        pushl      $3 
        pushw      $0 
        pushw      -148(%ebp) 
        pushl      $0 
        call       addELFsym__hla_3789
        addl       $1, numELFsyms__hla_3317 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4188 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        mov        4(%eax), %ebx 
        movzbl     20(%ebx), %ecx 
        cmpl       $1, %ecx 
        jne        false__hla_4189
        mov        -140(%ebp), %ecx 
        jmp        endif__hla_4189
false__hla_4189:
        cmpl       $2, %ecx 
        jne        false__hla_4190
        mov        -144(%ebp), %ecx 
        jmp        endif__hla_4189
false__hla_4190:
        cmpl       $3, %ecx 
        jne        false__hla_4191
        mov        -148(%ebp), %ecx 
        jmp        endif__hla_4189
false__hla_4191:
        xorl       %ecx, %ecx 
endif__hla_4189:
        mov        12(%ebx), %edi 
        testb      $1, 21(%ebx) 
        jnz        false__hla_4192
        testb      $2, 21(%ebx) 
        jnz        false__hla_4193
        cmpb       $0, 22(%ebx) 
        je         false__hla_4194
        pushl      8(%edx) 
        pushl      %edi 
        pushl      16(%ebx) 
        pushl      $2 
        pushl      %ecx 
        pushl      $0 
        call       addELFsym__hla_3789
        jmp        endif__hla_4194
false__hla_4194:
        pushl      8(%edx) 
        pushl      %edi 
        pushl      $0 
        pushl      $0 
        pushl      %ecx 
        pushl      $0 
        call       addELFsym__hla_3789
endif__hla_4194:
        mov        numELFsyms__hla_3317, %eax 
        mov        %eax, 8(%ebx) 
        addl       $1, numELFsyms__hla_3317 
false__hla_4193:
false__hla_4192:
continue__hla_4188:
        popl       %ebp 
        ret        $4
exitfor__hla_4188:

        mov        numELFsyms__hla_3317, %eax 
        mov        %eax, symtabSection__hla_4170+28 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4195 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        mov        4(%eax), %ebx 
        movzbl     20(%ebx), %ecx 
        cmpl       $1, %ecx 
        jne        false__hla_4196
        mov        -140(%ebp), %ecx 
        jmp        endif__hla_4196
false__hla_4196:
        cmpl       $2, %ecx 
        jne        false__hla_4197
        mov        -144(%ebp), %ecx 
        jmp        endif__hla_4196
false__hla_4197:
        cmpl       $3, %ecx 
        jne        false__hla_4198
        mov        -148(%ebp), %ecx 
        jmp        endif__hla_4196
false__hla_4198:
        xorl       %ecx, %ecx 
endif__hla_4196:
        mov        12(%ebx), %edi 
        testb      $1, 21(%ebx) 
        jz         false__hla_4199
        cmpb       $0, 22(%ebx) 
        je         false__hla_4200
        mov        $18, %al 
        jmp        endif__hla_4200
false__hla_4200:
        mov        $16, %al 
endif__hla_4200:
        xorl       %ecx, %ecx 
        xorl       %edi, %edi 
        jmp        endif__hla_4199
false__hla_4199:
        testb      $2, 21(%ebx) 
        jz         false__hla_4201
        cmpb       $0, 22(%ebx) 
        je         false__hla_4202
        mov        $18, %al 
        jmp        endif__hla_4202
false__hla_4202:
        mov        $16, %al 
endif__hla_4202:
        jmp        endif__hla_4201
false__hla_4201:
        jmp        continue__hla_4195
endif__hla_4201:
endif__hla_4199:
        pushl      8(%edx) 
        pushl      %edi 
        pushl      16(%ebx) 
        pushl      %eax 
        pushl      %ecx 
        pushl      $0 
        call       addELFsym__hla_3789
        mov        numELFsyms__hla_3317, %eax 
        mov        %eax, 8(%ebx) 
        addl       $1, numELFsyms__hla_3317 
continue__hla_4195:
        popl       %ebp 
        ret        $4
exitfor__hla_4195:

        mov        codeSize, %eax 
        testl      %eax, %eax 
        je         false__hla_4203
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -84(%ebp) 
        imul       $8, numCodeRelocs, %eax 
        addl       $8, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -76(%ebp) 
        pushl      20(%ebp) 
        pushl      codeStart__hla_3325 
        pushl      -76(%ebp) 
        pushl      numCodeRelocs 
        pushl      -84(%ebp) 
        pushl      $1 
        pushl      8(%ebp) 
        call       buildRaw__hla_3815
false__hla_4203:
        mov        dataSize, %eax 
        testl      %eax, %eax 
        je         false__hla_4204
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -88(%ebp) 
        imul       $8, numDataRelocs, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -80(%ebp) 
        pushl      16(%ebp) 
        pushl      dataStart__hla_3327 
        pushl      -80(%ebp) 
        pushl      numDataRelocs 
        pushl      -88(%ebp) 
        pushl      $2 
        pushl      8(%ebp) 
        call       buildRaw__hla_3815
false__hla_4204:
        mov        $64, %eax 
        mov        %eax, -92(%ebp) 
        addl       -96(%ebp), %eax 
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, -100(%ebp) 
        addl       -104(%ebp), %eax 
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, -108(%ebp) 
        imul       $16, numELFsyms__hla_3317, %edx 
        addl       %edx, %eax 
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, -116(%ebp) 
        addl       strTblOffset__hla_3323, %eax 
        movl       %eax, %edx 
        addl       $15, %edx 
        andl       $-16, %edx 
        cmpl       $0, codeSize 
        je         false__hla_4205
        mov        %edx, -120(%ebp) 
        addl       codeSize, %edx 
        addl       $15, %edx 
        andl       $-16, %edx 
        jmp        endif__hla_4205
false__hla_4205:
        mov        -100(%ebp), %eax 
        mov        %eax, -120(%ebp) 
endif__hla_4205:
        cmpl       $0, dataSize 
        je         false__hla_4206
        mov        %edx, -128(%ebp) 
        addl       dataSize, %edx 
        addl       $15, %edx 
        andl       $-16, %edx 
        jmp        endif__hla_4206
false__hla_4206:
        mov        -100(%ebp), %eax 
        mov        %eax, -128(%ebp) 
endif__hla_4206:
        cmpl       $0, numCodeRelocs 
        je         false__hla_4207
        mov        %edx, -124(%ebp) 
        imul       $8, numCodeRelocs, %eax 
        addl       %eax, %edx 
        addl       $15, %edx 
        andl       $-16, %edx 
false__hla_4207:
        cmpl       $0, numDataRelocs 
        je         false__hla_4208
        mov        %edx, -132(%ebp) 
        imul       $8, numDataRelocs, %eax 
        addl       %eax, %edx 
false__hla_4208:
        mov        %edx, -16(%ebp) 
        pushl      %edx 
        call       MEM_ZALLOC
        mov        %eax, -12(%ebp) 
        pushl      -100(%ebp) 
        popl       -136(%ebp) 
        cld
        lea        -72(%ebp), %edi 
        mov        $52, %ecx 
        mov        $0, %al 
        rep stosb
        movw       $1, -56(%ebp) 
        movw       $3, -54(%ebp) 
        movl       $1, -52(%ebp) 
        movl       $0, -48(%ebp) 
        movl       $0, -44(%ebp) 
        mov        -92(%ebp), %eax 
        mov        %eax, -40(%ebp) 
        movl       $0, -36(%ebp) 
        movw       $52, -32(%ebp) 
        movw       $0, -30(%ebp) 
        movw       $0, -28(%ebp) 
        movw       $40, -26(%ebp) 
        mov        -4(%ebp), %eax 
        mov        %ax, -24(%ebp) 
        movw       $1, -22(%ebp) 
        lea        -72(%ebp), %ebx 
        movb       $127, (%ebx) 
        movb       $69, 1(%ebx) 
        movb       $76, 2(%ebx) 
        movb       $70, 3(%ebx) 
        movb       $1, 4(%ebx) 
        movb       $1, 5(%ebx) 
        movb       $1, 6(%ebx) 
        cmpb       $1, 8(%ebp) 
        jne        false__hla_4209
        movb       $0, 7(%ebx) 
        jmp        endif__hla_4209
false__hla_4209:
        cmpb       $2, 8(%ebp) 
        jne        false__hla_4210
        movb       $9, 7(%ebx) 
        jmp        endif__hla_4209
false__hla_4210:
        pushl      $str__hla_4211 
        call       STDERR_PUTS
        movb       $0, 7(%ebx) 
endif__hla_4209:
        mov        -100(%ebp), %eax 
        mov        %eax, shstrtabSection__hla_4169+16 
        mov        -104(%ebp), %eax 
        mov        %eax, shstrtabSection__hla_4169+20 
        mov        -108(%ebp), %eax 
        mov        %eax, symtabSection__hla_4170+16 
        imul       $16, numELFsyms__hla_3317, %eax 
        mov        %eax, symtabSection__hla_4170+20 
        mov        %eax, -112(%ebp) 
        mov        -116(%ebp), %eax 
        mov        %eax, strtabSection__hla_4171+16 
        mov        strTblOffset__hla_3323, %eax 
        mov        %eax, strtabSection__hla_4171+20 
        mov        -120(%ebp), %eax 
        mov        %eax, textSection__hla_4172+16 
        mov        codeSize, %eax 
        mov        %eax, textSection__hla_4172+20 
        mov        -128(%ebp), %eax 
        mov        %eax, dataSection__hla_4173+16 
        mov        dataSize, %eax 
        mov        %eax, dataSection__hla_4173+20 
        mov        bssSize, %eax 
        mov        %eax, bssSection__hla_4174+20 
        mov        -136(%ebp), %eax 
        mov        %eax, bssSection__hla_4174+16 
        cmpl       $0, numCodeRelocs 
        je         false__hla_4212
        mov        -124(%ebp), %eax 
        mov        %eax, relTextSection__hla_4175+16 
        imul       $8, numCodeRelocs, %eax 
        mov        %eax, relTextSection__hla_4175+20 
        mov        -140(%ebp), %eax 
        mov        %eax, relTextSection__hla_4175+28 
false__hla_4212:
        cmpl       $0, numDataRelocs 
        je         false__hla_4213
        mov        -132(%ebp), %eax 
        mov        %eax, relDataSection__hla_4176+16 
        imul       $8, numDataRelocs, %eax 
        mov        %eax, relDataSection__hla_4176+20 
        mov        -144(%ebp), %eax 
        mov        %eax, relDataSection__hla_4176+28 
false__hla_4213:
        cld
        mov        -12(%ebp), %edi 
        lea        -72(%ebp), %esi 
        mov        $52, %ecx 
        rep movsb
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        lea        NULLsection__hla_4168, %esi 
        mov        $40, %ecx 
        rep movsb
        lea        shstrtabSection__hla_4169, %esi 
        mov        $40, %ecx 
        rep movsb
        lea        symtabSection__hla_4170, %esi 
        mov        $40, %ecx 
        rep movsb
        lea        strtabSection__hla_4171, %esi 
        mov        $40, %ecx 
        rep movsb
        lea        textSection__hla_4172, %esi 
        mov        $40, %ecx 
        rep movsb
        lea        dataSection__hla_4173, %esi 
        mov        $40, %ecx 
        rep movsb
        lea        bssSection__hla_4174, %esi 
        mov        $40, %ecx 
        rep movsb
        cmpl       $0, numCodeRelocs 
        je         false__hla_4214
        lea        relTextSection__hla_4175, %esi 
        mov        $40, %ecx 
        rep movsb
false__hla_4214:
        cmpl       $0, numDataRelocs 
        je         false__hla_4215
        lea        relDataSection__hla_4176, %esi 
        mov        $40, %ecx 
        rep movsb
false__hla_4215:
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        -8(%ebp), %esi 
        mov        -104(%ebp), %ecx 
        cld
        rep movsb
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        ELFsyms__hla_3316, %esi 
        imul       $16, numELFsyms__hla_3317, %ecx 
        rep movsb
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        stringTable__hla_3322, %esi 
        mov        strTblOffset__hla_3323, %ecx 
        rep movsb
        cmpl       $0, codeSize 
        je         false__hla_4216
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        -84(%ebp), %esi 
        mov        codeSize, %ecx 
        rep movsb
false__hla_4216:
        cmpl       $0, dataSize 
        je         false__hla_4217
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        -88(%ebp), %esi 
        mov        dataSize, %ecx 
        rep movsb
false__hla_4217:
        cmpl       $0, numCodeRelocs 
        je         false__hla_4218
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        -76(%ebp), %esi 
        imul       $8, numCodeRelocs, %ecx 
        rep movsb
false__hla_4218:
        cmpl       $0, numDataRelocs 
        je         false__hla_4219
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        -80(%ebp), %esi 
        imul       $8, numDataRelocs, %ecx 
        rep movsb
false__hla_4219:
        pushl      24(%ebp) 
        call       FILEIO_OPENNEW
        mov        %eax, -20(%ebp) 
        pushl      -20(%ebp) 
        pushl      -12(%ebp) 
        pushl      -16(%ebp) 
        call       FILEIO_WRITE
        pushl      -20(%ebp) 
        call       FILEIO_CLOSE
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
        popl       %eax 
xgenerateELF__hla_4167__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $24
End_generateELF__hla_4167_4222:
  .size generateELF__hla_4167,End_generateELF__hla_4167_4222-generateELF__hla_4167



        .type      generateMacho__hla_4225,@function

generateMacho__hla_4225:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $440, %esp 
        pushl      %eax 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        cmpb       $0, verboseDebug__hla_3331 
        je         false__hla_4228
        pushl      $str__hla_4229 
        call       STDOUT_PUTS
        pushl      24(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4133 
        call       STDOUT_PUTS
        pushl      20(%ebp) 
        call       STDOUT_PUTS
        call       STDOUT_NEWLN
false__hla_4228:
        movl       $262144, strTblSize__hla_3324 
        pushl      $262144 
        call       MEM_ZALLOC
        mov        %eax, stringTable__hla_3322 
        movl       $1, strTblOffset__hla_3323 
        pushl      $786432 
        call       MEM_ZALLOC
        mov        %eax, MachoSyms__hla_3319 
        movl       %eax, %ebx 
        movl       $786432, MachoSymSize__hla_3320 
        movl       $0, numMachoSyms__hla_3321 
        movl       $0, -20(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4230 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        mov        4(%eax), %ebx 
        movzbl     20(%ebx), %ecx 
        cmpl       $1, %ecx 
        jne        false__hla_4231
        mov        $1, %ecx 
        jmp        endif__hla_4231
false__hla_4231:
        cmpl       $2, %ecx 
        jne        false__hla_4232
        mov        $2, %ecx 
        jmp        endif__hla_4231
false__hla_4232:
        cmpl       $3, %ecx 
        jne        false__hla_4233
        mov        $3, %ecx 
        jmp        endif__hla_4231
false__hla_4233:
        xorl       %ecx, %ecx 
endif__hla_4231:
        mov        12(%ebx), %edi 
        testb      $3, 21(%ebx) 
        jnz        false__hla_4234
        pushl      8(%edx) 
        pushl      %edi 
        pushl      $14 
        pushl      %ecx 
        call       addMachoSym__hla_3800
        addl       $1, -20(%ebp) 
        mov        numMachoSyms__hla_3321, %eax 
        mov        %eax, 8(%ebx) 
        addl       $1, %eax 
        mov        %eax, numMachoSyms__hla_3321 
false__hla_4234:
continue__hla_4230:
        popl       %ebp 
        ret        $4
exitfor__hla_4230:

        movl       $0, -24(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4235 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        mov        4(%eax), %ebx 
        movzbl     20(%ebx), %ecx 
        cmpl       $1, %ecx 
        jne        false__hla_4236
        mov        $1, %ecx 
        jmp        endif__hla_4236
false__hla_4236:
        cmpl       $2, %ecx 
        jne        false__hla_4237
        mov        $2, %ecx 
        jmp        endif__hla_4236
false__hla_4237:
        cmpl       $3, %ecx 
        jne        false__hla_4238
        mov        $3, %ecx 
        jmp        endif__hla_4236
false__hla_4238:
        xorl       %ecx, %ecx 
endif__hla_4236:
        mov        12(%ebx), %edi 
        testb      $2, 21(%ebx) 
        jz         false__hla_4239
        pushl      8(%edx) 
        pushl      %edi 
        pushl      $15 
        pushl      %ecx 
        call       addMachoSym__hla_3800
        addl       $1, -24(%ebp) 
        mov        numMachoSyms__hla_3321, %eax 
        mov        %eax, 8(%ebx) 
        addl       $1, %eax 
        mov        %eax, numMachoSyms__hla_3321 
false__hla_4239:
continue__hla_4235:
        popl       %ebp 
        ret        $4
exitfor__hla_4235:

        movl       $0, -28(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4240 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        mov        4(%eax), %ebx 
        movzbl     20(%ebx), %ecx 
        cmpl       $1, %ecx 
        jne        false__hla_4241
        mov        $1, %ecx 
        jmp        endif__hla_4241
false__hla_4241:
        cmpl       $2, %ecx 
        jne        false__hla_4242
        mov        $2, %ecx 
        jmp        endif__hla_4241
false__hla_4242:
        cmpl       $3, %ecx 
        jne        false__hla_4243
        mov        $3, %ecx 
        jmp        endif__hla_4241
false__hla_4243:
        xorl       %ecx, %ecx 
endif__hla_4241:
        mov        12(%ebx), %edi 
        testb      $1, 21(%ebx) 
        jz         false__hla_4244
        pushl      8(%edx) 
        pushl      %edi 
        pushl      $1 
        pushl      %ecx 
        call       addMachoSym__hla_3800
        addl       $1, -28(%ebp) 
        mov        numMachoSyms__hla_3321, %eax 
        mov        %eax, 8(%ebx) 
        addl       $1, %eax 
        mov        %eax, numMachoSyms__hla_3321 
false__hla_4244:
continue__hla_4240:
        popl       %ebp 
        ret        $4
exitfor__hla_4240:

        mov        codeSize, %eax 
        testl      %eax, %eax 
        je         false__hla_4245
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, codeSize 
        pushl      %eax 
        call       MEM_ZALLOC
        mov        %eax, -12(%ebp) 
        imul       $8, numCodeRelocs, %eax 
        addl       $8, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -4(%ebp) 
        pushl      16(%ebp) 
        pushl      codeStart__hla_3325 
        pushl      -4(%ebp) 
        pushl      numCodeRelocs 
        pushl      -12(%ebp) 
        pushl      $1 
        pushl      $3 
        call       buildRaw__hla_3815
false__hla_4245:
        mov        dataSize, %eax 
        testl      %eax, %eax 
        je         false__hla_4246
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, dataSize 
        pushl      %eax 
        call       MEM_ZALLOC
        mov        %eax, -16(%ebp) 
        imul       $8, numDataRelocs, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -8(%ebp) 
        pushl      12(%ebp) 
        pushl      dataStart__hla_3327 
        pushl      -8(%ebp) 
        pushl      numDataRelocs 
        pushl      -16(%ebp) 
        pushl      $2 
        pushl      $3 
        call       buildRaw__hla_3815
false__hla_4246:
        addl       $15, bssSize 
        andl       $-16, bssSize 
        movl       $-17958194, -440(%ebp) 
        movl       $7, -436(%ebp) 
        movl       $3, -432(%ebp) 
        movl       $1, -428(%ebp) 
        movl       $3, -424(%ebp) 
        movl       $364, -420(%ebp) 
        movl       $0, -416(%ebp) 
        movl       $1, -412(%ebp) 
        movl       $260, -408(%ebp) 
        movl       $0, -404(%ebp) 
        movl       $0, -400(%ebp) 
        movl       $0, -396(%ebp) 
        movl       $0, -392(%ebp) 
        movl       $0, -388(%ebp) 
        mov        codeSize, %eax 
        addl       dataSize, %eax 
        mov        %eax, -376(%ebp) 
        addl       bssSize, %eax 
        mov        %eax, -384(%ebp) 
        movl       $392, -380(%ebp) 
        movl       $7, -372(%ebp) 
        movl       $7, -368(%ebp) 
        movl       $3, -364(%ebp) 
        movl       $0, -360(%ebp) 
        movl       $1702125407, -356(%ebp) 
        movl       $29816, -352(%ebp) 
        movl       $0, -348(%ebp) 
        movl       $0, -344(%ebp) 
        movl       $1163157343, -340(%ebp) 
        movl       $21592, -336(%ebp) 
        movl       $0, -332(%ebp) 
        movl       $0, -328(%ebp) 
        movl       $0, -324(%ebp) 
        mov        codeSize, %eax 
        mov        %eax, -320(%ebp) 
        movl       $392, -316(%ebp) 
        movl       $4, -312(%ebp) 
        mov        codeSize, %eax 
        addl       dataSize, %eax 
        addl       $392, %eax 
        mov        %eax, -308(%ebp) 
        mov        numCodeRelocs, %eax 
        mov        %eax, -304(%ebp) 
        movl       $1024, -300(%ebp) 
        movl       $0, -296(%ebp) 
        movl       $0, -292(%ebp) 
        movl       $1633967967, -288(%ebp) 
        movl       $24948, -284(%ebp) 
        movl       $0, -280(%ebp) 
        movl       $0, -276(%ebp) 
        movl       $1094999903, -272(%ebp) 
        movl       $16724, -268(%ebp) 
        movl       $0, -264(%ebp) 
        movl       $0, -260(%ebp) 
        mov        dataStart__hla_3327, %eax 
        mov        %eax, -256(%ebp) 
        mov        dataSize, %eax 
        mov        %eax, -252(%ebp) 
        mov        -316(%ebp), %eax 
        addl       codeSize, %eax 
        mov        %eax, -248(%ebp) 
        movl       $4, -244(%ebp) 
        imul       $8, numCodeRelocs, %eax 
        addl       -308(%ebp), %eax 
        mov        %eax, -240(%ebp) 
        mov        numDataRelocs, %eax 
        mov        %eax, -236(%ebp) 
        movl       $0, -232(%ebp) 
        movl       $0, -228(%ebp) 
        movl       $0, -224(%ebp) 
        movl       $1935826783, -220(%ebp) 
        movl       $115, -216(%ebp) 
        movl       $0, -212(%ebp) 
        movl       $0, -208(%ebp) 
        movl       $1094999903, -204(%ebp) 
        movl       $16724, -200(%ebp) 
        movl       $0, -196(%ebp) 
        movl       $0, -192(%ebp) 
        mov        bssStart__hla_3329, %eax 
        mov        %eax, -188(%ebp) 
        mov        bssSize, %eax 
        mov        %eax, -184(%ebp) 
        movl       $0, -180(%ebp) 
        movl       $4, -176(%ebp) 
        movl       $0, -172(%ebp) 
        movl       $0, -168(%ebp) 
        movl       $1, -164(%ebp) 
        movl       $0, -160(%ebp) 
        movl       $0, -156(%ebp) 
        movl       $2, -152(%ebp) 
        movl       $24, -148(%ebp) 
        movl       $0, -144(%ebp) 
        mov        numMachoSyms__hla_3321, %eax 
        mov        %eax, -140(%ebp) 
        movl       $0, -136(%ebp) 
        mov        strTblOffset__hla_3323, %eax 
        mov        %eax, -132(%ebp) 
        movl       $11, -128(%ebp) 
        movl       $80, -124(%ebp) 
        mov        -20(%ebp), %eax 
        movl       $0, -120(%ebp) 
        mov        %eax, -116(%ebp) 
        cmpl       $0, -24(%ebp) 
        je         false__hla_4261
        mov        -20(%ebp), %eax 
        mov        %eax, -112(%ebp) 
        jmp        endif__hla_4261
false__hla_4261:
        movl       $0, -112(%ebp) 
endif__hla_4261:
        mov        -24(%ebp), %eax 
        mov        %eax, -108(%ebp) 
        cmpl       $0, -28(%ebp) 
        je         false__hla_4262
        mov        -20(%ebp), %eax 
        addl       -24(%ebp), %eax 
        mov        %eax, -104(%ebp) 
        jmp        endif__hla_4262
false__hla_4262:
        movl       $0, -104(%ebp) 
endif__hla_4262:
        mov        -28(%ebp), %eax 
        mov        %eax, -100(%ebp) 
        xorl       %eax, %eax 
        mov        %eax, -96(%ebp) 
        mov        %eax, -92(%ebp) 
        mov        %eax, -88(%ebp) 
        mov        %eax, -84(%ebp) 
        mov        %eax, -80(%ebp) 
        mov        %eax, -76(%ebp) 
        mov        %eax, -72(%ebp) 
        mov        %eax, -68(%ebp) 
        mov        %eax, -64(%ebp) 
        mov        %eax, -60(%ebp) 
        mov        %eax, -56(%ebp) 
        mov        %eax, -52(%ebp) 
        mov        $392, %eax 
        addl       codeSize, %eax 
        addl       dataSize, %eax 
        imul       $8, numCodeRelocs, %edx 
        addl       %edx, %eax 
        imul       $8, numDataRelocs, %edx 
        addl       %edx, %eax 
        mov        %eax, -144(%ebp) 
        imul       $12, numMachoSyms__hla_3321, %edx 
        addl       %edx, %eax 
        mov        %eax, -136(%ebp) 
        addl       strTblOffset__hla_3323, %eax 
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, -36(%ebp) 
        pushl      %eax 
        call       MEM_ZALLOC
        mov        %eax, -32(%ebp) 
        cld
        movl       %eax, %edi 
        lea        -440(%ebp), %esi 
        mov        $392, %ecx 
        rep movsb
        mov        -12(%ebp), %esi 
        mov        codeSize, %ecx 
        rep movsb
        mov        -16(%ebp), %esi 
        mov        dataSize, %ecx 
        rep movsb
        mov        -4(%ebp), %esi 
        imul       $8, numCodeRelocs, %ecx 
        rep movsb
        mov        -8(%ebp), %esi 
        imul       $8, numDataRelocs, %ecx 
        rep movsb
        mov        MachoSyms__hla_3319, %esi 
        imul       $12, numMachoSyms__hla_3321, %ecx 
        rep movsb
        mov        stringTable__hla_3322, %esi 
        mov        strTblOffset__hla_3323, %ecx 
        rep movsb
        pushl      20(%ebp) 
        call       FILEIO_OPENNEW
        mov        %eax, -44(%ebp) 
        pushl      -44(%ebp) 
        pushl      -32(%ebp) 
        pushl      -36(%ebp) 
        call       FILEIO_WRITE
        pushl      -44(%ebp) 
        call       FILEIO_CLOSE
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
        popl       %eax 
xgenerateMacho__hla_4225__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $20
End_generateMacho__hla_4225_4265:
  .size generateMacho__hla_4225,End_generateMacho__hla_4225_4265-generateMacho__hla_4225



        .type      compileCOFF,@function

compileCOFF:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $36, %esp 
        pushl      %ebx 
        mov        16(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -4(%ebp) 
        mov        12(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -8(%ebp) 
        mov        8(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -12(%ebp) 
        pushl      28(%ebp) 
        pushl      24(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       lexer
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        pushl      -12(%ebp) 
        pushl      20(%ebp) 
        pushl      $0 
        call       optimizeDisps
        pushl      36(%ebp) 
        pushl      32(%ebp) 
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        pushl      -12(%ebp) 
        call       generateCOFF__hla_4093
        mov        16(%ebp), %ebx 
        mov        -4(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        12(%ebp), %ebx 
        mov        -8(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        8(%ebp), %ebx 
        mov        -12(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        $1, %eax 
xcompileCOFF__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $32
End_compileCOFF_4272:
  .size compileCOFF,End_compileCOFF_4272-compileCOFF



        .type      compileELF,@function

compileELF:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $36, %esp 
        pushl      %ebx 
        mov        16(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -4(%ebp) 
        mov        12(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -8(%ebp) 
        mov        8(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -12(%ebp) 
        pushl      32(%ebp) 
        pushl      28(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       lexer
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        pushl      -12(%ebp) 
        pushl      20(%ebp) 
        pushl      24(%ebp) 
        call       optimizeDisps
        pushl      40(%ebp) 
        pushl      36(%ebp) 
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        pushl      -12(%ebp) 
        pushl      24(%ebp) 
        call       generateELF__hla_4167
        mov        16(%ebp), %ebx 
        mov        -4(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        12(%ebp), %ebx 
        mov        -8(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        8(%ebp), %ebx 
        mov        -12(%ebp), %eax 
        mov        %eax, (%ebx) 
        xorl       %eax, %eax 
xcompileELF__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $36
End_compileELF_4277:
  .size compileELF,End_compileELF_4277-compileELF



        .type      compileMACHO,@function

compileMACHO:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $36, %esp 
        pushl      %ebx 
        mov        16(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -4(%ebp) 
        mov        12(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -8(%ebp) 
        mov        8(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -12(%ebp) 
        pushl      28(%ebp) 
        pushl      24(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       lexer
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        pushl      -12(%ebp) 
        pushl      20(%ebp) 
        pushl      $3 
        call       optimizeDisps
        pushl      36(%ebp) 
        pushl      32(%ebp) 
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        pushl      -12(%ebp) 
        call       generateMacho__hla_4225
        mov        16(%ebp), %ebx 
        mov        -4(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        12(%ebp), %ebx 
        mov        -8(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        8(%ebp), %ebx 
        mov        -12(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        $1, %eax 
xcompileMACHO__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $32
End_compileMACHO_4284:
  .size compileMACHO,End_compileMACHO_4284-compileMACHO



        .type      compile__hla_4285,@function

compile__hla_4285:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $28, %esp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        mov        %esp, saveESP__hla_3345 
        mov        ExceptionPtr__hla_, %eax 
        mov        %eax, SaveSEHPointer__hla_3344 
        call       BuildExcepts__hla_
        pushl      %ebp 
        addl       $-28, (%esp) 
        call       CONV_GETDELIMITERS
        pushl      $0 
        pushl      $0 
        pushl      $11008 
        pushl      $0 
        pushl      %ebp 
        addl       $-28, (%esp) 
        call       CSET_SETUNION
        pushl      -16(%ebp) 
        pushl      -20(%ebp) 
        pushl      -24(%ebp) 
        pushl      -28(%ebp) 
        call       CONV_SETDELIMITERS
        cmpb       $0, 8(%ebp) 
        je         false__hla_4288
        pushl      $str__hla_4289 
        call       STDOUT_PUTS
        pushl      40(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4290 
        call       STDOUT_PUTS
        pushl      36(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4291 
        call       STDOUT_PUTS
false__hla_4288:
        pushl      $exception__hla_4293 
        pushl      %ebp 
        mov        ExceptionPtr__hla_, %ebp 
        pushl      8(%ebp) 
        mov        4(%esp), %ebp 
        pushl      $244115826 
        pushl      ExceptionPtr__hla_ 
        mov        %esp, ExceptionPtr__hla_ 
        pushl      $65536 
        movl       $symbolTable, %esi 
        call       TABLE_CREATE
        pushl      $8192 
        movl       $equatesTable, %esi 
        call       TABLE_CREATE
        movzbl     24(%ebp), %eax 
        cmpl       $3, %eax 
        jg         default__hla_4294
        jmp *      jmpTbl__hla_4294(,%eax,4) 
case__hla_4295:
        pushl      40(%ebp) 
        pushl      36(%ebp) 
        pushl      32(%ebp) 
        pushl      28(%ebp) 
        pushl      8(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       compileCOFF
        jmp        endswitch__hla_4294
case__hla_4296:
        pushl      40(%ebp) 
        pushl      36(%ebp) 
        pushl      32(%ebp) 
        pushl      28(%ebp) 
        pushl      $1 
        pushl      8(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       compileELF
        jmp        endswitch__hla_4294
case__hla_4297:
        pushl      40(%ebp) 
        pushl      36(%ebp) 
        pushl      32(%ebp) 
        pushl      28(%ebp) 
        pushl      $2 
        pushl      8(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       compileELF
        jmp        endswitch__hla_4294
case__hla_4298:
        pushl      40(%ebp) 
        pushl      36(%ebp) 
        pushl      32(%ebp) 
        pushl      28(%ebp) 
        pushl      8(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       compileMACHO
        jmp        endswitch__hla_4294
default__hla_4294:
        pushl      $str__hla_4299 
        call       STDERR_PUTS
        mov        $1, %eax 
endswitch__hla_4294:
        mov        ExceptionPtr__hla_, %esp 
        popl       ExceptionPtr__hla_ 
        addl       $8, %esp 
        popl       %ebp 
        addl       $4, %esp 
        jmp        endtry__hla_4292
exception__hla_4293:
        call       EX_PRINTEXCEPTIONERROR
        mov        $0, %eax 
endtry__hla_4292:
        cmpb       $0, verboseDebug__hla_3331 
        je         false__hla_4300
        call       STDOUT_NEWLN
        pushl      $str__hla_4301 
        call       STDOUT_PUTS
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4302 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        pushl      8(%edx) 
        pushl      $-24 
        pushl      $32 
        call       STDOUT_PUTSSIZE
        pushl      $str__hla_4113 
        call       STDOUT_PUTS
        mov        4(%edx), %edx 
        mov        21(%edx), %ah 
        testb      $1, %ah 
        mov        $32, %al 
        jz         false__hla_4303
        mov        $88, %al 
false__hla_4303:
        pushl      %eax 
        call       STDOUT_PUTC
        testb      $2, %ah 
        mov        $32, %al 
        jz         false__hla_4304
        mov        $80, %al 
false__hla_4304:
        pushl      %eax 
        call       STDOUT_PUTC
        testb      $4, %ah 
        mov        $32, %al 
        jz         false__hla_4305
        mov        $82, %al 
false__hla_4305:
        pushl      %eax 
        call       STDOUT_PUTC
        testb      $8, %ah 
        mov        $32, %al 
        jz         false__hla_4306
        mov        $68, %al 
false__hla_4306:
        pushl      %eax 
        call       STDOUT_PUTC
        pushl      $str__hla_4307 
        call       STDOUT_PUTS
        pushl      12(%edx) 
        call       STDOUT_PUTD
        pushl      $str__hla_4308 
        call       STDOUT_PUTS
        pushl      $0 
        pushl      %eax 
        mov        20(%edx), %al 
        mov        %al, 4(%esp) 
        popl       %eax 
        call       STDOUT_PUTU8
        pushl      $str__hla_4309 
        call       STDOUT_PUTS
        pushl      $0 
        pushl      %eax 
        mov        8(%edx), %al 
        mov        %al, 4(%esp) 
        popl       %eax 
        call       STDOUT_PUTU8
        call       STDOUT_NEWLN
continue__hla_4302:
        popl       %ebp 
        ret        $4
exitfor__hla_4302:

        call       STDOUT_NEWLN
false__hla_4300:
        jmp        Exit_compile_hlabe__hla_4310

QuitMain__hla_:
        mov        $1, %eax 

Exit_compile_hlabe__hla_4310:
        mov        saveESP__hla_3345, %esp 
        pushl      %eax 
        mov        SaveSEHPointer__hla_3344, %eax 
        mov        %eax, ExceptionPtr__hla_ 
        mov        20(%ebp), %ecx 
        mov        -4(%ebp), %edx 
        mov        %edx, (%ecx) 
        mov        16(%ebp), %ecx 
        mov        -8(%ebp), %edx 
        mov        %edx, (%ecx) 
        mov        12(%ebp), %ecx 
        mov        -12(%ebp), %edx 
        mov        %edx, (%ecx) 
        popl       %eax 
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
xcompile__hla_4285__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $36
End_compile__hla_4285_4313:
  .size compile__hla_4285,End_compile__hla_4285_4313-compile__hla_4285



        .type      _hlabe_compile,@function

_hlabe_compile:
End__hlabe_compile_4314:
  .size _hlabe_compile,End__hlabe_compile_4314-_hlabe_compile



        .type      hlabe_compile,@function

hlabe_compile:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $2088, %esp 
        mov        %ebx, -4(%ebp) 
        mov        %ecx, -8(%ebp) 
        mov        %edx, -12(%ebp) 
        mov        %esi, -16(%ebp) 
        mov        %edi, -20(%ebp) 
        pushl      %ebp 
        addl       $-1064, (%esp) 
        pushl      $1024 
        call       STR_INIT
        mov        %eax, -24(%ebp) 
        pushl      %ebp 
        addl       $-2088, (%esp) 
        pushl      $1024 
        call       STR_INIT
        mov        %eax, -28(%ebp) 
        pushl      8(%ebp) 
        pushl      -24(%ebp) 
        call       STR_CPYZ
        pushl      12(%ebp) 
        pushl      -28(%ebp) 
        call       STR_CPYZ
        pushl      -24(%ebp) 
        pushl      -28(%ebp) 
        pushl      16(%ebp) 
        pushl      20(%ebp) 
        pushl      24(%ebp) 
        pushl      %ebp 
        addl       $-32, (%esp) 
        pushl      %ebp 
        addl       $-36, (%esp) 
        pushl      %ebp 
        addl       $-40, (%esp) 
        pushl      28(%ebp) 
        call       compile__hla_4285
        mov        -4(%ebp), %ebx 
        mov        -8(%ebp), %ecx 
        mov        -12(%ebp), %edx 
        mov        -16(%ebp), %esi 
        mov        -20(%ebp), %edi 
xhlabe_compile__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
End_hlabe_compile_4319:
  .size hlabe_compile,End_hlabe_compile_4319-hlabe_compile









  .text


        .balign    (4)
len__hla_3357 :.long      0x2
        .long      0x2
str__hla_3357:

 .ascii ", "
 .byte 0

 .byte 0

        .balign    (4)
len__hla_3399 :.long      0x2e
        .long      0x2e
str__hla_3399:

 .ascii "Attempted to scan beyond the end of the file"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0

        .balign    (4)
len__hla_3423 :.long      0x13
        .long      0x13
str__hla_3423:

 .ascii "Unknown statement: "
 .byte 0


        .balign    (4)
len__hla_3445 :.long      0x23
        .long      0x23
str__hla_3445:

 .ascii "Expected ')' in expression at line "
 .byte 0


        .balign    (4)
len__hla_3446 :.long      0x25
        .long      0x25
str__hla_3446:

 .ascii "Unexpected character in expression: '"
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_3447 :.long      0xa
        .long      0xa
str__hla_3447:

 .ascii "' at line "
 .byte 0

 .byte 0
jmpTbl__hla_3438:
        .long      (case__hla_3439+0)
        .long      (default__hla_3438+0)
        .long      (default__hla_3438+0)
        .long      (default__hla_3438+0)
        .long      (case__hla_3443+0)
        .long      (default__hla_3438+0)
        .long      (default__hla_3438+0)
        .long      (default__hla_3438+0)
        .long      (default__hla_3438+0)
        .long      (default__hla_3438+0)
        .long      (default__hla_3438+0)
        .long      (default__hla_3438+0)
        .long      (case__hla_3440+0)
        .long      (case__hla_3440+0)
        .long      (case__hla_3440+0)
        .long      (case__hla_3440+0)
        .long      (case__hla_3440+0)
        .long      (case__hla_3440+0)
        .long      (case__hla_3440+0)
        .long      (case__hla_3440+0)
        .long      (case__hla_3440+0)
        .long      (case__hla_3440+0)
        .long      (default__hla_3438+0)
        .long      (default__hla_3438+0)
        .long      (default__hla_3438+0)
        .long      (default__hla_3438+0)
        .long      (default__hla_3438+0)
        .long      (default__hla_3438+0)
        .long      (default__hla_3438+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (default__hla_3438+0)
        .long      (default__hla_3438+0)
        .long      (default__hla_3438+0)
        .long      (default__hla_3438+0)
        .long      (case__hla_3441+0)
        .long      (default__hla_3438+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)
        .long      (case__hla_3441+0)

        .balign    (4)
len__hla_3458 :.long      0x23
        .long      0x23
str__hla_3458:

 .ascii "Illegal relocatable object at line "
 .byte 0


        .balign    (4)
len__hla_3470 :.long      0x34
        .long      0x34
str__hla_3470:

 .ascii "Expression cannot contain relocatable items at line "
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_3484 :.long      0x19
        .long      0x19
str__hla_3484:

 .ascii ".b operand out of range"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_3495 :.long      0x19
        .long      0x19
str__hla_3495:

 .ascii ".w operand out of range"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_3537 :.long      0x1a
        .long      0x1a
str__hla_3537:

 .ascii "TByte value out of range"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0

        .balign    (4)
len__hla_3590 :.long      0x1a
        .long      0x1a
str__hla_3590:

 .ascii "Filename too long at line "
 .byte 0

 .byte 0

        .balign    (4)
len__hla_3626 :.long      0x1c
        .long      0x1c
str__hla_3626:

 .ascii "ecx <> NULL hlabe.hla (1977)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_3635 :.long      0x1c
        .long      0x1c
str__hla_3635:

 .ascii "ecx <> NULL hlabe.hla (2044)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_3641 :.long      0x15
        .long      0x15
str__hla_3641:

 .ascii "Syntax error at line "
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_3642 :.long      0x13
        .long      0x13
str__hla_3642:

 .ascii ", expected at ','"
 .byte 0xd
 .byte 0xa
 .byte 0


        .balign    (4)
len__hla_3643 :.long      0x2e
        .long      0x2e
str__hla_3643:

 .ascii "Equate attempted to redefine a symbol at line "
 .byte 0

 .byte 0

        .balign    (4)
len__hla_3646 :.long      0x2f
        .long      0x2f
str__hla_3646:

 .ascii "End Function symbol must be predefined at line "
 .byte 0


        .balign    (4)
len__hla_3651 :.long      0x1c
        .long      0x1c
str__hla_3651:

 .ascii "ecx <> NULL hlabe.hla (2168)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_3657 :.long      0x2c
        .long      0x2c
str__hla_3657:

 .ascii "Public symbol cannot also be extern at line "
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_3662 :.long      0x1c
        .long      0x1c
str__hla_3662:

 .ascii "ecx <> NULL hlabe.hla (2259)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_3671 :.long      0x1c
        .long      0x1c
str__hla_3671:

 .ascii "ecx <> NULL hlabe.hla (2351)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_3677 :.long      0x2a
        .long      0x2a
str__hla_3677:

 .ascii ".ub expected a ',' -- Syntax error at line"
 .byte 0

 .byte 0

        .balign    (4)
len__hla_3680 :.long      0x2b
        .long      0x2b
str__hla_3680:

 .ascii ".uw expected a ',' -- Syntax error at line "
 .byte 0


        .balign    (4)
len__hla_3683 :.long      0x2b
        .long      0x2b
str__hla_3683:

 .ascii ".ud expected a ',' -- Syntax error at line "
 .byte 0


        .balign    (4)
len__hla_3689 :.long      0x1c
        .long      0x1c
str__hla_3689:

 .ascii "ecx <> NULL hlabe.hla (2542)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_3695 :.long      0x11
        .long      0x11
str__hla_3695:

 .ascii "External symbol '"
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_3696 :.long      0x32
        .long      0x32
str__hla_3696:

 .ascii "' is already defined. Error in HLABE code at line "
 .byte 0

 .byte 0
jmpTbl__hla_3620:
        .long      (case__hla_3621+0)
        .long      (case__hla_3622+0)
        .long      (case__hla_3629+0)
        .long      (case__hla_3630+0)
        .long      (case__hla_3638+0)
        .long      (case__hla_3644+0)
        .long      (default__hla_3620+0)
        .long      (default__hla_3620+0)
        .long      (default__hla_3620+0)
        .long      (default__hla_3620+0)
        .long      (default__hla_3620+0)
        .long      (case__hla_3647+0)
        .long      (default__hla_3620+0)
        .long      (default__hla_3620+0)
        .long      (default__hla_3620+0)
        .long      (case__hla_3654+0)
        .long      (case__hla_3658+0)
        .long      (case__hla_3665+0)
        .long      (case__hla_3666+0)
        .long      (case__hla_3667+0)
        .long      (case__hla_3674+0)
        .long      (case__hla_3684+0)
        .long      (case__hla_3685+0)
        .long      (case__hla_3692+0)
        .long      (case__hla_3629+0)
        .long      (case__hla_3698+0)

        .balign    (4)
len__hla_3702 :.long      0x7
        .long      0x7
str__hla_3702:

 .ascii "Symbol "
 .byte 0


        .balign    (4)
len__hla_3703 :.long      0x23
        .long      0x23
str__hla_3703:

 .ascii " is already defined. Error at line "
 .byte 0


        .balign    (4)
len__hla_3807 :.long      0x1c
        .long      0x1c
str__hla_3807:

 .ascii "esi <> NULL hlabe.hla (3528)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_3837 :.long      0x40
        .long      0x40
str__hla_3837:

 .ascii "Error: Unexpected bss directive encountered in non-bss section"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_3842 :.long      0x42
        .long      0x42
str__hla_3842:

 .ascii "Error: Unexpected code directive encountered in non-code section"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0

        .balign    (4)
len__hla_3845 :.long      0x42
        .long      0x42
str__hla_3845:

 .ascii "Error: Unexpected data directive encountered in non-data section"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0

        .balign    (4)
len__hla_3861 :.long      0x23
        .long      0x23
str__hla_3861:

 .ascii "Object code type is not supported"
 .byte 0xd
 .byte 0xa
 .byte 0


        .balign    (4)
len__hla_3898 :.long      0x23
        .long      0x23
str__hla_3898:

 .ascii "HLABE Internal error (Bad section):"
 .byte 0


        .balign    (4)
len__hla_3901 :.long      0x24
        .long      0x24
str__hla_3901:

 .ascii "Internal error: illegal token value:"
 .byte 0

 .byte 0
 .byte 0
 .byte 0
jmpTbl__hla_3822:
        .long      (case__hla_3823+0)
        .long      (case__hla_3824+0)
        .long      (case__hla_3838+0)
        .long      (case__hla_3823+0)
        .long      (case__hla_3823+0)
        .long      (case__hla_3886+0)
        .long      (case__hla_3899+0)
        .long      (case__hla_3846+0)
        .long      (case__hla_3846+0)
        .long      (case__hla_3846+0)
        .long      (case__hla_3840+0)
        .long      (default__hla_3822+0)
        .long      (case__hla_3843+0)
        .long      (case__hla_3835+0)
        .long      (case__hla_3850+0)
        .long      (case__hla_3851+0)
        .long      (case__hla_3852+0)
        .long      (case__hla_3875+0)
        .long      (case__hla_3862+0)
        .long      (case__hla_3823+0)
        .long      (case__hla_3823+0)
        .long      (case__hla_3823+0)

        .balign    (4)
len__hla_3931 :.long      0x31
        .long      0x31
str__hla_3931:

 .ascii "Instruction cannot reference an external symbol ("
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_3932 :.long      0x3
        .long      0x3
str__hla_3932:

 .ascii ")"
 .byte 0xd
 .byte 0xa
 .byte 0

jmpTbl__hla_3917:
        .long      (case__hla_3918+0)
        .long      (case__hla_3922+0)
        .long      (case__hla_3923+0)
        .long      (case__hla_3924+0)
        .long      (case__hla_3918+0)
        .long      (case__hla_3938+0)
        .long      (case__hla_3925+0)
        .long      (case__hla_3926+0)
        .long      (case__hla_3926+0)
        .long      (case__hla_3926+0)
        .long      (case__hla_3919+0)
        .long      (default__hla_3917+0)
        .long      (case__hla_3920+0)
        .long      (case__hla_3921+0)
        .long      (case__hla_3927+0)
        .long      (case__hla_3936+0)
        .long      (case__hla_3933+0)
        .long      (case__hla_3937+0)
        .long      (case__hla_3935+0)
        .long      (case__hla_3918+0)
        .long      (case__hla_3918+0)
        .long      (case__hla_3918+0)

        .balign    (4)
len__hla_3958 :.long      0x11
        .long      0x11
str__hla_3958:

 .ascii "Undefined symbol:"
 .byte 0

 .byte 0
 .byte 0
jmpTbl__hla_3974:
        .long      (case__hla_3975+0)
        .long      (case__hla_3981+0)
        .long      (case__hla_3983+0)
        .long      (case__hla_3975+0)
        .long      (case__hla_3975+0)
        .long      (case__hla_3996+0)
        .long      (case__hla_3984+0)
        .long      (case__hla_3985+0)
        .long      (case__hla_3985+0)
        .long      (case__hla_3985+0)
        .long      (case__hla_3976+0)
        .long      (default__hla_3974+0)
        .long      (case__hla_3977+0)
        .long      (case__hla_3978+0)
        .long      (case__hla_3986+0)
        .long      (case__hla_3994+0)
        .long      (case__hla_3987+0)
        .long      (case__hla_3995+0)
        .long      (case__hla_3991+0)
        .long      (case__hla_3975+0)
        .long      (case__hla_3975+0)
        .long      (case__hla_3979+0)

        .balign    (4)
len__hla_4028 :.long      0x8
        .long      0x8
str__hla_4028:

 .ascii "Symbol '"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4029 :.long      0x10
        .long      0x10
str__hla_4029:

 .ascii "' is undefined"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4033 :.long      0x2f
        .long      0x2f
str__hla_4033:

 .ascii "Branch target is out of range. "
 .byte 0xd
 .byte 0xa

 .ascii "(displacement="
 .byte 0


        .balign    (4)
len__hla_4034 :.long      0x28
        .long      0x28
str__hla_4034:

 .ascii " and must be in the range -128..+127)."
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0
jmpTbl__hla_4023:
        .long      (case__hla_4024+0)
        .long      (case__hla_4024+0)
        .long      (case__hla_4024+0)
        .long      (case__hla_4026+0)
        .long      (case__hla_4025+0)
        .long      (case__hla_4058+0)
        .long      (case__hla_4024+0)
        .long      (case__hla_4024+0)
        .long      (case__hla_4024+0)
        .long      (case__hla_4024+0)
        .long      (case__hla_4024+0)
        .long      (default__hla_4023+0)
        .long      (case__hla_4024+0)
        .long      (case__hla_4024+0)
        .long      (case__hla_4030+0)
        .long      (case__hla_4035+0)
        .long      (case__hla_4038+0)
        .long      (case__hla_4051+0)
        .long      (case__hla_4043+0)
        .long      (case__hla_4024+0)
        .long      (case__hla_4024+0)
        .long      (case__hla_4024+0)

        .balign    (4)
len__hla_4065 :.long      0x2d
        .long      0x2d
str__hla_4065:

 .ascii "Internal error (relocations in BSS section)"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_4070 :.long      0x1c
        .long      0x1c
str__hla_4070:

 .ascii "ebx <> NULL hlabe.hla (5565)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4073 :.long      0x12
        .long      0x12
str__hla_4073:

 .ascii "Undefined symbol: "
 .byte 0

 .byte 0

        .balign    (4)
len__hla_4080 :.long      0x10
        .long      0x10
str__hla_4080:

 .ascii "optimizeDisps:"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4082 :.long      0x5e
        .long      0x5e
str__hla_4082:

 .ascii "Could not optimize (small->large) in 16,384 passes."
 .byte 0xd
 .byte 0xa

 .ascii "Reverting to large->small optimization."
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0

        .balign    (4)
len__hla_4084 :.long      0x15
        .long      0x15
str__hla_4084:

 .ascii "Optimization passes: "
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_4085 :.long      0x8
        .long      0x8
str__hla_4085:

 .ascii "+16386"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4087 :.long      0x4
        .long      0x4
str__hla_4087:

 .ascii "+2"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4111 :.long      0x4
        .long      0x4
str__hla_4111:
 .byte 0xd
 .byte 0xa
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4113 :.long      0x2
        .long      0x2
str__hla_4113:

 .ascii ": "
 .byte 0

 .byte 0

        .balign    (4)
len__hla_4114 :.long      0x3
        .long      0x3
str__hla_4114:

 .ascii ", '"
 .byte 0


        .balign    (4)
len__hla_4115 :.long      0x3
        .long      0x3
str__hla_4115:

 .ascii "', "
 .byte 0


        .balign    (4)
len__hla_4118 :.long      0x17
        .long      0x17
str__hla_4118:

 .ascii "IMAGE_REL_I386_ABSOLUTE"
 .byte 0


        .balign    (4)
len__hla_4120 :.long      0x14
        .long      0x14
str__hla_4120:

 .ascii "IMAGE_REL_I386_DIR32"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4122 :.long      0x16
        .long      0x16
str__hla_4122:

 .ascii "IMAGE_REL_I386_DIR32NB"
 .byte 0

 .byte 0

        .balign    (4)
len__hla_4124 :.long      0x14
        .long      0x14
str__hla_4124:

 .ascii "IMAGE_REL_I386_REL32"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4125 :.long      0x18
        .long      0x18
str__hla_4125:

 .ascii "???? relocation type = $"
 .byte 0

 .byte 0
 .byte 0
 .byte 0
jmpTbl__hla_4116:
        .long      (case__hla_4117+0)
        .long      (default__hla_4116+0)
        .long      (default__hla_4116+0)
        .long      (default__hla_4116+0)
        .long      (default__hla_4116+0)
        .long      (default__hla_4116+0)
        .long      (case__hla_4119+0)
        .long      (case__hla_4121+0)
        .long      (default__hla_4116+0)
        .long      (default__hla_4116+0)
        .long      (default__hla_4116+0)
        .long      (default__hla_4116+0)
        .long      (default__hla_4116+0)
        .long      (default__hla_4116+0)
        .long      (default__hla_4116+0)
        .long      (default__hla_4116+0)
        .long      (default__hla_4116+0)
        .long      (default__hla_4116+0)
        .long      (default__hla_4116+0)
        .long      (default__hla_4116+0)
        .long      (case__hla_4123+0)

        .balign    (4)
len__hla_4132 :.long      0x20
        .long      0x20
str__hla_4132:

 .ascii "generateCOFF:"
 .byte 0xd
 .byte 0xa

 .ascii "Input filename:  "
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4133 :.long      0x13
        .long      0x13
str__hla_4133:
 .byte 0xd
 .byte 0xa

 .ascii "Output filename: "
 .byte 0

divisor__hla_4134: .long 18

        .balign    (4)
len__hla_4136 :.long      0x5
        .long      0x5
str__hla_4136:

 .ascii ".text"
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_4138 :.long      0x5
        .long      0x5
str__hla_4138:

 .ascii ".data"
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_4139 :.long      0x4
        .long      0x4
str__hla_4139:

 .ascii ".bss"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4146 :.long      0x1c
        .long      0x1c
str__hla_4146:
 .byte 0xd
 .byte 0xa

 .ascii "COFF Symbol table (#syms: "
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4147 :.long      0x5
        .long      0x5
str__hla_4147:

 .ascii ")"
 .byte 0xd
 .byte 0xa
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_4151 :.long      0x2
        .long      0x2
str__hla_4151:

 .ascii " :"
 .byte 0

 .byte 0

        .balign    (4)
len__hla_4154 :.long      0x6
        .long      0x6
str__hla_4154:

 .ascii "static"
 .byte 0

 .byte 0

        .balign    (4)
len__hla_4157 :.long      0x8
        .long      0x8
str__hla_4157:

 .ascii "external"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4158 :.long      0x6
        .long      0x6
str__hla_4158:

 .ascii "public"
 .byte 0

 .byte 0

        .balign    (4)
len__hla_4159 :.long      0x4
        .long      0x4
str__hla_4159:

 .ascii "????"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4160 :.long      0x19
        .long      0x19
str__hla_4160:

 .ascii "Code Section Relocations:"
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_4161 :.long      0x19
        .long      0x19
str__hla_4161:

 .ascii "Data Section Relocations:"
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_4180 :.long      0x1f
        .long      0x1f
str__hla_4180:

 .ascii "generateELF:"
 .byte 0xd
 .byte 0xa

 .ascii "Input filename:  "
 .byte 0


        .balign    (4)
len__hla_4181 :.long      0x9
        .long      0x9
str__hla_4181:

 .ascii ".shstrtab"
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_4182 :.long      0x7
        .long      0x7
str__hla_4182:

 .ascii ".symtab"
 .byte 0


        .balign    (4)
len__hla_4183 :.long      0x7
        .long      0x7
str__hla_4183:

 .ascii ".strtab"
 .byte 0


        .balign    (4)
len__hla_4184 :.long      0x9
        .long      0x9
str__hla_4184:

 .ascii ".rel.text"
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_4185 :.long      0x9
        .long      0x9
str__hla_4185:

 .ascii ".rel.data"
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_4211 :.long      0x1f
        .long      0x1f
str__hla_4211:

 .ascii "Unknown ELF format specified!"
 .byte 0xd
 .byte 0xa
 .byte 0


        .balign    (4)
len__hla_4229 :.long      0x21
        .long      0x21
str__hla_4229:

 .ascii "generateMacho:"
 .byte 0xd
 .byte 0xa

 .ascii "Input filename:  "
 .byte 0

 .byte 0
 .byte 0

        .balign    (4)
len__hla_4289 :.long      0x48
        .long      0x48
str__hla_4289:

 .ascii "------------"
 .byte 0xd
 .byte 0xa

 .ascii "HLA Back Engine Object code formatter"
 .byte 0xd
 .byte 0xa
 .byte 0xd
 .byte 0xa

 .ascii "HLABE compiling '"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .balign    (4)
len__hla_4290 :.long      0x6
        .long      0x6
str__hla_4290:

 .ascii "' to '"
 .byte 0

 .byte 0

        .balign    (4)
len__hla_4291 :.long      0x3
        .long      0x3
str__hla_4291:

 .ascii "'"
 .byte 0xd
 .byte 0xa
 .byte 0


        .balign    (4)
len__hla_4299 :.long      0x38
        .long      0x38
str__hla_4299:

 .ascii "Illegal object-code format specified -- compile failed"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0
jmpTbl__hla_4294:
        .long      (case__hla_4295+0)
        .long      (case__hla_4296+0)
        .long      (case__hla_4297+0)
        .long      (case__hla_4298+0)

        .balign    (4)
len__hla_4301 :.long      0x12
        .long      0x12
str__hla_4301:

 .ascii "Symbol table: "
 .byte 0xd
 .byte 0xa
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0

        .balign    (4)
len__hla_4307 :.long      0x3
        .long      0x3
str__hla_4307:

 .ascii "  $"
 .byte 0


        .balign    (4)
len__hla_4308 :.long      0x6
        .long      0x6
str__hla_4308:

 .ascii ", sec:"
 .byte 0

 .byte 0

        .balign    (4)
len__hla_4309 :.long      0x8
        .long      0x8
str__hla_4309:

 .ascii ", index:"
 .byte 0

 .byte 0
 .byte 0
 .byte 0
idSet__hla_3406 :.byte  0x0,0x0,0x0,0x0,0x10,0x40,0xff,0x83,0xff,0xff,0xff,0x87,0xfe,0xff,0xff,0x7
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
filenameDelims__hla_3584 :.byte  0xff,0xff,0xff,0xff,0x1,0x10,0x0,0x8,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
_0e28_msg___hla_3625 :.long  str__hla_3626
_0e31_msg___hla_3634 :.long  str__hla_3635
_0e41_msg___hla_3650 :.long  str__hla_3651
_0e4c_msg___hla_3661 :.long  str__hla_3662
_0e55_msg___hla_3670 :.long  str__hla_3671
_0e67_msg___hla_3688 :.long  str__hla_3689
_0edd_msg___hla_3806 :.long  str__hla_3807
_0fe4_msg___hla_4069 :.long  str__hla_4070




  .data

        .extern    ExceptionPtr__hla_
        .extern    _VMT_table_t___hla_
        .extern    AssertionStr
        .balign    (4)
        .balign    (4)
COFFsyms__hla_3313 :.space     4
numCOFFsyms__hla_3314 :.space     4
coffSymSize__hla_3315 :.space     4
ELFsyms__hla_3316 :.space     4
numELFsyms__hla_3317 :.space     4
elfSymSize__hla_3318 :.space     4
MachoSyms__hla_3319 :.space     4
MachoSymSize__hla_3320 :.space     4
numMachoSyms__hla_3321 :.space     4
stringTable__hla_3322 :.space     4
strTblOffset__hla_3323 :.space     4
strTblSize__hla_3324 :.space     4
codeSize :.space     4
codeStart__hla_3325 :.space     4
codeEnd__hla_3326 :.space     4
numCodeRelocs :.space     4
dataSize :.space     4
dataStart__hla_3327 :.space     4
dataEnd__hla_3328 :.space     4
numDataRelocs :.space     4
bssSize :.space     4
bssStart__hla_3329 :.space     4
bssEnd__hla_3330 :.space     4
symbolTable :.space     160
equatesTable :.space     160
currentSection :.byte  0x1
verboseDebug__hla_3331 :.byte  0x0
        .balign    (4)
MainPgmVMT__hla_3342 :.long      QuitMain__hla_
MainPgmCoroutine__hla_3343:
        .long      MainPgmVMT__hla_3342
        .long      0x0
        .long      0x0
SaveSEHPointer__hla_3344 :.long  0x0
        .long      0x0
        .long      0x0
saveESP__hla_3345 :.space     4
lineNumber__hla_3363 :.long  0x1
tknListTail__hla_3364 :.space     4
lastTailPtr__hla_3365 :.space     4
codeListTail__hla_3366 :.space     4
dataListTail__hla_3367 :.space     4
bssListTail__hla_3368 :.space     4
end_source__hla_3369 :.space     4
start_stmt__hla_3370 :.space     4
CodeAuxSection__hla_4094:
        .long      0x0
        .word      0x0
        .word      0x0
        .long      0x0
        .long      0x1
        .byte      0x0
DataAuxSection__hla_4095:
        .long      0x0
        .word      0x0
        .word      0x0
        .long      0x0
        .long      0x2
        .byte      0x0
BssAuxSection__hla_4096:
        .long      0x0
        .word      0x0
        .word      0x0
        .long      0x0
        .long      0x3
        .byte      0x0
NULLsection__hla_4168:
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
shstrtabSection__hla_4169:
        .long      0x1
        .long      0x3
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x1
        .long      0x0
symtabSection__hla_4170:
        .long      0x0
        .long      0x2
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x3
        .long      0x0
        .long      0x4
        .long      0x10
strtabSection__hla_4171:
        .long      0x0
        .long      0x3
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x1
        .long      0x0
textSection__hla_4172:
        .long      0x0
        .long      0x1
        .long      0x6
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x4
        .long      0x0
dataSection__hla_4173:
        .long      0x0
        .long      0x1
        .long      0x3
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x4
        .long      0x0
bssSection__hla_4174:
        .long      0x0
        .long      0x8
        .long      0x3
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x4
        .long      0x0
relTextSection__hla_4175:
        .long      0x0
        .long      0x9
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x2
        .long      0x4
        .long      0x4
        .long      0x8
relDataSection__hla_4176:
        .long      0x0
        .long      0x9
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x2
        .long      0x5
        .long      0x4
        .long      0x8





