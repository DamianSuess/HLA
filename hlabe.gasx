// Assembly code emitted by HLA compiler
// Version 2.7 build 3230 (prototype)
// HLA compiler written by Randall Hyde
// GAS compatible output


        .globl     numCodeRelocs
        .globl     dataSize
        .globl     QuitMain__hla_
        .globl     numDataRelocs
        .globl     _hlabe_compile
        .globl     compileMACHO
        .globl     DfltExHndlr__hla_
        .globl     bssSize
        .globl     compileELF
        .globl     symbolTable
        .globl     codeSize
        .globl     hlabe_compile
        .globl     currentSection
        .globl     lexer
        .globl     equatesTable
        .globl     compileCOFF
        .globl     printLineNumberChain
        .globl     optimizeDisps
        .globl     InstallSignals__hla_


  .text


        .globl    MEM_FREE
        .globl    STR_CPY
        .globl    STR_INIT
        .globl    STR_CPYZ
        .globl    EX_PRINTEXCEPTIONERROR
        .globl    MEM_ALLOC1
        .globl    FILEIO_OPENNEW
        .globl    STR_A_CPY
        .globl    STDOUT_PUTSSIZE
        .globl    CONV_GETDELIMITERS
        .globl    CONV_SETDELIMITERS
        .globl    FILEIO_CLOSE
        .globl    STDERR_PUTI32
        .globl    MEM_ZALLOC
        .globl    STR_LENGTH
        .globl    STDERR_PUTS
        .globl    STDERR_PUTC
        .globl    _HLA_GET_EXCEPTIONPTREBP
        .globl    STDERR_PUTU32
        .globl    STDOUT_PUTU32
        .globl    _HLA_PUSH_EXCEPTIONPTR
        .globl    FILEIO_WRITE
        .globl    STDERR_NEWLN
        .globl    STDOUT_NEWLN
        .globl    DefaultExceptionHandler__hla_
        .globl    abstract__hla_
        .globl    STDOUT_PUTZS
        .globl    CONV_ATOH128
        .globl    STR_A_BUFTOSTR2
        .globl    _HLA_SET_EXCEPTIONPTR
        .globl    STDERR_PUTU8
        .globl    STDOUT_PUTU8
        .globl    ZSTR_CPY
        .globl    CONV_ATOU128
        .globl    TABLE_GETNODE
        .globl    TIME_UTCDATETIME
        .globl    MEM_REALLOC1
        .globl    BuildExcepts__hla_
        .globl    CONV_ATOH80
        .globl    CONV_ATOH64
        .globl    TIME_TOUNIXTIME
        .globl    CONV_ATOH32
        .globl    STDOUT_PUTS
        .globl    STDOUT_PUTD
        .globl    STDOUT_PUTC
        .globl    CONV_ATOU64
        .globl    CONV_ATOU32
        .globl    CSET_SETUNION
        .globl    Raise__hla_
        .globl    TABLE_CREATE
        .globl    shortDfltExcept__hla_
        .globl    TABLE_LOOKUP






  .text

DfltExHndlr__hla_:
        pushl      %ebp 
        movl       %esp, %ebp 
        jmp        DefaultExceptionHandler__hla_
xDfltExHndlr__hla___hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
InstallSignals__hla_:
        pushl      %ebp 
        movl       %esp, %ebp 
xInstallSignals__hla___hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
freeTableRecord__hla_3344:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      4(%ebx) 
        call       MEM_FREE
xfreeTableRecord__hla_3344__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
printLineNumberChain:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        mov        25(%ebx), %ebx 
        jmp        continue__hla_3352
while__hla_3352:
        pushl      $9 
        call       STDERR_PUTC
        pushl      4(%ebx) 
        call       STDERR_PUTS
        pushl      $58 
        call       STDERR_PUTC
        pushl      8(%ebx) 
        call       STDERR_PUTU32
        mov        (%ebx), %ebx 
        cmpl       $0, %ebx 
        je         false__hla_3354
        pushl      $str__hla_3355 
        call       STDERR_PUTS
false__hla_3354:
continue__hla_3352:
        cmpl       $0, %ebx 
        jne        while__hla_3352
exitloop__hla_3352:

        call       STDERR_NEWLN
        popl       %ebx 
xprintLineNumberChain__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
skipToEoln__hla_3371:
        jmp        continue__hla_3374
while__hla_3374:
        incl       %ebx 
continue__hla_3374:
        cmpl       end_source__hla_3367, %ebx 
        jnb        L3376__hla_
        cmpb       $10, (%ebx) 
        jne        while__hla_3374
L3376__hla_:
exitloop__hla_3374:

        incl       %ebx 
        incl       lineNumber__hla_3361 
        ret
skipSpaces__hla_3382:
        decl       %ebx 

skipSpcs__hla_3385:
        incl       %ebx 
        cmpl       end_source__hla_3367, %ebx 
        jae        skippedSpaces__hla_3386
        mov        (%ebx), %al 
        cmpb       $32, %al 
        je         skipSpcs__hla_3385
        cmpb       $9, %al 
        je         skipSpcs__hla_3385
        cmpb       $13, %al 
        je         skipSpcs__hla_3385

skippedSpaces__hla_3386:
        ret
skipSpaces2__hla_3392:
        decl       %ebx 

skipSpcs__hla_3395:
        incl       %ebx 
        cmpl       end_source__hla_3367, %ebx 
        jae        skippedSpaces__hla_3396
        mov        (%ebx), %al 
        cmpb       $32, %al 
        je         skipSpcs__hla_3395
        cmpb       $9, %al 
        je         skipSpcs__hla_3395
        cmpb       $13, %al 
        je         skipSpcs__hla_3395
        ret

skippedSpaces__hla_3396:
        pushl      $str__hla_3397 
        call       STDOUT_PUTS
        mov        $20, %eax 
        jmp        Raise__hla_
grabID__hla_3403:
        mov        4(%esp), %ecx 
forever__hla_3408:
continue__hla_3407:
        cmpl       end_source__hla_3367, %ebx 
        jae        exitloop__hla_3407
        movzbl     (%ebx), %eax 
        btl        %eax, idSet__hla_3404 
        jnc        exitloop__hla_3407
        mov        %al, (%ecx) 
        incl       %ebx 
        incl       %ecx 
        jmp        forever__hla_3408
exitloop__hla_3407:

        movb       $0, (%ecx) 
        mov        4(%esp), %edx 
        subl       %edx, %ecx 
        mov        %ecx, -4(%edx) 
        pushl      %esi 
        pushl      %edi 
false__hla_3411:
repeat__hla_3411:
        pushl      %edx 
        movl       $equatesTable, %esi 
        mov        (%esi), %edi 
        call *     8(%edi) 
        cmpl       $0, %eax 
        je         false__hla_3412
        mov        4(%eax), %eax 
        pushl      %eax 
        pushl      %edx 
        call       STR_CPY
false__hla_3412:
continue__hla_3411:
        cmpl       $0, %eax 
        jne        repeat__hla_3411
exitloop__hla_3411:

        popl       %edi 
        popl       %esi 
        cmpl       end_source__hla_3367, %ebx 
        setb       %al 
        movzbl     %al, %eax 
        ret        $4
unknownStmt__hla_3418:
        pushl      $str__hla_3421 
        call       STDOUT_PUTS
        mov        start_stmt__hla_3368, %ebx 
        jmp        continue__hla_3422
while__hla_3422:
        pushl      (%ebx) 
        call       STDOUT_PUTC
        incl       %ebx 
continue__hla_3422:
        cmpl       end_source__hla_3367, %ebx 
        jnb        L3424__hla_
        cmpb       $10, (%ebx) 
        jne        while__hla_3422
L3424__hla_:
exitloop__hla_3422:

        incl       %ebx 
        incl       lineNumber__hla_3361 
        call       STDOUT_NEWLN
        ret
getOperand__hla_3433:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $1028, %esp 
        pushl      %esi 
        call       skipSpaces2__hla_3392
        movzbl     (%ebx), %eax 
        cmpl       $36, %eax 
        jl         default__hla_3436
        cmpl       $122, %eax 
        jg         default__hla_3436
        jmp *      jmpTbl__hla_3436-144(,%eax,4) 
case__hla_3437:
        lea        1(%ebx), %esi 
        call       CONV_ATOH32
        movl       %esi, %ebx 
        xorl       %edx, %edx 
        jmp        endswitch__hla_3436
case__hla_3438:
        lea        (%ebx), %esi 
        call       CONV_ATOU32
        movl       %esi, %ebx 
        xorl       %edx, %edx 
        jmp        endswitch__hla_3436
case__hla_3439:
        pushl      %ebp 
        addl       $-1028, (%esp) 
        pushl      $1024 
        call       STR_INIT
        mov        %eax, -4(%ebp) 
        pushl      -4(%ebp) 
        call       grabID__hla_3403
        pushl      -4(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        call *     4(%edi) 
        cmpl       $0, 4(%eax) 
        jne        false__hla_3440
        movl       %eax, %edx 
        pushl      $24 
        call       MEM_ALLOC1
        mov        %eax, 4(%edx) 
        movb       $4, 21(%eax) 
        mov        8(%edx), %ecx 
        mov        %ecx, 4(%eax) 
        movl       $0, 12(%eax) 
        movl       $0, (%eax) 
        movb       $0, 20(%eax) 
        jmp        endif__hla_3440
false__hla_3440:
        mov        4(%eax), %edx 
        orb        $4, 21(%edx) 
        movl       %eax, %edx 
endif__hla_3440:
        xorl       %eax, %eax 
        jmp        endswitch__hla_3436
case__hla_3441:
        addl       $1, %ebx 
        call       RelExpr__hla_3430
        pushl      %eax 
        call       skipSpaces2__hla_3392
        cmpb       $41, %al 
        je         false__hla_3442
        pushl      $str__hla_3443 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3361 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $9, %eax 
        jmp        Raise__hla_
false__hla_3442:
        addl       $1, %ebx 
        popl       %eax 
        jmp        endswitch__hla_3436
default__hla_3436:
        pushl      $str__hla_3444 
        call       STDOUT_PUTS
        pushl      %eax 
        call       STDOUT_PUTC
        pushl      $str__hla_3445 
        call       STDOUT_PUTS
        pushl      lineNumber__hla_3361 
        call       STDOUT_PUTU32
        call       STDOUT_NEWLN
        mov        $20, %eax 
        jmp        Raise__hla_
endswitch__hla_3436:
        popl       %esi 
xgetOperand__hla_3433__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
RelExpr__hla_3430:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $8, %esp 
        call       getOperand__hla_3433
        mov        %eax, -4(%ebp) 
        mov        %edx, -8(%ebp) 
forever__hla_3452:
continue__hla_3451:
        movzbl     (%ebx), %eax 
        cmpl       $43, %eax 
        je         case__hla_3454
        cmpl       $45, %eax 
        je         case__hla_3457
        jmp        default__hla_3453
case__hla_3454:
        addl       $1, %ebx 
        call       getOperand__hla_3433
        cmpl       $0, %edx 
        je         false__hla_3455
        pushl      $str__hla_3456 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3361 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3455:
        addl       %eax, -4(%ebp) 
        jmp        endswitch__hla_3453
case__hla_3457:
        addl       $1, %ebx 
        call       getOperand__hla_3433
        cmpl       $0, %edx 
        je         false__hla_3458
        pushl      $str__hla_3456 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3361 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3458:
        negl       %eax 
        addl       %eax, -4(%ebp) 
        jmp        endswitch__hla_3453
default__hla_3453:
        jmp        exitloop__hla_3451
endswitch__hla_3453:
        jmp        forever__hla_3452
exitloop__hla_3451:

        mov        -4(%ebp), %eax 
        mov        -8(%ebp), %edx 
xRelExpr__hla_3430__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
EvalExpr__hla_3464:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %edx 
        call       RelExpr__hla_3430
        cmpl       $0, %edx 
        je         false__hla_3467
        pushl      $str__hla_3468 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3361 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3467:
        popl       %edx 
xEvalExpr__hla_3464__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
parseBytes__hla_3474:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $12, %esp 
        call       skipSpaces2__hla_3392
        cmpb       $34, (%ebx) 
        jne        false__hla_3477
        addl       $1, %ebx 
        mov        %ebx, -4(%ebp) 
        jmp        continue__hla_3478
while__hla_3478:
        addl       $1, %ebx 
continue__hla_3478:
        cmpb       $34, (%ebx) 
        jne        while__hla_3478
exitloop__hla_3478:

        mov        %ebx, -8(%ebp) 
        call       skipSpaces2__hla_3392
        cmpb       $44, (%ebx) 
        jne        false__hla_3480
        addl       $1, %ebx 
        mov        -8(%ebp), %eax 
        subl       -4(%ebp), %eax 
        addl       8(%ebp), %eax 
        pushl      %eax 
        call       parseBytes__hla_3474
        jmp        endif__hla_3480
false__hla_3480:
        mov        -8(%ebp), %ecx 
        subl       -4(%ebp), %ecx 
        addl       8(%ebp), %ecx 
        addl       $17, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC1
        subl       $17, %ecx 
        pushl      %edx 
        mov        tknListTail__hla_3362, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %ecx, 13(%eax) 
        mov        %eax, tknListTail__hla_3362 
        popl       %edx 
        addl       $17, %eax 
endif__hla_3480:
        pushl      %esi 
        pushl      %edi 
        pushl      %ecx 
        cld
        mov        -4(%ebp), %esi 
        movl       %eax, %edi 
        addl       8(%ebp), %edi 
        mov        -8(%ebp), %ecx 
        subl       %esi, %ecx 
        cld
        rep movsb
        popl       %ecx 
        popl       %edi 
        popl       %esi 
        jmp        endif__hla_3477
false__hla_3477:
        call       EvalExpr__hla_3464
        cmpl       $256, %eax 
        jnae       false__hla_3481
        pushl      $str__hla_3482 
        call       STDOUT_PUTS
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_3481:
        mov        %al, -9(%ebp) 
        call       skipSpaces2__hla_3392
        cmpb       $44, (%ebx) 
        jne        false__hla_3483
        addl       $1, %ebx 
        mov        8(%ebp), %eax 
        addl       $1, %eax 
        pushl      %eax 
        call       parseBytes__hla_3474
        jmp        endif__hla_3483
false__hla_3483:
        mov        8(%ebp), %ecx 
        addl       $18, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC1
        subl       $17, %ecx 
        pushl      %edx 
        mov        tknListTail__hla_3362, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %ecx, 13(%eax) 
        mov        %eax, tknListTail__hla_3362 
        popl       %edx 
        addl       $17, %eax 
endif__hla_3483:
        pushl      %ebx 
        pushl      %edx 
        mov        -9(%ebp), %bl 
        mov        8(%ebp), %edx 
        mov        %bl, (%eax,%edx,1) 
        popl       %edx 
        popl       %ebx 
endif__hla_3477:
xparseBytes__hla_3474__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
parseWords__hla_3489:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $12, %esp 
        pushl      %edx 
        call       skipSpaces2__hla_3392
        call       EvalExpr__hla_3464
        cmpl       $65536, %eax 
        jnae       false__hla_3492
        pushl      $str__hla_3493 
        call       STDOUT_PUTS
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_3492:
        mov        %ax, -10(%ebp) 
        call       skipSpaces2__hla_3392
        cmpb       $44, (%ebx) 
        jne        false__hla_3494
        addl       $1, %ebx 
        mov        8(%ebp), %eax 
        addl       $2, %eax 
        pushl      %eax 
        call       parseWords__hla_3489
        jmp        endif__hla_3494
false__hla_3494:
        mov        8(%ebp), %ecx 
        addl       $19, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC1
        subl       $17, %ecx 
        mov        tknListTail__hla_3362, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %ecx, 13(%eax) 
        mov        %eax, tknListTail__hla_3362 
        addl       $17, %eax 
        pushl      %ebx 
        mov        -10(%ebp), %bx 
        mov        8(%ebp), %edx 
        mov        %bx, (%eax,%edx,1) 
        popl       %ebx 
endif__hla_3494:
        popl       %edx 
xparseWords__hla_3489__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
parseDwords__hla_3500:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $16, %esp 
        pushl      %edx 
        call       skipSpaces2__hla_3392
        call       RelExpr__hla_3430
        mov        %eax, -12(%ebp) 
        cmpl       $0, %edx 
        jne        false__hla_3503
        pushl      $21 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3362, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        movl       $4, 13(%eax) 
        mov        %eax, tknListTail__hla_3362 
        mov        -12(%ebp), %edx 
        mov        %edx, 17(%eax) 
        clc
        jmp        endif__hla_3503
false__hla_3503:
        pushl      $21 
        call       MEM_ALLOC1
        pushl      %edx 
        mov        tknListTail__hla_3362, %edx 
        movb       $5, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %eax, tknListTail__hla_3362 
        popl       %edx 
        mov        %edx, 13(%eax) 
        mov        -12(%ebp), %edx 
        mov        %edx, 17(%eax) 
        stc
endif__hla_3503:
        popl       %edx 
xparseDwords__hla_3500__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
EvalQWord__hla_3512:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %esi 
        mov        (%ebx), %al 
        cmpb       $36, %al 
        jne        false__hla_3515
        addl       $1, %ebx 
        lea        (%ebx), %esi 
        call       CONV_ATOH64
        movl       %esi, %ebx 
        jmp        endif__hla_3515
false__hla_3515:
        lea        (%ebx), %esi 
        call       CONV_ATOU64
        movl       %esi, %ebx 
endif__hla_3515:
        popl       %esi 
xEvalQWord__hla_3512__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
parseQWords__hla_3509:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $16, %esp 
        pushl      %edx 
        call       skipSpaces2__hla_3392
        call       EvalQWord__hla_3512
        mov        %eax, -16(%ebp) 
        mov        %edx, -12(%ebp) 
        call       skipSpaces2__hla_3392
        cmpb       $44, (%ebx) 
        jne        false__hla_3521
        addl       $1, %ebx 
        mov        8(%ebp), %eax 
        addl       $8, %eax 
        pushl      %eax 
        call       parseQWords__hla_3509
        jmp        endif__hla_3521
false__hla_3521:
        mov        8(%ebp), %ecx 
        addl       $25, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC1
        subl       $17, %ecx 
        mov        tknListTail__hla_3362, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %ecx, 13(%eax) 
        mov        %eax, tknListTail__hla_3362 
        addl       $17, %eax 
        pushl      %ebx 
        mov        -16(%ebp), %ebx 
        mov        8(%ebp), %edx 
        mov        %ebx, (%eax,%edx,1) 
        mov        -12(%ebp), %ebx 
        mov        %ebx, 4(%eax,%edx,1) 
        popl       %ebx 
endif__hla_3521:
        popl       %edx 
xparseQWords__hla_3509__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
EvalTByte__hla_3530:
        pushl      %esi 
        mov        (%ebx), %al 
        cmpb       $36, %al 
        jne        false__hla_3533
        addl       $1, %ebx 
        lea        (%ebx), %esi 
        pushl      %ebp 
        addl       $-24, (%esp) 
        call       CONV_ATOH80
        movl       %esi, %ebx 
        jmp        endif__hla_3533
false__hla_3533:
        lea        (%ebx), %esi 
        pushl      %ebp 
        addl       $-24, (%esp) 
        call       CONV_ATOU128
        movl       %esi, %ebx 
        movzwl     -14(%ebp), %eax 
        orl        -12(%ebp), %eax 
        testl      %eax, %eax 
        je         false__hla_3534
        pushl      $str__hla_3535 
        call       STDOUT_PUTS
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_3534:
endif__hla_3533:
        popl       %esi 
        ret
parseTBytes__hla_3527:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $24, %esp 
        pushl      %edx 
        call       skipSpaces2__hla_3392
        call       EvalTByte__hla_3530
        call       skipSpaces2__hla_3392
        cmpb       $44, (%ebx) 
        jne        false__hla_3541
        addl       $1, %ebx 
        mov        8(%ebp), %eax 
        addl       $10, %eax 
        pushl      %eax 
        call       parseTBytes__hla_3527
        jmp        endif__hla_3541
false__hla_3541:
        mov        8(%ebp), %ecx 
        addl       $27, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC1
        subl       $17, %ecx 
        mov        tknListTail__hla_3362, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %ecx, 13(%eax) 
        mov        %eax, tknListTail__hla_3362 
        addl       $17, %eax 
        pushl      %ebx 
        mov        -24(%ebp), %ebx 
        mov        8(%ebp), %edx 
        mov        %ebx, (%eax,%edx,1) 
        mov        -20(%ebp), %ebx 
        mov        %ebx, 4(%eax,%edx,1) 
        mov        -16(%ebp), %bx 
        mov        %bx, 8(%eax,%edx,1) 
        popl       %ebx 
endif__hla_3541:
        popl       %edx 
xparseTBytes__hla_3527__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
EvalLWord__hla_3550:
        pushl      %esi 
        mov        (%ebx), %al 
        cmpb       $36, %al 
        jne        false__hla_3553
        addl       $1, %ebx 
        lea        (%ebx), %esi 
        pushl      %ebp 
        addl       $-24, (%esp) 
        call       CONV_ATOH128
        movl       %esi, %ebx 
        jmp        endif__hla_3553
false__hla_3553:
        lea        (%ebx), %esi 
        pushl      %ebp 
        addl       $-24, (%esp) 
        call       CONV_ATOU128
        movl       %esi, %ebx 
endif__hla_3553:
        popl       %esi 
        ret
parseLWords__hla_3547:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $24, %esp 
        pushl      %edx 
        call       skipSpaces2__hla_3392
        call       EvalLWord__hla_3550
        call       skipSpaces2__hla_3392
        cmpb       $44, (%ebx) 
        jne        false__hla_3559
        addl       $1, %ebx 
        mov        8(%ebp), %eax 
        addl       $16, %eax 
        pushl      %eax 
        call       parseTBytes__hla_3527
        jmp        endif__hla_3559
false__hla_3559:
        mov        8(%ebp), %ecx 
        addl       $33, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC1
        subl       $17, %ecx 
        mov        tknListTail__hla_3362, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %ecx, 13(%eax) 
        mov        %eax, tknListTail__hla_3362 
        addl       $17, %eax 
        pushl      %ebx 
        mov        -24(%ebp), %ebx 
        mov        8(%ebp), %edx 
        mov        %ebx, (%eax,%edx,1) 
        mov        -20(%ebp), %ebx 
        mov        %ebx, 4(%eax,%edx,1) 
        mov        -16(%ebp), %ebx 
        mov        %ebx, 8(%eax,%edx,1) 
        mov        -12(%ebp), %ebx 
        mov        %ebx, 12(%eax,%edx,1) 
        popl       %ebx 
endif__hla_3559:
        popl       %edx 
xparseLWords__hla_3547__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
coalesce__hla_3565:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $32, %esp 
        mov        %eax, -16(%ebp) 
        mov        %ecx, -20(%ebp) 
        mov        %edx, -24(%ebp) 
        mov        %esi, -28(%ebp) 
        mov        %edi, -32(%ebp) 
        mov        8(%ebp), %edx 
        mov        (%edx), %esi 
        mov        %esi, -8(%ebp) 
        mov        (%esi), %eax 
        mov        %eax, -4(%ebp) 
        mov        13(%edx), %ecx 
        addl       13(%esi), %ecx 
        mov        %ecx, -12(%ebp) 
        addl       $17, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC1
        mov        13(%esi), %ecx 
        addl       $17, %ecx 
        movl       %eax, %edi 
        cld
        rep movsb
        mov        -12(%ebp), %ecx 
        mov        %ecx, 13(%eax) 
        mov        8(%ebp), %esi 
        mov        13(%esi), %ecx 
        addl       $17, %esi 
        cld
        rep movsb
        mov        -4(%ebp), %edx 
        mov        %eax, 4(%edx) 
        mov        %edx, (%eax) 
        movl       $0, 4(%eax) 
        mov        %eax, tknListTail__hla_3362 
        pushl      8(%ebp) 
        call       MEM_FREE
        pushl      -8(%ebp) 
        call       MEM_FREE
        mov        -16(%ebp), %eax 
        mov        -20(%ebp), %ecx 
        mov        -24(%ebp), %edx 
        mov        -28(%ebp), %esi 
        mov        -32(%ebp), %edi 
xcoalesce__hla_3565__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
initStmt__hla_3573:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ecx 
        pushl      8(%ebp) 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3362, %ecx 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        mov        %eax, 4(%ecx) 
        mov        %eax, tknListTail__hla_3362 
        popl       %ecx 
xinitStmt__hla_3573__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
parseSourceFileList__hla_3581:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %edx 
        call       skipSpaces2__hla_3392
        cmpb       $59, (%ebx) 
        jne        false__hla_3585
        pushl      %ecx 
        pushl      %esi 
        pushl      %edi 
        addl       $1, %ebx 
        call       skipSpaces2__hla_3392
        movl       %ebx, %ecx 
        subl       $1, %ebx 
false__hla_3586:
repeat__hla_3586:
        addl       $1, %ebx 
        movzbl     (%ebx), %eax 
        btl        %eax, filenameDelims__hla_3582 
continue__hla_3586:
        jnc        repeat__hla_3586
exitloop__hla_3586:

        movl       %ebx, %eax 
        subl       %ecx, %eax 
        cmpl       $512, %eax 
        jna        false__hla_3587
        pushl      $str__hla_3588 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3361 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_3587:
        pushl      $12 
        call       MEM_ALLOC1
        mov        8(%ebp), %edx 
        mov        %eax, (%edx) 
        movl       %eax, %edx 
        pushl      %ecx 
        pushl      %ebx 
        call       STR_A_BUFTOSTR2
        addl       $1, %ebx 
        mov        %eax, 4(%edx) 
        cmpb       $44, (%ebx) 
        jne        false__hla_3589
        addl       $1, %ebx 
false__hla_3589:
        call       skipSpaces2__hla_3392
        movl       %ebx, %esi 
        call       CONV_ATOU32
        movl       %esi, %ebx 
        mov        %eax, 8(%edx) 
        movl       $0, (%edx) 
        lea        (%edx), %eax 
        popl       %edi 
        popl       %esi 
        popl       %ecx 
        pushl      %eax 
        call       parseSourceFileList__hla_3581
        jmp        endif__hla_3585
false__hla_3585:
        mov        8(%ebp), %edx 
        movl       $0, (%edx) 
endif__hla_3585:
        popl       %edx 
xparseSourceFileList__hla_3581__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
getDisp__hla_3595:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %eax 
        call       skipSpaces__hla_3382
        call       RelExpr__hla_3430
        popl       %ecx 
        mov        %eax, 21(%ecx) 
        mov        %edx, 17(%ecx) 
        movl       $0, 13(%ecx) 
        lea        25(%ecx), %eax 
        pushl      %eax 
        call       parseSourceFileList__hla_3581
        call       skipToEoln__hla_3371
xgetDisp__hla_3595__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
emitDummy__hla_3603:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %eax 
        pushl      %ecx 
        pushl      $13 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3362, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $21, 8(%eax) 
        mov        %eax, tknListTail__hla_3362 
        popl       %ecx 
        popl       %eax 
xemitDummy__hla_3603__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
lexer:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $5144, %esp 
        movl       $0, -12(%ebp) 
        movl       $0, -4(%ebp) 
        pushl      %ebp 
        addl       $-1036, (%esp) 
        pushl      $1024 
        call       STR_INIT
        mov        %eax, -8(%ebp) 
        mov        20(%ebp), %eax 
        mov        %eax, end_source__hla_3367 
        pushl      $13 
        call       MEM_ALLOC1
        movl       $0, 4(%eax) 
        movl       $0, (%eax) 
        movb       $0, 8(%eax) 
        mov        %eax, -5136(%ebp) 
        mov        %eax, codeListTail__hla_3364 
        mov        %eax, tknListTail__hla_3362 
        movl       $codeListTail__hla_3364, lastTailPtr__hla_3363 
        movb       $1, currentSection 
        pushl      $13 
        call       MEM_ALLOC1
        movl       $0, 4(%eax) 
        movl       $0, (%eax) 
        movb       $0, 8(%eax) 
        mov        %eax, -5140(%ebp) 
        mov        %eax, dataListTail__hla_3365 
        pushl      $13 
        call       MEM_ALLOC1
        movl       $0, 4(%eax) 
        movl       $0, (%eax) 
        movb       $0, 8(%eax) 
        mov        %eax, -5144(%ebp) 
        mov        %eax, bssListTail__hla_3366 
        mov        24(%ebp), %ebx 
forever__hla_3612:
continue__hla_3611:
        mov        %ebx, start_stmt__hla_3368 
        decl       %ebx 

skipSpcs__hla_3613:
        incl       %ebx 
        cmpl       end_source__hla_3367, %ebx 
        jae        exitloop__hla_3611
        mov        (%ebx), %al 
        cmpb       $32, %al 
        je         skipSpcs__hla_3613
        cmpb       $9, %al 
        je         skipSpcs__hla_3613
        cmpb       $13, %al 
        je         skipSpcs__hla_3613
        cmpb       $10, %al 
        jne        false__hla_3615
        incl       %ebx 
        incl       lineNumber__hla_3361 
        jmp        continue__hla_3611
false__hla_3615:
        cmpb       $59, %al 
        jne        false__hla_3616
        call       skipToEoln__hla_3371
        jmp        continue__hla_3611
false__hla_3616:
        cmpb       $46, %al 
        jne        false__hla_3617
        addl       $1, %ebx 
        movzbl     (%ebx), %eax 
        cmpl       $97, %eax 
        jl         default__hla_3618
        cmpl       $122, %eax 
        jg         default__hla_3618
        jmp *      jmpTbl__hla_3618-388(,%eax,4) 
case__hla_3619:
        pushl      $17 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3362, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $1, 8(%eax) 
        mov        %eax, tknListTail__hla_3362 
        addl       $1, %ebx 
        call       EvalExpr__hla_3464
        mov        tknListTail__hla_3362, %ecx 
        mov        %eax, 13(%ecx) 
        call       skipToEoln__hla_3371
        jmp        endswitch__hla_3618
case__hla_3620:
        addl       $1, %ebx 
        pushl      $0 
        call       parseBytes__hla_3474
        subl       $17, %eax 
        mov        (%eax), %ecx 
        cmpl       $0, %ecx 
        jne        _0e25_skipAssertion___hla_3625
        pushl      _0e26_msg___hla_3623 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0e25_skipAssertion___hla_3625:
        cmpb       $2, 8(%ecx) 
        jne        false__hla_3626
        pushl      %eax 
        call       coalesce__hla_3565
false__hla_3626:
        call       skipToEoln__hla_3371
        jmp        endswitch__hla_3618
case__hla_3627:
        call       emitDummy__hla_3603
        movb       $1, currentSection 
        mov        lastTailPtr__hla_3363, %eax 
        mov        tknListTail__hla_3362, %ecx 
        mov        %ecx, (%eax) 
        movl       $codeListTail__hla_3364, lastTailPtr__hla_3363 
        mov        codeListTail__hla_3364, %eax 
        mov        %eax, tknListTail__hla_3362 
        pushl      $13 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3362, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $10, 8(%eax) 
        mov        %eax, tknListTail__hla_3362 
        call       skipToEoln__hla_3371
        jmp        endswitch__hla_3618
case__hla_3628:
        addl       $1, %ebx 
        pushl      $0 
        call       parseDwords__hla_3500
        jc         false__hla_3629
        mov        (%eax), %ecx 
        cmpl       $0, %ecx 
        jne        _0e2e_skipAssertion___hla_3634
        pushl      _0e2f_msg___hla_3632 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0e2e_skipAssertion___hla_3634:
        cmpb       $2, 8(%ecx) 
        jne        false__hla_3635
        pushl      %eax 
        call       coalesce__hla_3565
false__hla_3635:
false__hla_3629:
        call       skipToEoln__hla_3371
        jmp        endswitch__hla_3618
case__hla_3636:
        addl       $1, %ebx 
        call       skipSpaces2__hla_3392
        pushl      -8(%ebp) 
        call       grabID__hla_3403
        pushl      -8(%ebp) 
        movl       $equatesTable, %esi 
        mov        (%esi), %edi 
        call *     4(%edi) 
        cmpl       $0, 4(%eax) 
        jne        false__hla_3637
        pushl      %eax 
        call       skipSpaces2__hla_3392
        cmpb       $44, (%ebx) 
        je         false__hla_3638
        pushl      $str__hla_3639 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3361 
        call       STDERR_PUTU32
        pushl      $str__hla_3640 
        call       STDERR_PUTS
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3638:
        addl       $1, %ebx 
        call       skipSpaces2__hla_3392
        pushl      -8(%ebp) 
        call       grabID__hla_3403
        pushl      -8(%ebp) 
        call       STR_A_CPY
        popl       %edx 
        mov        %eax, 4(%edx) 
        jmp        endif__hla_3637
false__hla_3637:
        pushl      $str__hla_3641 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3361 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
endif__hla_3637:
        jmp        endswitch__hla_3618
case__hla_3642:
        addl       $1, %ebx 
        call       skipSpaces2__hla_3392
        pushl      -8(%ebp) 
        call       grabID__hla_3403
        pushl      -8(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        call *     4(%edi) 
        cmpl       $0, 4(%eax) 
        je         false__hla_3643
        movl       %eax, %edx 
        pushl      $17 
        call       MEM_ALLOC1
        movb       $4, 8(%eax) 
        mov        %edx, 13(%eax) 
        mov        tknListTail__hla_3362, %ecx 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        mov        %eax, 4(%ecx) 
        mov        %eax, tknListTail__hla_3362 
        jmp        endif__hla_3643
false__hla_3643:
        pushl      $str__hla_3644 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3361 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
endif__hla_3643:
        call       skipToEoln__hla_3371
        jmp        endswitch__hla_3618
case__hla_3645:
        addl       $1, %ebx 
        pushl      $0 
        call       parseLWords__hla_3547
        subl       $17, %eax 
        mov        (%eax), %ecx 
        cmpl       $0, %ecx 
        jne        _0e3e_skipAssertion___hla_3650
        pushl      _0e3f_msg___hla_3648 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0e3e_skipAssertion___hla_3650:
        cmpb       $2, 8(%ecx) 
        jne        false__hla_3651
        pushl      %eax 
        call       coalesce__hla_3565
false__hla_3651:
        call       skipToEoln__hla_3371
        jmp        endswitch__hla_3618
case__hla_3652:
        addl       $1, %ebx 
        call       skipSpaces2__hla_3392
        pushl      -8(%ebp) 
        call       grabID__hla_3403
        pushl      -8(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        call *     4(%edi) 
        cmpl       $0, 4(%eax) 
        jne        false__hla_3653
        movl       %eax, %ecx 
        pushl      $24 
        call       MEM_ALLOC1
        mov        %eax, 4(%ecx) 
        movb       $2, 21(%eax) 
        movl       $0, 12(%eax) 
        movl       $0, (%eax) 
        mov        8(%ecx), %ecx 
        mov        %ecx, 4(%eax) 
        movb       $0, 20(%eax) 
        jmp        endif__hla_3653
false__hla_3653:
        mov        4(%eax), %ecx 
        testb      $1, 21(%ecx) 
        jz         false__hla_3654
        pushl      $str__hla_3655 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3361 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3654:
        orb        $2, 21(%ecx) 
endif__hla_3653:
        call       skipToEoln__hla_3371
        jmp        endswitch__hla_3618
case__hla_3656:
        addl       $1, %ebx 
        pushl      $0 
        call       parseQWords__hla_3509
        subl       $17, %eax 
        mov        (%eax), %ecx 
        cmpl       $0, %ecx 
        jne        _0e49_skipAssertion___hla_3661
        pushl      _0e4a_msg___hla_3659 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0e49_skipAssertion___hla_3661:
        cmpb       $2, 8(%ecx) 
        jne        false__hla_3662
        pushl      %eax 
        call       coalesce__hla_3565
false__hla_3662:
        call       skipToEoln__hla_3371
        jmp        endswitch__hla_3618
case__hla_3663:
        pushl      $17 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3362, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $6, 8(%eax) 
        mov        %eax, tknListTail__hla_3362 
        addl       $1, %ebx 
        call       EvalExpr__hla_3464
        mov        tknListTail__hla_3362, %ecx 
        mov        %eax, 13(%ecx) 
        call       skipToEoln__hla_3371
        jmp        endswitch__hla_3618
case__hla_3664:
        call       emitDummy__hla_3603
        movb       $2, currentSection 
        mov        lastTailPtr__hla_3363, %eax 
        mov        tknListTail__hla_3362, %ecx 
        mov        %ecx, (%eax) 
        movl       $dataListTail__hla_3365, lastTailPtr__hla_3363 
        mov        dataListTail__hla_3365, %eax 
        mov        %eax, tknListTail__hla_3362 
        pushl      $13 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3362, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $12, 8(%eax) 
        mov        %eax, tknListTail__hla_3362 
        call       skipToEoln__hla_3371
        jmp        endswitch__hla_3618
case__hla_3665:
        addl       $1, %ebx 
        pushl      $0 
        call       parseTBytes__hla_3527
        subl       $17, %eax 
        mov        (%eax), %ecx 
        cmpl       $0, %ecx 
        jne        _0e52_skipAssertion___hla_3670
        pushl      _0e53_msg___hla_3668 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0e52_skipAssertion___hla_3670:
        cmpb       $2, 8(%ecx) 
        jne        false__hla_3671
        pushl      %eax 
        call       coalesce__hla_3565
false__hla_3671:
        call       skipToEoln__hla_3371
        jmp        endswitch__hla_3618
case__hla_3672:
        addl       $1, %ebx 
        mov        (%ebx), %al 
        cmpb       $98, %al 
        jne        false__hla_3673
        pushl      $25 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3362, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $7, 8(%eax) 
        mov        %eax, tknListTail__hla_3362 
        addl       $1, %ebx 
        call       EvalExpr__hla_3464
        mov        tknListTail__hla_3362, %ecx 
        mov        %eax, 17(%ecx) 
        call       skipSpaces2__hla_3392
        cmpb       $44, (%ebx) 
        je         false__hla_3674
        pushl      $str__hla_3675 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3361 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3674:
        addl       $1, %ebx 
        call       EvalExpr__hla_3464
        mov        tknListTail__hla_3362, %ecx 
        mov        %eax, 21(%ecx) 
        movl       $1, 13(%ecx) 
        jmp        endif__hla_3673
false__hla_3673:
        cmpb       $119, %al 
        jne        false__hla_3676
        pushl      $25 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3362, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $8, 8(%eax) 
        mov        %eax, tknListTail__hla_3362 
        addl       $1, %ebx 
        call       EvalExpr__hla_3464
        mov        tknListTail__hla_3362, %ecx 
        mov        %eax, 17(%ecx) 
        call       skipSpaces2__hla_3392
        cmpb       $44, (%ebx) 
        je         false__hla_3677
        pushl      $str__hla_3678 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3361 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3677:
        addl       $1, %ebx 
        call       EvalExpr__hla_3464
        mov        tknListTail__hla_3362, %ecx 
        mov        %eax, 21(%ecx) 
        movl       $2, 13(%ecx) 
        jmp        endif__hla_3673
false__hla_3676:
        cmpb       $100, %al 
        jne        false__hla_3679
        pushl      $25 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3362, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $9, 8(%eax) 
        mov        %eax, tknListTail__hla_3362 
        addl       $1, %ebx 
        call       EvalExpr__hla_3464
        mov        tknListTail__hla_3362, %ecx 
        mov        %eax, 17(%ecx) 
        call       skipSpaces2__hla_3392
        cmpb       $44, (%ebx) 
        je         false__hla_3680
        pushl      $str__hla_3681 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3361 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3680:
        addl       $1, %ebx 
        call       EvalExpr__hla_3464
        mov        tknListTail__hla_3362, %ecx 
        mov        %eax, 21(%ecx) 
        movl       $4, 13(%ecx) 
        jmp        endif__hla_3673
false__hla_3679:
        call       unknownStmt__hla_3418
endif__hla_3673:
        call       skipToEoln__hla_3371
        jmp        endswitch__hla_3618
case__hla_3682:
        call       emitDummy__hla_3603
        movb       $3, currentSection 
        mov        lastTailPtr__hla_3363, %eax 
        mov        tknListTail__hla_3362, %ecx 
        mov        %ecx, (%eax) 
        movl       $bssListTail__hla_3366, lastTailPtr__hla_3363 
        mov        bssListTail__hla_3366, %eax 
        mov        %eax, tknListTail__hla_3362 
        pushl      $13 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3362, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $13, 8(%eax) 
        mov        %eax, tknListTail__hla_3362 
        call       skipToEoln__hla_3371
        jmp        endswitch__hla_3618
case__hla_3683:
        addl       $1, %ebx 
        pushl      $0 
        call       parseWords__hla_3489
        subl       $17, %eax 
        mov        (%eax), %ecx 
        cmpl       $0, %ecx 
        jne        _0e64_skipAssertion___hla_3688
        pushl      _0e65_msg___hla_3686 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0e64_skipAssertion___hla_3688:
        cmpb       $2, 8(%ecx) 
        jne        false__hla_3689
        pushl      %eax 
        call       coalesce__hla_3565
false__hla_3689:
        call       skipToEoln__hla_3371
        jmp        endswitch__hla_3618
case__hla_3690:
        addl       $1, %ebx 
        call       skipSpaces2__hla_3392
        pushl      -8(%ebp) 
        call       grabID__hla_3403
        pushl      -8(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        call *     4(%edi) 
        cmpl       $0, 4(%eax) 
        jne        false__hla_3691
        movl       %eax, %ecx 
        pushl      $24 
        call       MEM_ALLOC1
        mov        %eax, 4(%ecx) 
        movb       $1, 21(%eax) 
        movl       $0, 12(%eax) 
        movl       $0, (%eax) 
        mov        8(%ecx), %ecx 
        mov        %ecx, 4(%eax) 
        mov        currentSection, %cl 
        mov        %cl, 20(%eax) 
        jmp        endif__hla_3691
false__hla_3691:
        mov        4(%eax), %ecx 
        testb      $1, 21(%ecx) 
        jz         false__hla_3692
        mov        8(%eax), %eax 
        pushl      $str__hla_3693 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTS
        pushl      $str__hla_3694 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3361 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
        jmp        endif__hla_3692
false__hla_3692:
        testb      $8, 21(%ecx) 
        jz         false__hla_3695
        orb        $2, 21(%ecx) 
        jmp        endif__hla_3695
false__hla_3695:
        orb        $1, 21(%ecx) 
endif__hla_3695:
endif__hla_3692:
        movl       %ecx, %eax 
        mov        currentSection, %cl 
        mov        %cl, 20(%eax) 
endif__hla_3691:
        call       skipToEoln__hla_3371
        jmp        endswitch__hla_3618
case__hla_3696:
        call       skipToEoln__hla_3371
        jmp        endswitch__hla_3618
default__hla_3618:
        call       unknownStmt__hla_3418
endswitch__hla_3618:
        jmp        endif__hla_3617
false__hla_3617:
        cmpb       $58, %al 
        jne        false__hla_3697
        addl       $1, %ebx 
        call       skipSpaces2__hla_3392
        pushl      -8(%ebp) 
        call       grabID__hla_3403
        pushl      $17 
        call       MEM_ALLOC1
        movl       %eax, %edx 
        pushl      -8(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        call *     4(%edi) 
        cmpl       $0, 4(%eax) 
        jne        false__hla_3698
        movl       %eax, %ecx 
        pushl      $24 
        call       MEM_ALLOC1
        mov        %eax, 4(%ecx) 
        movb       $8, 21(%eax) 
        movl       $0, 12(%eax) 
        movl       $0, (%eax) 
        mov        8(%ecx), %edx 
        mov        %edx, 4(%eax) 
        mov        currentSection, %dl 
        mov        %dl, 20(%eax) 
        movb       $0, 22(%eax) 
        movl       $0, 16(%eax) 
        movl       %ecx, %eax 
        jmp        endif__hla_3698
false__hla_3698:
        mov        4(%eax), %ecx 
        testb      $8, 21(%ecx) 
        jz         false__hla_3699
        pushl      $str__hla_3700 
        call       STDERR_PUTS
        pushl      8(%eax) 
        call       STDERR_PUTS
        pushl      $str__hla_3701 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3361 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3699:
        testb      $1, 21(%ecx) 
        jz         false__hla_3702
        andb       $254, 21(%ecx) 
        orb        $2, 21(%ecx) 
false__hla_3702:
        orb        $8, 21(%ecx) 
        mov        currentSection, %dl 
        mov        %dl, 20(%ecx) 
        movb       $0, 22(%ecx) 
        movl       $0, 16(%ecx) 
endif__hla_3698:
        movl       %eax, %edx 
        pushl      $17 
        call       MEM_ALLOC1
        movb       $3, 8(%eax) 
        mov        %edx, 13(%eax) 
        mov        tknListTail__hla_3362, %ecx 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        mov        %eax, 4(%ecx) 
        mov        %eax, tknListTail__hla_3362 
        call       skipToEoln__hla_3371
        jmp        endif__hla_3617
false__hla_3697:
        lea        10(%ebx), %ecx 
        cmpl       end_source__hla_3367, %ecx 
        jna        false__hla_3703
        call       unknownStmt__hla_3418
        jmp        endif__hla_3703
false__hla_3703:
        cmpb       $106, %al 
        jne        false__hla_3704
        mov        1(%ebx), %eax 
        movl       %eax, %edx 
        bswap      %edx 
        cmpb       $32, %ah 
        jne        false__hla_3705
        cmpb       $97, %al 
        je         ja_instr__hla_3706
        cmpb       $98, %al 
        je         jb_instr__hla_3707
        cmpb       $99, %al 
        je         jc_instr__hla_3708
        cmpb       $101, %al 
        je         je_instr__hla_3709
        cmpb       $103, %al 
        je         jg_instr__hla_3710
        cmpb       $108, %al 
        je         jl_instr__hla_3711
        cmpb       $111, %al 
        je         jo_instr__hla_3712
        cmpb       $112, %al 
        je         jp_instr__hla_3713
        cmpb       $115, %al 
        je         js_instr__hla_3714
        cmpb       $122, %al 
        je         jz_instr__hla_3715
        call       unknownStmt__hla_3418
        jmp        Done__hla_3716

jnbe_instr__hla_3717:
        addl       $2, %ebx 

ja_instr__hla_3706:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3573
        movb       $16, 8(%eax) 
        movb       $119, 29(%eax) 
        movw       $34575, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3595
        jmp        Done__hla_3716

jnae_instr__hla_3718:
        addl       $2, %ebx 

jb_instr__hla_3707:

jc_instr__hla_3708:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3573
        movb       $16, 8(%eax) 
        movb       $114, 29(%eax) 
        movw       $33295, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3595
        jmp        Done__hla_3716

je_instr__hla_3709:

jz_instr__hla_3715:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3573
        movb       $16, 8(%eax) 
        movb       $116, 29(%eax) 
        movw       $33807, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3595
        jmp        Done__hla_3716

jnle_instr__hla_3719:
        addl       $2, %ebx 

jg_instr__hla_3710:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3573
        movb       $16, 8(%eax) 
        movb       $127, 29(%eax) 
        movw       $36623, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3595
        jmp        Done__hla_3716

jnge_instr__hla_3720:
        addl       $2, %ebx 

jl_instr__hla_3711:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3573
        movb       $16, 8(%eax) 
        movb       $124, 29(%eax) 
        movw       $35855, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3595
        jmp        Done__hla_3716

jo_instr__hla_3712:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3573
        movb       $16, 8(%eax) 
        movb       $112, 29(%eax) 
        movw       $32783, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3595
        jmp        Done__hla_3716

jpe_instr__hla_3721:
        addl       $1, %ebx 

jp_instr__hla_3713:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3573
        movb       $16, 8(%eax) 
        movb       $122, 29(%eax) 
        movw       $35343, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3595
        jmp        Done__hla_3716

js_instr__hla_3714:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3573
        movb       $16, 8(%eax) 
        movb       $120, 29(%eax) 
        movw       $34831, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3595
        jmp        Done__hla_3716
        jmp        endif__hla_3705
false__hla_3705:
        cmpb       $32, %dh 
        jne        false__hla_3722
        cmpw       $28781, %ax 
        je         jmp_instr__hla_3723
        cmpw       $25953, %ax 
        je         jae_instr__hla_3724
        cmpw       $25954, %ax 
        je         jbe_instr__hla_3725
        cmpw       $25959, %ax 
        je         jge_instr__hla_3726
        cmpw       $25964, %ax 
        je         jle_instr__hla_3727
        cmpw       $24942, %ax 
        je         jna_instr__hla_3728
        cmpw       $25198, %ax 
        je         jnb_instr__hla_3729
        cmpw       $25454, %ax 
        je         jnc_instr__hla_3730
        cmpw       $25966, %ax 
        je         jne_instr__hla_3731
        cmpw       $26478, %ax 
        je         jng_instr__hla_3732
        cmpw       $27758, %ax 
        je         jnl_instr__hla_3733
        cmpw       $28526, %ax 
        je         jno_instr__hla_3734
        cmpw       $28782, %ax 
        je         jnp_instr__hla_3735
        cmpw       $29550, %ax 
        je         jns_instr__hla_3736
        cmpw       $31342, %ax 
        je         jnz_instr__hla_3737
        cmpw       $25968, %ax 
        je         jpe_instr__hla_3721
        cmpw       $28528, %ax 
        je         jpo_instr__hla_3738
        call       unknownStmt__hla_3418
        jmp        Done__hla_3716

jmp_instr__hla_3723:
        pushl      $32 
        call       initStmt__hla_3573
        movb       $18, 8(%eax) 
        movb       $235, 29(%eax) 
        movb       $233, 30(%eax) 
        movb       $1, 31(%eax) 
        addl       $3, %ebx 
        call       getDisp__hla_3595
        jmp        Done__hla_3716

jnc_instr__hla_3730:

jnb_instr__hla_3729:

jae_instr__hla_3724:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3573
        movb       $16, 8(%eax) 
        movb       $115, 29(%eax) 
        movw       $33551, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3595
        jmp        Done__hla_3716

jna_instr__hla_3728:

jbe_instr__hla_3725:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3573
        movb       $16, 8(%eax) 
        movb       $118, 29(%eax) 
        movw       $34319, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3595
        jmp        Done__hla_3716

jnl_instr__hla_3733:

jge_instr__hla_3726:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3573
        movb       $16, 8(%eax) 
        movb       $125, 29(%eax) 
        movw       $36111, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3595
        jmp        Done__hla_3716

jng_instr__hla_3732:

jle_instr__hla_3727:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3573
        movb       $16, 8(%eax) 
        movb       $126, 29(%eax) 
        movw       $36367, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3595
        jmp        Done__hla_3716

jne_instr__hla_3731:

jnz_instr__hla_3737:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3573
        movb       $16, 8(%eax) 
        movb       $117, 29(%eax) 
        movw       $34063, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3595
        jmp        Done__hla_3716

jno_instr__hla_3734:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3573
        movb       $16, 8(%eax) 
        movb       $113, 29(%eax) 
        movw       $33039, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3595
        jmp        Done__hla_3716

jnp_instr__hla_3735:

jpo_instr__hla_3738:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3573
        movb       $16, 8(%eax) 
        movb       $123, 29(%eax) 
        movw       $35599, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3595
        jmp        Done__hla_3716

jns_instr__hla_3736:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3573
        movb       $16, 8(%eax) 
        movb       $121, 29(%eax) 
        movw       $35087, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3595
        jmp        Done__hla_3716
        jmp        endif__hla_3705
false__hla_3722:
        cmpb       $32, %dl 
        jne        false__hla_3739
        cmpl       $543514990, %eax 
        je         jnae_instr__hla_3718
        cmpl       $543515246, %eax 
        je         jnbe_instr__hla_3717
        cmpl       $543516526, %eax 
        je         jnge_instr__hla_3720
        cmpl       $543517806, %eax 
        je         jnle_instr__hla_3719
        cmpl       $544897123, %eax 
        je         jcxz_instr__hla_3740
        call       unknownStmt__hla_3418
        jmp        Done__hla_3716

jcxz_instr__hla_3740:
        addl       $4, %ebx 
        pushl      $31 
        call       initStmt__hla_3573
        movb       $15, 8(%eax) 
        movw       $58215, 29(%eax) 
        call       getDisp__hla_3595
        jmp        Done__hla_3716
        jmp        endif__hla_3705
false__hla_3739:
        cmpl       $2054710117, %eax 
        jne        false__hla_3741
        cmpb       $32, 5(%ebx) 
        jne        false__hla_3741
        addl       $5, %ebx 
        pushl      $30 
        call       initStmt__hla_3573
        movb       $14, 8(%eax) 
        movb       $227, 29(%eax) 
        call       getDisp__hla_3595
        jmp        Done__hla_3716
        jmp        endif__hla_3705
false__hla_3741:
        call       unknownStmt__hla_3418
endif__hla_3705:
        jmp        endif__hla_3703
false__hla_3704:
        cmpb       $108, %al 
        jne        false__hla_3743
        lea        7(%ebx), %ecx 
        cmpl       end_source__hla_3367, %ecx 
        jnb        false__hla_3743
        cmpb       $111, 1(%ebx) 
        jne        false__hla_3743
        cmpb       $111, 2(%ebx) 
        jne        false__hla_3743
        cmpb       $112, 3(%ebx) 
        jne        false__hla_3743
        mov        4(%ebx), %al 
        cmpb       $32, %al 
        je         L3749__hla_
        cmpb       $101, %al 
        jne        L3752__hla_
        cmpb       $32, 5(%ebx) 
        je         L3749__hla_
L3752__hla_:
        cmpb       $122, %al 
        jne        L3753__hla_
        cmpb       $32, 5(%ebx) 
        je         L3749__hla_
L3753__hla_:
        mov        5(%ebx), %ah 
        cmpb       $110, %al 
        jne        false__hla_3743
        cmpb       $101, %ah 
        jne        L3756__hla_
        cmpb       $32, 6(%ebx) 
        je         L3755__hla_
L3756__hla_:
        cmpb       $122, %ah 
        jne        false__hla_3743
        cmpb       $32, 6(%ebx) 
        jne        false__hla_3743
L3755__hla_:
L3749__hla_:
        cmpb       $32, %al 
        jne        false__hla_3758
        addl       $4, %ebx 
        pushl      $30 
        call       initStmt__hla_3573
        movb       $14, 8(%eax) 
        movb       $226, 29(%eax) 
        call       getDisp__hla_3595
        jmp        Done__hla_3716
        jmp        endif__hla_3758
false__hla_3758:
        cmpb       $101, %al 
        je         L3760__hla_
        cmpb       $122, %al 
        jne        false__hla_3759
L3760__hla_:
        addl       $5, %ebx 
        pushl      $30 
        call       initStmt__hla_3573
        movb       $14, 8(%eax) 
        movb       $225, 29(%eax) 
        call       getDisp__hla_3595
        jmp        Done__hla_3716
        jmp        endif__hla_3758
false__hla_3759:
        cmpb       $110, %al 
        jne        false__hla_3761
        cmpb       $101, %ah 
        je         L3763__hla_
        cmpb       $122, %ah 
        jne        false__hla_3761
L3763__hla_:
        addl       $6, %ebx 
        pushl      $30 
        call       initStmt__hla_3573
        movb       $14, 8(%eax) 
        movb       $224, 29(%eax) 
        call       getDisp__hla_3595
        jmp        Done__hla_3716
        jmp        endif__hla_3758
false__hla_3761:
        call       skipToEoln__hla_3371
endif__hla_3758:
        jmp        endif__hla_3703
false__hla_3743:
        cmpb       $99, %al 
        jne        false__hla_3764
        addl       $5, %ebx 
        cmpl       end_source__hla_3367, %ebx 
        jnb        false__hla_3764
        cmpb       $97, -4(%ebx) 
        jne        false__hla_3764
        cmpb       $108, -3(%ebx) 
        jne        false__hla_3764
        cmpb       $108, -2(%ebx) 
        jne        false__hla_3764
        cmpb       $32, -1(%ebx) 
        jne        false__hla_3764
        pushl      $30 
        call       initStmt__hla_3573
        movb       $17, 8(%eax) 
        movb       $232, 29(%eax) 
        call       getDisp__hla_3595
        jmp        endif__hla_3703
false__hla_3764:
        call       unknownStmt__hla_3418
endif__hla_3703:

Done__hla_3716:
endif__hla_3617:
        jmp        forever__hla_3612
exitloop__hla_3611:

        call       emitDummy__hla_3603
xlexer__hla_:
        pushl      %edi 
        pushl      %ecx 
        mov        16(%ebp), %edi 
        mov        -5136(%ebp), %ecx 
        mov        %ecx, (%edi) 
        mov        12(%ebp), %edi 
        mov        -5140(%ebp), %ecx 
        mov        %ecx, (%edi) 
        mov        8(%ebp), %edi 
        mov        -5144(%ebp), %ecx 
        mov        %ecx, (%edi) 
        popl       %ecx 
        popl       %edi 
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $20
addCOFFsym__hla_3775:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        cld
        pushl      numCOFFsyms__hla_3312 
        imul       $18, numCOFFsyms__hla_3312, %ebx 
        movzbl     12(%ebp), %eax 
        addl       $1, %eax 
        imul       $18, %eax, %eax 
        addl       %ebx, %eax 
        cmpl       coffSymSize__hla_3313, %eax 
        jna        false__hla_3778
        shll       $1, coffSymSize__hla_3313 
        pushl      COFFsyms__hla_3311 
        pushl      coffSymSize__hla_3313 
        call       MEM_REALLOC1
        mov        %eax, COFFsyms__hla_3311 
false__hla_3778:
        addl       COFFsyms__hla_3311, %ebx 
        mov        32(%ebp), %esi 
        pushl      %esi 
        call       STR_LENGTH
        movl       %eax, %ecx 
        cmpl       $8, %eax 
        jnbe       false__hla_3779
        movl       $0, (%ebx) 
        movl       $0, 4(%ebx) 
        lea        (%ebx), %edi 
        cld
        rep movsb
        jmp        endif__hla_3779
false__hla_3779:
        mov        strTblOffset__hla_3321, %edx 
        lea        1(%edx,%ecx,1), %eax 
        mov        %eax, strTblOffset__hla_3321 
        cmpl       strTblSize__hla_3322, %eax 
        jna        false__hla_3780
        pushl      %eax 
        shll       $1, strTblSize__hla_3322 
        pushl      stringTable__hla_3320 
        pushl      strTblSize__hla_3322 
        call       MEM_REALLOC1
        mov        %eax, stringTable__hla_3320 
        popl       %eax 
false__hla_3780:
        movl       %edx, %edi 
        addl       stringTable__hla_3320, %edi 
        cld
        rep movsb
        movb       $0, (%edi) 
        movl       $0, (%ebx) 
        mov        %edx, 4(%ebx) 
endif__hla_3779:
        mov        28(%ebp), %eax 
        mov        %eax, 8(%ebx) 
        mov        24(%ebp), %ax 
        mov        %ax, 12(%ebx) 
        mov        20(%ebp), %ax 
        mov        %ax, 14(%ebx) 
        mov        16(%ebp), %al 
        mov        %al, 16(%ebx) 
        movzbl     12(%ebp), %eax 
        mov        %al, 17(%ebx) 
        testb      %al, %al 
        je         false__hla_3781
        mov        8(%ebp), %esi 
        imul       $18, numCOFFsyms__hla_3312, %edi 
        addl       $18, %edi 
        addl       COFFsyms__hla_3311, %edi 
        imul       $18, %eax, %ecx 
        cld
        rep movsb
false__hla_3781:
        movzbl     12(%ebp), %eax 
        addl       $1, %eax 
        addl       %eax, numCOFFsyms__hla_3312 
        popl       %eax 
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
xaddCOFFsym__hla_3775__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $28
addELFsym__hla_3787:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        cld
        imul       $16, numELFsyms__hla_3315, %ebx 
        lea        16(%ebx), %eax 
        cmpl       elfSymSize__hla_3316, %eax 
        jna        false__hla_3790
        shll       $1, elfSymSize__hla_3316 
        pushl      ELFsyms__hla_3314 
        pushl      elfSymSize__hla_3316 
        call       MEM_REALLOC1
        mov        %eax, ELFsyms__hla_3314 
false__hla_3790:
        addl       ELFsyms__hla_3314, %ebx 
        xorl       %edx, %edx 
        mov        28(%ebp), %esi 
        cmpl       $0, %esi 
        je         false__hla_3791
        pushl      %esi 
        call       STR_LENGTH
        movl       %eax, %ecx 
        mov        strTblOffset__hla_3321, %edx 
        lea        1(%edx,%ecx,1), %eax 
        mov        %eax, strTblOffset__hla_3321 
        cmpl       strTblSize__hla_3322, %eax 
        jna        false__hla_3792
        shll       $1, strTblSize__hla_3322 
        pushl      stringTable__hla_3320 
        pushl      strTblSize__hla_3322 
        call       MEM_REALLOC1
        mov        %eax, stringTable__hla_3320 
false__hla_3792:
        movl       %edx, %edi 
        addl       stringTable__hla_3320, %edi 
        cld
        rep movsb
        movb       $0, (%edi) 
false__hla_3791:
        mov        %edx, (%ebx) 
        mov        24(%ebp), %eax 
        mov        %eax, 4(%ebx) 
        mov        20(%ebp), %eax 
        mov        %eax, 8(%ebx) 
        mov        16(%ebp), %al 
        mov        %al, 12(%ebx) 
        mov        8(%ebp), %al 
        andb       $3, %al 
        mov        %al, 13(%ebx) 
        mov        12(%ebp), %ax 
        mov        %ax, 14(%ebx) 
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
xaddELFsym__hla_3787__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $24
addMachoSym__hla_3798:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %eax 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        imul       $12, numMachoSyms__hla_3319, %ebx 
        lea        12(%ebx), %eax 
        cmpl       MachoSymSize__hla_3318, %eax 
        jna        false__hla_3801
        shll       $1, MachoSymSize__hla_3318 
        pushl      MachoSyms__hla_3317 
        pushl      MachoSymSize__hla_3318 
        call       MEM_REALLOC1
        mov        %eax, MachoSyms__hla_3317 
false__hla_3801:
        addl       MachoSyms__hla_3317, %ebx 
        mov        20(%ebp), %esi 
        cmpl       $0, %esi 
        jne        _0eda_skipAssertion___hla_3806
        pushl      _0edb_msg___hla_3804 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0eda_skipAssertion___hla_3806:
        pushl      %esi 
        call       STR_LENGTH
        movl       %eax, %ecx 
        mov        strTblOffset__hla_3321, %edx 
        lea        1(%edx,%ecx,1), %eax 
        mov        %eax, strTblOffset__hla_3321 
        cmpl       strTblSize__hla_3322, %eax 
        jna        false__hla_3807
        shll       $1, strTblSize__hla_3322 
        pushl      stringTable__hla_3320 
        pushl      strTblSize__hla_3322 
        call       MEM_REALLOC1
        mov        %eax, stringTable__hla_3320 
false__hla_3807:
        movl       %edx, %edi 
        addl       stringTable__hla_3320, %edi 
        cld
        rep movsb
        movb       $0, (%edi) 
        mov        %edx, (%ebx) 
        mov        16(%ebp), %eax 
        mov        %eax, 8(%ebx) 
        mov        12(%ebp), %al 
        mov        %al, 4(%ebx) 
        mov        8(%ebp), %al 
        mov        %al, 5(%ebx) 
        movw       $0, 6(%ebx) 
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
        popl       %eax 
xaddMachoSym__hla_3798__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $16
buildRaw__hla_3813:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %edi 
        pushl      %esi 
        mov        24(%ebp), %esi 
        cmpb       $0, 8(%ebp) 
        jne        false__hla_3816
        mov        20(%ebp), %eax 
        cmpl       $65535, %eax 
        jnae       false__hla_3817
        mov        %eax, (%esi) 
        addl       $10, %esi 
false__hla_3817:
false__hla_3816:
        mov        32(%ebp), %ebx 
        mov        16(%ebp), %edi 
        jmp        continue__hla_3818
while__hla_3818:
        movzbl     8(%ebx), %eax 
        cmpl       $21, %eax 
        jg         default__hla_3820
        jmp *      jmpTbl__hla_3820(,%eax,4) 
case__hla_3821:
        jmp        endswitch__hla_3820
case__hla_3822:
        mov        9(%ebx), %ecx 
        movl       %ecx, %edx 
        mov        13(%ebx), %eax 
        subl       $1, %eax 
        addl       %eax, %ecx 
        notl       %eax 
        andl       %eax, %ecx 
        subl       %edx, %ecx 
        jz         false__hla_3823
        cmpb       $1, 12(%ebp) 
        jne        false__hla_3824
        jmp        continue__hla_3825
while__hla_3825:
        mov        $2401421, %eax 
        stosl
        mov        $0, %ax 
        stosw
        stosb
        subl       $7, %ecx 
continue__hla_3825:
        cmpl       $7, %ecx 
        jae        while__hla_3825
exitloop__hla_3825:

        cmpl       $6, %ecx 
        jne        false__hla_3827
        mov        $39821, %eax 
        stosl
        mov        $0, %ax 
        stosw
false__hla_3827:
        cmpl       $5, %ecx 
        jne        false__hla_3828
        mov        $2385037, %eax 
        stosl
        mov        $144, %al 
        stosb
false__hla_3828:
        cmpl       $4, %ecx 
        jne        false__hla_3829
        mov        $2385037, %eax 
        stosl
false__hla_3829:
        cmpl       $3, %ecx 
        jne        false__hla_3830
        mov        $18829, %ax 
        stosw
        mov        $0, %al 
        stosb
false__hla_3830:
        cmpl       $2, %ecx 
        jne        false__hla_3831
        mov        $65419, %ax 
        stosw
false__hla_3831:
        cmpl       $1, %ecx 
        jne        false__hla_3832
        mov        $144, %al 
        stosb
false__hla_3832:
        jmp        endif__hla_3824
false__hla_3824:
        xorl       %eax, %eax 
        cld
        rep stosb
endif__hla_3824:
false__hla_3823:
        jmp        endswitch__hla_3820
case__hla_3833:
        cmpb       $3, 12(%ebp) 
        je         false__hla_3834
        pushl      $str__hla_3835 
        call       STDERR_PUTS
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3834:
        jmp        endswitch__hla_3820
case__hla_3836:
        pushl      %esi 
        mov        13(%ebx), %ecx 
        testl      %ecx, %ecx 
        je         false__hla_3837
        lea        17(%ebx), %esi 
        cld
        rep movsb
false__hla_3837:
        popl       %esi 
        jmp        endswitch__hla_3820
case__hla_3838:
        cmpb       $1, 12(%ebp) 
        je         false__hla_3839
        pushl      $str__hla_3840 
        call       STDERR_PUTS
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3839:
        jmp        endswitch__hla_3820
case__hla_3841:
        cmpb       $2, 12(%ebp) 
        je         false__hla_3842
        pushl      $str__hla_3843 
        call       STDERR_PUTS
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_3842:
        jmp        endswitch__hla_3820
case__hla_3844:
        mov        17(%ebx), %ecx 
        mov        21(%ebx), %eax 
        cmpl       $2, 13(%ebx) 
        jb         byteDup__hla_3845
        ja         dwordDup__hla_3846
        cld
        rep stosw
        jmp        done__hla_3847

byteDup__hla_3845:
        cld
        rep stosb
        jmp        done__hla_3847

dwordDup__hla_3846:
        cld
        rep stosl

done__hla_3847:
        jmp        endswitch__hla_3820
case__hla_3848:
        mov        29(%ebx), %al 
        stosb
        mov        13(%ebx), %eax 
        stosb
        jmp        endswitch__hla_3820
case__hla_3849:
        mov        29(%ebx), %ax 
        stosw
        mov        13(%ebx), %eax 
        stosb
        jmp        endswitch__hla_3820
case__hla_3850:
        cmpb       $1, 32(%ebx) 
        jne        false__hla_3851
        mov        29(%ebx), %al 
        stosb
        mov        13(%ebx), %eax 
        addl       21(%ebx), %eax 
        stosb
        jmp        endif__hla_3851
false__hla_3851:
        mov        30(%ebx), %ax 
        stosw
        mov        13(%ebx), %eax 
        addl       21(%ebx), %eax 
        stosl
        cmpl       $0, 17(%ebx) 
        je         false__hla_3852
        mov        17(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        20(%eax), %dl 
        testb      $1, 21(%eax) 
        jnz        L3854__hla_
        cmpb       12(%ebp), %dl 
        je         false__hla_3853
L3854__hla_:
        mov        8(%ebp), %dl 
        testb      %dl, %dl 
        jne        false__hla_3855
        mov        8(%eax), %eax 
        mov        %eax, 4(%esi) 
        mov        9(%ebx), %eax 
        addl       $2, %eax 
        mov        %eax, (%esi) 
        movw       $20, 8(%esi) 
        addl       $10, %esi 
        mov        21(%ebx), %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3855
false__hla_3855:
        cmpb       $1, %dl 
        jnae       false__hla_3856
        cmpb       $2, %dl 
        jnbe       false__hla_3856
        mov        9(%ebx), %edx 
        addl       $2, %edx 
        mov        %edx, (%esi) 
        mov        8(%eax), %eax 
        shll       $8, %eax 
        orl        $2, %eax 
        mov        %eax, 4(%esi) 
        addl       $8, %esi 
        mov        21(%ebx), %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3855
false__hla_3856:
        cmpb       $3, %dl 
        jne        false__hla_3858
        mov        9(%ebx), %edx 
        addl       $2, %edx 
        mov        %edx, (%esi) 
        mov        8(%eax), %eax 
        orl        $218103808, %eax 
        mov        %eax, 4(%esi) 
        addl       $8, %esi 
        mov        9(%ebx), %eax 
        addl       $6, %eax 
        negl       %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3855
false__hla_3858:
        pushl      $str__hla_3859 
        call       STDERR_PUTS
endif__hla_3855:
false__hla_3853:
false__hla_3852:
endif__hla_3851:
        jmp        endswitch__hla_3820
case__hla_3860:
        cmpb       $1, 31(%ebx) 
        jne        false__hla_3861
        mov        29(%ebx), %al 
        stosb
        mov        13(%ebx), %eax 
        addl       21(%ebx), %eax 
        stosb
        jmp        endif__hla_3861
false__hla_3861:
        mov        30(%ebx), %al 
        stosb
        mov        13(%ebx), %eax 
        addl       21(%ebx), %eax 
        stosl
        cmpl       $0, 17(%ebx) 
        je         false__hla_3862
        mov        17(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        20(%eax), %dl 
        mov        21(%eax), %dh 
        andb       $3, %dh 
        testb      $1, %dh 
        jnz        L3864__hla_
        cmpb       12(%ebp), %dl 
        jne        L3864__hla_
        testb      %dh, %dh 
        je         false__hla_3863
        cmpb       $1, 8(%ebp) 
        jnae       false__hla_3863
        cmpb       $2, 8(%ebp) 
        jnbe       false__hla_3863
L3864__hla_:
        mov        8(%ebp), %dl 
        testb      %dl, %dl 
        jne        false__hla_3868
        mov        8(%eax), %eax 
        mov        %eax, 4(%esi) 
        mov        9(%ebx), %eax 
        addl       $1, %eax 
        mov        %eax, (%esi) 
        movw       $20, 8(%esi) 
        addl       $10, %esi 
        mov        21(%ebx), %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3868
false__hla_3868:
        cmpb       $1, %dl 
        jnae       false__hla_3869
        cmpb       $2, %dl 
        jnbe       false__hla_3869
        mov        9(%ebx), %edx 
        addl       $1, %edx 
        mov        %edx, (%esi) 
        mov        8(%eax), %edx 
        shll       $8, %edx 
        orl        $2, %edx 
        mov        %edx, 4(%esi) 
        addl       $8, %esi 
        testb      $1, 21(%eax) 
        jz         false__hla_3871
        movl       $-4, -4(%edi) 
false__hla_3871:
        jmp        endif__hla_3868
false__hla_3869:
        cmpb       $3, %dl 
        jne        false__hla_3872
        mov        9(%ebx), %edx 
        addl       $1, %edx 
        mov        %edx, (%esi) 
        mov        8(%eax), %eax 
        orl        $218103808, %eax 
        mov        %eax, 4(%esi) 
        addl       $8, %esi 
        mov        9(%ebx), %eax 
        addl       $5, %eax 
        negl       %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3868
false__hla_3872:
        pushl      $str__hla_3859 
        call       STDERR_PUTS
endif__hla_3868:
false__hla_3863:
false__hla_3862:
endif__hla_3861:
        jmp        endswitch__hla_3820
case__hla_3873:
        mov        29(%ebx), %al 
        stosb
        mov        13(%ebx), %eax 
        addl       21(%ebx), %eax 
        stosl
        cmpl       $0, 17(%ebx) 
        je         false__hla_3874
        mov        17(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        20(%eax), %dl 
        mov        21(%eax), %dh 
        andb       $3, %dh 
        testb      $1, %dh 
        jnz        L3876__hla_
        cmpb       12(%ebp), %dl 
        jne        L3876__hla_
        testb      %dh, %dh 
        je         false__hla_3875
        cmpb       $1, 8(%ebp) 
        jnae       false__hla_3875
        cmpb       $2, 8(%ebp) 
        jnbe       false__hla_3875
L3876__hla_:
        mov        8(%ebp), %dl 
        testb      %dl, %dl 
        jne        false__hla_3880
        mov        8(%eax), %eax 
        mov        %eax, 4(%esi) 
        mov        9(%ebx), %eax 
        addl       $1, %eax 
        mov        %eax, (%esi) 
        movw       $20, 8(%esi) 
        addl       $10, %esi 
        mov        21(%ebx), %eax 
        addl       13(%ebx), %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3880
false__hla_3880:
        cmpb       $1, %dl 
        jnae       false__hla_3881
        cmpb       $2, %dl 
        jnbe       false__hla_3881
        mov        9(%ebx), %edx 
        addl       $1, %edx 
        mov        %edx, (%esi) 
        mov        21(%eax), %dl 
        mov        8(%eax), %eax 
        shll       $8, %eax 
        orl        $2, %eax 
        mov        %eax, 4(%esi) 
        addl       $8, %esi 
        movl       $-4, -4(%edi) 
        jmp        endif__hla_3880
false__hla_3881:
        cmpb       $3, %dl 
        jne        false__hla_3883
        mov        9(%ebx), %edx 
        addl       $1, %edx 
        mov        %edx, (%esi) 
        mov        8(%eax), %eax 
        orl        $218103808, %eax 
        mov        %eax, 4(%esi) 
        addl       $8, %esi 
        mov        9(%ebx), %eax 
        addl       $5, %eax 
        negl       %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3880
false__hla_3883:
        pushl      $str__hla_3859 
        call       STDERR_PUTS
endif__hla_3880:
false__hla_3875:
false__hla_3874:
        jmp        endswitch__hla_3820
case__hla_3884:
        cmpl       $0, 13(%ebx) 
        je         false__hla_3885
        mov        8(%ebp), %dl 
        testb      %dl, %dl 
        jne        false__hla_3886
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        8(%eax), %eax 
        mov        %eax, 4(%esi) 
        mov        9(%ebx), %eax 
        mov        %eax, (%esi) 
        movw       $6, 8(%esi) 
        addl       $10, %esi 
        mov        17(%ebx), %eax 
        stosl
        jmp        endif__hla_3886
false__hla_3886:
        cmpb       $1, %dl 
        jnae       false__hla_3887
        cmpb       $2, %dl 
        jnbe       false__hla_3887
        mov        9(%ebx), %edx 
        mov        %edx, (%esi) 
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        8(%eax), %edx 
        shll       $8, %edx 
        orl        $1, %edx 
        mov        %edx, 4(%esi) 
        addl       $8, %esi 
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        17(%ebx), %eax 
        stosl
        jmp        endif__hla_3886
false__hla_3887:
        cmpb       $3, %dl 
        jne        false__hla_3889
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        9(%ebx), %edx 
        subl       28(%ebp), %edx 
        testb      $1, 21(%eax) 
        jnz        L3891__hla_
        cmpl       $0, 17(%ebx) 
        jne        false__hla_3890
L3891__hla_:
        mov        %edx, (%esi) 
        testb      $1, 21(%eax) 
        jz         false__hla_3892
        mov        8(%eax), %eax 
        orl        $201326592, %eax 
        mov        %eax, 4(%esi) 
        addl       $8, %esi 
        mov        17(%ebx), %eax 
        stosl
        jmp        endif__hla_3892
false__hla_3892:
        movzbl     20(%eax), %eax 
        cmpb       $1, %al 
        jne        false__hla_3893
        mov        $1, %al 
        jmp        endif__hla_3893
false__hla_3893:
        cmpb       $2, %al 
        jne        false__hla_3894
        mov        $2, %al 
        jmp        endif__hla_3893
false__hla_3894:
        cmpb       $3, %al 
        jne        false__hla_3895
        mov        $3, %al 
        jmp        endif__hla_3893
false__hla_3895:
        pushl      $str__hla_3896 
        call       STDOUT_PUTS
        pushl      %eax 
        call       STDOUT_PUTU8
        call       STDOUT_NEWLN
        mov        $8, %eax 
        jmp        Raise__hla_
endif__hla_3893:
        orl        $67108864, %eax 
        mov        %eax, 4(%esi) 
        addl       $8, %esi 
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        12(%eax), %eax 
        stosl
endif__hla_3892:
        jmp        endif__hla_3890
false__hla_3890:
        mov        %edx, (%esi) 
        orl        $-1610612736, (%esi) 
        mov        12(%eax), %eax 
        mov        %eax, 4(%esi) 
        addl       17(%ebx), %eax 
        stosl
        addl       $8, %esi 
endif__hla_3890:
        jmp        endif__hla_3886
false__hla_3889:
        pushl      $str__hla_3859 
        call       STDERR_PUTS
endif__hla_3886:
false__hla_3885:
        jmp        endswitch__hla_3820
case__hla_3897:
        mov        13(%ebx), %ecx 
        testl      %ecx, %ecx 
        je         false__hla_3898
        xorl       %eax, %eax 
        cld
        rep stosb
false__hla_3898:
        jmp        endswitch__hla_3820
default__hla_3820:
        pushl      $str__hla_3899 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTU8
        call       STDERR_NEWLN
endswitch__hla_3820:
        mov        4(%ebx), %ebx 
continue__hla_3818:
        cmpl       $0, %ebx 
        jne        while__hla_3818
exitloop__hla_3818:

        popl       %esi 
        popl       %edi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
xbuildRaw__hla_3813__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $28
sectionPass__hla_3910:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        mov        8(%ebp), %ecx 
        mov        16(%ebp), %ebx 
        jmp        continue__hla_3913
while__hla_3913:
        mov        %ecx, 9(%ebx) 
        movzbl     8(%ebx), %eax 
        cmpl       $21, %eax 
        jg         default__hla_3915
        jmp *      jmpTbl__hla_3915(,%eax,4) 
case__hla_3916:
        jmp        endswitch__hla_3915
case__hla_3917:
        movb       $1, currentSection 
        jmp        endswitch__hla_3915
case__hla_3918:
        movb       $2, currentSection 
        jmp        endswitch__hla_3915
case__hla_3919:
        movb       $3, currentSection 
        jmp        endswitch__hla_3915
case__hla_3920:
        mov        13(%ebx), %eax 
        subl       $1, %eax 
        addl       %eax, %ecx 
        notl       %eax 
        andl       %eax, %ecx 
        jmp        endswitch__hla_3915
case__hla_3921:
        addl       13(%ebx), %ecx 
        jmp        endswitch__hla_3915
case__hla_3922:
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        %ecx, 12(%eax) 
        mov        currentSection, %dl 
        mov        %dl, 20(%eax) 
        jmp        endswitch__hla_3915
case__hla_3923:
        addl       13(%ebx), %ecx 
        jmp        endswitch__hla_3915
case__hla_3924:
        mov        13(%ebx), %eax 
        imull      17(%ebx), %eax 
        addl       %eax, %ecx 
        jmp        endswitch__hla_3915
case__hla_3925:
        addl       $2, %ecx 
        mov        17(%ebx), %eax 
        cmpl       $0, %eax 
        je         false__hla_3926
        mov        4(%eax), %edx 
        cmpl       $0, %edx 
        je         false__hla_3927
        mov        21(%edx), %dl 
        testb      $1, %dl 
        jz         false__hla_3928
        pushl      $str__hla_3929 
        call       STDERR_PUTS
        pushl      8(%eax) 
        call       STDERR_PUTS
        pushl      $str__hla_3930 
        call       STDERR_PUTS
        call       printLineNumberChain
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_3928:
false__hla_3927:
false__hla_3926:
        jmp        endswitch__hla_3915
case__hla_3931:
        addl       $1, %ecx 
        mov        12(%ebp), %eax 
        addl       %eax, %ecx 
        mov        %al, 32(%ebx) 
        cmpb       $1, %al 
        jna        false__hla_3932
        addl       $1, %ecx 
false__hla_3932:
        jmp        endswitch__hla_3915
case__hla_3933:
        mov        12(%ebp), %eax 
        lea        1(%ecx,%eax,1), %ecx 
        mov        %al, 31(%ebx) 
        jmp        endswitch__hla_3915
case__hla_3934:
        addl       $3, %ecx 
        jmp        endswitch__hla_3915
case__hla_3935:
        addl       $5, %ecx 
        jmp        endswitch__hla_3915
case__hla_3936:
        addl       $4, %ecx 
        jmp        endswitch__hla_3915
default__hla_3915:
        pushl      $str__hla_3899 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTU8
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
endswitch__hla_3915:
        mov        4(%ebx), %ebx 
continue__hla_3913:
        cmpl       $0, %ebx 
        jne        while__hla_3913
exitloop__hla_3913:

        movl       %ecx, %eax 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
xsectionPass__hla_3910__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $12
firstPass__hla_3907:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $8, %esp 
        movb       $1, currentSection 
        movl       $0, codeStart__hla_3323 
        pushl      24(%ebp) 
        pushl      12(%ebp) 
        pushl      codeStart__hla_3323 
        call       sectionPass__hla_3910
        mov        %eax, codeEnd__hla_3324 
        cmpb       $3, 8(%ebp) 
        jne        false__hla_3942
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, dataStart__hla_3325 
        jmp        endif__hla_3942
false__hla_3942:
        movl       $0, dataStart__hla_3325 
endif__hla_3942:
        movb       $2, currentSection 
        pushl      20(%ebp) 
        pushl      12(%ebp) 
        pushl      dataStart__hla_3325 
        call       sectionPass__hla_3910
        mov        %eax, dataEnd__hla_3326 
        cmpb       $3, 8(%ebp) 
        jne        false__hla_3943
        addl       $15, %eax 
        andl       $-16, %eax 
        jmp        endif__hla_3943
false__hla_3943:
        xorl       %eax, %eax 
endif__hla_3943:
        mov        %eax, bssStart__hla_3327 
        movb       $3, currentSection 
        pushl      16(%ebp) 
        pushl      12(%ebp) 
        pushl      %eax 
        call       sectionPass__hla_3910
        mov        %eax, bssEnd__hla_3328 
xfirstPass__hla_3907__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $20
computeDisplacement__hla_3952:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        mov        12(%ebp), %ecx 
        mov        8(%ebp), %ebx 
        mov        17(%ebx), %eax 
        mov        4(%eax), %edx 
        testb      $9, 21(%edx) 
        jnz        false__hla_3955
        pushl      $str__hla_3956 
        call       STDERR_PUTS
        pushl      8(%eax) 
        call       STDERR_PUTS
        call       STDERR_NEWLN
        call       printLineNumberChain
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_3955:
        mov        20(%edx), %al 
        mov        21(%edx), %ah 
        andb       $3, %ah 
        testb      %al, %al 
        jne        false__hla_3957
        mov        $1, %eax 
        jmp        endif__hla_3957
false__hla_3957:
        cmpb       $1, %ah 
        jne        false__hla_3958
        mov        $4, %eax 
        jmp        endif__hla_3957
false__hla_3958:
        cmpb       currentSection, %al 
        je         false__hla_3959
        mov        $4, %eax 
        jmp        endif__hla_3957
false__hla_3959:
        mov        12(%edx), %eax 
        subl       %ecx, %eax 
        mov        %eax, 13(%ebx) 
        cmpl       $-128, %eax 
        jnge       false__hla_3960
        cmpl       $127, %eax 
        jnle       false__hla_3960
        mov        $1, %eax 
        jmp        endif__hla_3960
false__hla_3960:
        mov        $4, %eax 
endif__hla_3960:
endif__hla_3957:
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
xcomputeDisplacement__hla_3952__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $8
doPhase__hla_3967:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $4, %esp 
        mov        8(%ebp), %ecx 
        mov        20(%ebp), %ebx 
        jmp        continue__hla_3970
while__hla_3970:
        mov        9(%ebx), %eax 
        mov        %eax, -4(%ebp) 
        mov        %ecx, 9(%ebx) 
        movzbl     8(%ebx), %eax 
        cmpl       $21, %eax 
        jg         default__hla_3972
        jmp *      jmpTbl__hla_3972(,%eax,4) 
case__hla_3973:
        jmp        endswitch__hla_3972
case__hla_3974:
        movb       $1, currentSection 
        jmp        endswitch__hla_3972
case__hla_3975:
        movb       $2, currentSection 
        jmp        endswitch__hla_3972
case__hla_3976:
        movb       $3, currentSection 
        jmp        endswitch__hla_3972
case__hla_3977:
        mov        -4(%ebp), %eax 
        cmpl       9(%ebx), %eax 
        je         false__hla_3978
        mov        16(%ebp), %eax 
        movb       $1, (%eax) 
false__hla_3978:
        jmp        endswitch__hla_3972
case__hla_3979:
        mov        13(%ebx), %eax 
        subl       $1, %eax 
        addl       %eax, %ecx 
        notl       %eax 
        andl       %eax, %ecx 
        mov        4(%ebx), %eax 
        cmpl       9(%eax), %ecx 
        je         false__hla_3980
        mov        16(%ebp), %edx 
        movb       $1, (%edx) 
false__hla_3980:
        jmp        endswitch__hla_3972
case__hla_3981:
        addl       13(%ebx), %ecx 
        jmp        endswitch__hla_3972
case__hla_3982:
        addl       13(%ebx), %ecx 
        jmp        endswitch__hla_3972
case__hla_3983:
        mov        13(%ebx), %eax 
        imull      17(%ebx), %eax 
        addl       %eax, %ecx 
        jmp        endswitch__hla_3972
case__hla_3984:
        addl       $2, %ecx 
        mov        -4(%ebp), %eax 
        addl       $2, %eax 
        pushl      %eax 
        pushl      %ebx 
        call       computeDisplacement__hla_3952
        jmp        endswitch__hla_3972
case__hla_3985:
        mov        $2, %eax 
        mov        $1, %edx 
        cmpb       $4, 32(%ebx) 
        jne        false__hla_3986
        addl       $3, %edx 
        addl       $4, %eax 
false__hla_3986:
        addl       %eax, %ecx 
        addl       -4(%ebp), %eax 
        pushl      %eax 
        pushl      %ebx 
        call       computeDisplacement__hla_3952
        cmpb       %dl, %al 
        je         false__hla_3987
        cmpb       12(%ebp), %al 
        jne        false__hla_3987
        mov        %al, 32(%ebx) 
        mov        16(%ebp), %edx 
        movb       $1, (%edx) 
false__hla_3987:
        jmp        endswitch__hla_3972
case__hla_3989:
        addl       $1, %ecx 
        movzbl     31(%ebx), %edx 
        addl       %edx, %ecx 
        mov        -4(%ebp), %eax 
        addl       $1, %eax 
        addl       %edx, %eax 
        pushl      %eax 
        pushl      %ebx 
        call       computeDisplacement__hla_3952
        cmpb       %dl, %al 
        je         false__hla_3990
        cmpb       12(%ebp), %al 
        jne        false__hla_3990
        mov        12(%ebp), %al 
        mov        %al, 31(%ebx) 
        mov        16(%ebp), %edx 
        movb       $1, (%edx) 
false__hla_3990:
        jmp        endswitch__hla_3972
case__hla_3992:
        addl       $3, %ecx 
        mov        -4(%ebp), %eax 
        addl       $3, %eax 
        pushl      %eax 
        pushl      %ebx 
        call       computeDisplacement__hla_3952
        jmp        endswitch__hla_3972
case__hla_3993:
        addl       $5, %ecx 
        mov        -4(%ebp), %eax 
        addl       $5, %eax 
        pushl      %eax 
        pushl      %ebx 
        call       computeDisplacement__hla_3952
        jmp        endswitch__hla_3972
case__hla_3994:
        addl       $4, %ecx 
        jmp        endswitch__hla_3972
default__hla_3972:
        pushl      $str__hla_3899 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTU8
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
endswitch__hla_3972:
        mov        4(%ebx), %ebx 
continue__hla_3970:
        cmpl       $0, %ebx 
        jne        while__hla_3970
exitloop__hla_3970:

        mov        20(%ebp), %ebx 
        jmp        continue__hla_3995
while__hla_3995:
        cmpb       $3, 8(%ebx) 
        jne        false__hla_3997
        mov        9(%ebx), %edx 
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        cmpl       12(%eax), %edx 
        je         false__hla_3998
        mov        %edx, 12(%eax) 
        mov        16(%ebp), %edx 
        movb       $1, (%edx) 
false__hla_3998:
false__hla_3997:
        mov        4(%ebx), %ebx 
continue__hla_3995:
        cmpl       $0, %ebx 
        jne        while__hla_3995
exitloop__hla_3995:

xdoPhase__hla_3967__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $16
dispPhase__hla_3949:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $20, %esp 
        mov        %ebx, -4(%ebp) 
        mov        %ecx, -8(%ebp) 
        mov        %edx, -12(%ebp) 
        movl       $0, -16(%ebp) 
false__hla_4004:
repeat__hla_4004:
        movb       $0, -17(%ebp) 
        movl       $0, codeStart__hla_3323 
        pushl      24(%ebp) 
        pushl      %ebp 
        addl       $-17, (%esp) 
        pushl      12(%ebp) 
        pushl      codeStart__hla_3323 
        call       doPhase__hla_3967
        mov        %ecx, codeEnd__hla_3324 
        cmpb       $3, 8(%ebp) 
        jne        false__hla_4005
        addl       $15, %ecx 
        andl       $-16, %ecx 
        jmp        endif__hla_4005
false__hla_4005:
        xorl       %ecx, %ecx 
endif__hla_4005:
        mov        %ecx, dataStart__hla_3325 
        pushl      20(%ebp) 
        pushl      %ebp 
        addl       $-17, (%esp) 
        pushl      12(%ebp) 
        pushl      %ecx 
        call       doPhase__hla_3967
        mov        %ecx, dataEnd__hla_3326 
        cmpb       $3, 8(%ebp) 
        jne        false__hla_4006
        addl       $15, %ecx 
        andl       $-16, %ecx 
        mov        %ecx, bssStart__hla_3327 
        pushl      16(%ebp) 
        pushl      %ebp 
        addl       $-17, (%esp) 
        pushl      12(%ebp) 
        pushl      %ecx 
        call       doPhase__hla_3967
        mov        %ecx, bssEnd__hla_3328 
false__hla_4006:
        addl       $1, -16(%ebp) 
        cmpl       $16384, -16(%ebp) 
        ja         exitloop__hla_4004
continue__hla_4004:
        cmpb       $0, -17(%ebp) 
        jne        repeat__hla_4004
exitloop__hla_4004:

        mov        -16(%ebp), %eax 
        mov        -4(%ebp), %ebx 
        mov        -8(%ebp), %ecx 
        mov        -12(%ebp), %edx 
xdispPhase__hla_3949__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $20
cleanupPass__hla_4016:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %esi 
        mov        16(%ebp), %ebx 
        xorl       %esi, %esi 
        jmp        continue__hla_4019
while__hla_4019:
        mov        9(%ebx), %ecx 
        movzbl     8(%ebx), %eax 
        cmpl       $21, %eax 
        jg         default__hla_4021
        jmp *      jmpTbl__hla_4021(,%eax,4) 
case__hla_4022:
        jmp        endswitch__hla_4021
case__hla_4023:
        mov        13(%ebx), %edx 
        mov        4(%edx), %eax 
        movb       $1, 22(%eax) 
        movl       %ecx, %edx 
        subl       12(%eax), %edx 
        mov        %edx, 16(%eax) 
        jmp        endswitch__hla_4021
case__hla_4024:
        mov        13(%ebx), %edx 
        mov        4(%edx), %eax 
        mov        %ecx, 12(%eax) 
        testb      $9, 21(%eax) 
        jnz        false__hla_4025
        pushl      $str__hla_4026 
        call       STDERR_PUTS
        pushl      8(%edx) 
        call       STDERR_PUTS
        pushl      $str__hla_4027 
        call       STDERR_PUTS
        call       printLineNumberChain
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_4025:
        jmp        endswitch__hla_4021
case__hla_4028:
        mov        13(%ebx), %eax 
        cmpl       $-128, %eax 
        jl         L4030__hla_
        cmpl       $127, %eax 
        jng        false__hla_4029
L4030__hla_:
        pushl      $str__hla_4031 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTI32
        pushl      $str__hla_4032 
        call       STDERR_PUTS
        call       printLineNumberChain
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_4029:
        jmp        endswitch__hla_4021
case__hla_4033:
        mov        13(%ebx), %eax 
        cmpl       $-128, %eax 
        jl         L4035__hla_
        cmpl       $127, %eax 
        jng        false__hla_4034
L4035__hla_:
        pushl      $str__hla_4031 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTI32
        pushl      $str__hla_4032 
        call       STDERR_PUTS
        call       printLineNumberChain
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_4034:
        jmp        endswitch__hla_4021
case__hla_4036:
        cmpb       $4, 32(%ebx) 
        jne        false__hla_4037
        cmpl       $0, 17(%ebx) 
        je         false__hla_4038
        mov        17(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        20(%eax), %dl 
        mov        21(%eax), %dh 
        andb       $3, %dh 
        cmpb       $1, %dh 
        je         L4040__hla_
        cmpb       12(%ebp), %dl 
        je         false__hla_4039
L4040__hla_:
        addl       $1, %esi 
false__hla_4039:
false__hla_4038:
false__hla_4037:
        jmp        endswitch__hla_4021
case__hla_4041:
        cmpb       $4, 31(%ebx) 
        jne        false__hla_4042
        cmpl       $0, 17(%ebx) 
        je         false__hla_4043
        mov        17(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        20(%eax), %dl 
        mov        21(%eax), %dh 
        andb       $3, %dh 
        cmpb       $1, %dh 
        je         L4045__hla_
        cmpb       12(%ebp), %dl 
        jne        L4045__hla_
        testb      %dh, %dh 
        je         false__hla_4044
        cmpb       $1, 8(%ebp) 
        jnae       false__hla_4044
        cmpb       $2, 8(%ebp) 
        jnbe       false__hla_4044
L4045__hla_:
        addl       $1, %esi 
false__hla_4044:
false__hla_4043:
false__hla_4042:
        jmp        endswitch__hla_4021
case__hla_4049:
        cmpl       $0, 17(%ebx) 
        je         false__hla_4050
        mov        17(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        20(%eax), %dl 
        mov        21(%eax), %dh 
        andb       $3, %dh 
        testb      $1, %dh 
        jnz        L4052__hla_
        cmpb       12(%ebp), %dl 
        jne        L4052__hla_
        testb      %dh, %dh 
        je         false__hla_4051
        cmpb       $1, 8(%ebp) 
        jnae       false__hla_4051
        cmpb       $2, 8(%ebp) 
        jnbe       false__hla_4051
L4052__hla_:
        addl       $1, %esi 
false__hla_4051:
false__hla_4050:
        jmp        endswitch__hla_4021
case__hla_4056:
        addl       $1, %esi 
        jmp        endswitch__hla_4021
default__hla_4021:
        pushl      $str__hla_3899 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTU8
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
endswitch__hla_4021:
        mov        4(%ebx), %ebx 
continue__hla_4019:
        cmpl       $0, %ebx 
        jne        while__hla_4019
exitloop__hla_4019:

        movl       %ecx, %eax 
        movl       %esi, %edx 
        popl       %esi 
        popl       %ecx 
        popl       %ebx 
xcleanupPass__hla_4016__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $12
finalPass__hla_4013:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $8, %esp 
        pushl      %eax 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      20(%ebp) 
        pushl      $1 
        pushl      8(%ebp) 
        call       cleanupPass__hla_4016
        mov        %eax, codeEnd__hla_3324 
        mov        %edx, numCodeRelocs 
        pushl      16(%ebp) 
        pushl      $2 
        pushl      8(%ebp) 
        call       cleanupPass__hla_4016
        mov        %eax, dataEnd__hla_3326 
        mov        %edx, numDataRelocs 
        pushl      12(%ebp) 
        pushl      $3 
        pushl      8(%ebp) 
        call       cleanupPass__hla_4016
        mov        %eax, bssEnd__hla_3328 
        testl      %edx, %edx 
        je         false__hla_4062
        pushl      $str__hla_4063 
        call       STDERR_PUTS
        mov        $8, %eax 
        jmp        Raise__hla_
false__hla_4062:
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4064 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        mov        4(%eax), %ebx 
        cmpl       $0, %ebx 
        jne        _0fe1_skipAssertion___hla_4069
        pushl      _0fe2_msg___hla_4067 
        popl       AssertionStr 
        mov        $12, %eax 
        jmp        Raise__hla_

_0fe1_skipAssertion___hla_4069:
        mov        21(%ebx), %cl 
        andb       $13, %cl 
        cmpb       $4, %cl 
        jne        false__hla_4070
        pushl      $str__hla_4071 
        call       STDERR_PUTS
        pushl      8(%eax) 
        call       STDERR_PUTS
        call       STDERR_NEWLN
        mov        $16, %eax 
        jmp        Raise__hla_
false__hla_4070:
continue__hla_4064:
        popl       %ebp 
        ret        $4
exitfor__hla_4064:

        popl       %edx 
        popl       %ecx 
        popl       %ebx 
        popl       %eax 
xfinalPass__hla_4013__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $16
optimizeDisps:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $12, %esp 
        cmpb       $0, verboseDebug__hla_3329 
        je         false__hla_4077
        pushl      $str__hla_4078 
        call       STDOUT_PUTS
false__hla_4077:
        pushl      24(%ebp) 
        pushl      20(%ebp) 
        pushl      16(%ebp) 
        pushl      $1 
        pushl      8(%ebp) 
        call       firstPass__hla_3907
        pushl      24(%ebp) 
        pushl      20(%ebp) 
        pushl      16(%ebp) 
        pushl      $4 
        pushl      8(%ebp) 
        call       dispPhase__hla_3949
        mov        %eax, -4(%ebp) 
        cmpl       $16384, %eax 
        jna        false__hla_4079
        pushl      $str__hla_4080 
        call       STDOUT_PUTS
        pushl      24(%ebp) 
        pushl      20(%ebp) 
        pushl      16(%ebp) 
        pushl      $4 
        pushl      8(%ebp) 
        call       firstPass__hla_3907
        mov        %eax, -8(%ebp) 
        mov        %edx, -12(%ebp) 
        pushl      24(%ebp) 
        pushl      20(%ebp) 
        pushl      16(%ebp) 
        pushl      $1 
        pushl      8(%ebp) 
        call       dispPhase__hla_3949
        mov        %eax, -4(%ebp) 
        pushl      24(%ebp) 
        pushl      20(%ebp) 
        pushl      16(%ebp) 
        pushl      8(%ebp) 
        call       finalPass__hla_4013
        cmpb       $0, 12(%ebp) 
        je         false__hla_4081
        pushl      $str__hla_4082 
        call       STDOUT_PUTS
        pushl      -4(%ebp) 
        call       STDOUT_PUTU32
        pushl      $str__hla_4083 
        call       STDOUT_PUTS
false__hla_4081:
        jmp        endif__hla_4079
false__hla_4079:
        pushl      24(%ebp) 
        pushl      20(%ebp) 
        pushl      16(%ebp) 
        pushl      8(%ebp) 
        call       finalPass__hla_4013
        cmpb       $0, 12(%ebp) 
        je         false__hla_4084
        pushl      $str__hla_4082 
        call       STDOUT_PUTS
        pushl      -4(%ebp) 
        call       STDOUT_PUTU32
        pushl      $str__hla_4085 
        call       STDOUT_PUTS
false__hla_4084:
endif__hla_4079:
        mov        codeEnd__hla_3324, %eax 
        subl       codeStart__hla_3323, %eax 
        mov        %eax, codeSize 
        mov        dataEnd__hla_3326, %eax 
        subl       dataStart__hla_3325, %eax 
        mov        %eax, dataSize 
        mov        bssEnd__hla_3328, %eax 
        subl       bssStart__hla_3327, %eax 
        mov        %eax, bssSize 
xoptimizeDisps__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $20
getSymbol__hla_4097:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %eax 
        pushl      %ebx 
        imul       $18, 12(%ebp), %ebx 
        addl       COFFsyms__hla_3311, %ebx 
        mov        (%ebx), %eax 
        testl      %eax, %eax 
        je         false__hla_4100
        pushl      8(%ebx) 
        movl       $0, 8(%ebx) 
        lea        (%ebx), %eax 
        pushl      %eax 
        pushl      8(%ebp) 
        call       STR_CPYZ
        popl       8(%ebx) 
        jmp        endif__hla_4100
false__hla_4100:
        mov        4(%ebx), %eax 
        addl       stringTable__hla_3320, %eax 
        pushl      %eax 
        pushl      8(%ebp) 
        call       STR_CPYZ
endif__hla_4100:
        popl       %ebx 
        popl       %eax 
xgetSymbol__hla_4097__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $8
dumpRelocs__hla_4106:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $1028, %esp 
        pushl      %eax 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %ebp 
        addl       $-1028, (%esp) 
        pushl      $1024 
        call       STR_INIT
        mov        %eax, -4(%ebp) 
        call       STDOUT_NEWLN
        pushl      16(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4109 
        call       STDOUT_PUTS
        mov        12(%ebp), %ebx 
        mov        $0, %ecx 

        jmp        StartFor__hla_4110
for__hla_4110:
        pushl      4(%ebx) 
        pushl      -4(%ebp) 
        call       getSymbol__hla_4097
        pushl      %ecx 
        call       STDOUT_PUTU32
        pushl      $str__hla_4111 
        call       STDOUT_PUTS
        pushl      (%ebx) 
        call       STDOUT_PUTD
        pushl      $str__hla_4112 
        call       STDOUT_PUTS
        pushl      -4(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4113 
        call       STDOUT_PUTS
        movzwl     8(%ebx), %eax 
        cmpl       $20, %eax 
        jg         default__hla_4114
        jmp *      jmpTbl__hla_4114(,%eax,4) 
case__hla_4115:
        pushl      $str__hla_4116 
        call       STDOUT_PUTS
        jmp        endswitch__hla_4114
case__hla_4117:
        pushl      $str__hla_4118 
        call       STDOUT_PUTS
        jmp        endswitch__hla_4114
case__hla_4119:
        pushl      $str__hla_4120 
        call       STDOUT_PUTS
        jmp        endswitch__hla_4114
case__hla_4121:
        pushl      $str__hla_4122 
        call       STDOUT_PUTS
        jmp        endswitch__hla_4114
default__hla_4114:
        pushl      $str__hla_4123 
        call       STDOUT_PUTS
        pushl      %eax 
        call       STDOUT_PUTD
endswitch__hla_4114:
        call       STDOUT_NEWLN
        addl       $10, %ebx 
continue__hla_4110:
        incl       %ecx 

StartFor__hla_4110:
        cmpl       8(%ebp), %ecx 
        jb         for__hla_4110
exitloop__hla_4110:

        popl       %ecx 
        popl       %ebx 
        popl       %eax 
xdumpRelocs__hla_4106__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $12
generateCOFF__hla_4091:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $192, %esp 
        pushl      %eax 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        cmpb       $0, verboseDebug__hla_3329 
        je         false__hla_4129
        pushl      $str__hla_4130 
        call       STDOUT_PUTS
        pushl      24(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4131 
        call       STDOUT_PUTS
        pushl      20(%ebp) 
        call       STDOUT_PUTS
        call       STDOUT_NEWLN
false__hla_4129:
        movl       $65536, strTblSize__hla_3322 
        pushl      $65536 
        call       MEM_ALLOC1
        mov        %eax, stringTable__hla_3320 
        movl       $4, strTblOffset__hla_3321 
        pushl      $73728 
        call       MEM_ALLOC1
        mov        %eax, COFFsyms__hla_3311 
        movl       %eax, %ebx 
        movl       $73728, coffSymSize__hla_3313 
        movl       $0, numCOFFsyms__hla_3312 
        movb       $46, (%ebx) 
        movb       $102, 1(%ebx) 
        movb       $105, 2(%ebx) 
        movb       $108, 3(%ebx) 
        movb       $101, 4(%ebx) 
        movb       $0, 5(%ebx) 
        movb       $0, 6(%ebx) 
        movb       $0, 7(%ebx) 
        movl       $0, 8(%ebx) 
        movw       $2, 12(%ebx) 
        movw       $0, 14(%ebx) 
        movb       $103, 16(%ebx) 
        pushl      24(%ebp) 
        call       STR_LENGTH
        addl       $18, %eax 
        xorl       %edx, %edx 
        divl       divisor__hla_4132 
        mov        %al, 17(%ebx) 
        addl       $1, %eax 
        mov        %eax, numCOFFsyms__hla_3312 
        lea        18(%ebx), %eax 
        pushl      24(%ebp) 
        pushl      %eax 
        call       ZSTR_CPY
        mov        numCodeRelocs, %eax 
        cmpl       $65535, %eax 
        jnae       false__hla_4133
        mov        $65535, %ax 
        addl       $1, numCodeRelocs 
false__hla_4133:
        mov        %ax, CodeAuxSection__hla_4092+4 
        mov        codeSize, %eax 
        mov        %eax, CodeAuxSection__hla_4092 
        pushl      $str__hla_4134 
        pushl      $0 
        pushl      $1 
        pushl      $0 
        pushl      $3 
        pushl      $1 
        pushl      $CodeAuxSection__hla_4092 
        call       addCOFFsym__hla_3775
        addl       COFFsyms__hla_3311, %eax 
        mov        %eax, -172(%ebp) 
        mov        numDataRelocs, %eax 
        cmpl       $65535, %eax 
        jnae       false__hla_4135
        mov        $65535, %ax 
        addl       $1, numDataRelocs 
false__hla_4135:
        mov        %ax, DataAuxSection__hla_4093+4 
        mov        dataSize, %eax 
        mov        %eax, DataAuxSection__hla_4093 
        pushl      $str__hla_4136 
        pushl      $0 
        pushl      $2 
        pushl      $0 
        pushl      $3 
        pushl      $1 
        pushl      $DataAuxSection__hla_4093 
        call       addCOFFsym__hla_3775
        addl       COFFsyms__hla_3311, %eax 
        mov        %eax, -176(%ebp) 
        mov        bssSize, %eax 
        mov        %eax, BssAuxSection__hla_4094 
        pushl      $str__hla_4137 
        pushl      $0 
        pushl      $3 
        pushl      $0 
        pushl      $3 
        pushl      $1 
        pushl      $BssAuxSection__hla_4094 
        call       addCOFFsym__hla_3775
        addl       COFFsyms__hla_3311, %eax 
        mov        %eax, -180(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4138 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        mov        4(%edx), %ebx 
        movzbw     20(%ebx), %cx 
        mov        12(%ebx), %edi 
        testb      $1, 21(%ebx) 
        jz         false__hla_4139
        mov        $2, %al 
        mov        $0, %cx 
        xorl       %edi, %edi 
        jmp        endif__hla_4139
false__hla_4139:
        testb      $2, 21(%ebx) 
        jz         false__hla_4140
        mov        $2, %al 
        jmp        endif__hla_4140
false__hla_4140:
        mov        $3, %al 
endif__hla_4140:
endif__hla_4139:
        pushl      8(%edx) 
        pushl      12(%ebx) 
        pushl      %ecx 
        pushl      $0 
        pushl      %eax 
        pushl      $0 
        pushl      $0 
        call       addCOFFsym__hla_3775
        mov        %eax, 8(%ebx) 
continue__hla_4138:
        popl       %ebp 
        ret        $4
exitfor__hla_4138:

        movw       $332, -32(%ebp) 
        movw       $3, -30(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        call       TIME_UTCDATETIME
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        call       TIME_TOUNIXTIME
        mov        %eax, -28(%ebp) 
        movl       $0, -24(%ebp) 
        movl       $0, -20(%ebp) 
        movw       $0, -16(%ebp) 
        movw       $256, -14(%ebp) 
        movb       $46, -72(%ebp) 
        movb       $116, -71(%ebp) 
        movb       $101, -70(%ebp) 
        movb       $120, -69(%ebp) 
        movb       $116, -68(%ebp) 
        movb       $0, -67(%ebp) 
        movb       $0, -66(%ebp) 
        movb       $0, -65(%ebp) 
        mov        codeSize, %eax 
        mov        %eax, -64(%ebp) 
        mov        %eax, -56(%ebp) 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -164(%ebp) 
        mov        numCodeRelocs, %edx 
        cmpl       $65535, %edx 
        jnb        false__hla_4141
        mov        %dx, -40(%ebp) 
        movzwl     %dx, %eax 
        imul       $10, %eax, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -156(%ebp) 
        movl       $1615855648, -36(%ebp) 
        jmp        endif__hla_4141
false__hla_4141:
        movw       $65535, -40(%ebp) 
        imul       $10, %edx, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -156(%ebp) 
        mov        %edx, (%eax) 
        movl       $0, 4(%eax) 
        movw       $0, 8(%eax) 
        movl       $1632632864, -36(%ebp) 
endif__hla_4141:
        movl       $0, -60(%ebp) 
        movl       $0, -52(%ebp) 
        movl       $0, -48(%ebp) 
        movl       $0, -44(%ebp) 
        movw       $0, -38(%ebp) 
        pushl      16(%ebp) 
        pushl      codeStart__hla_3323 
        pushl      -156(%ebp) 
        pushl      numCodeRelocs 
        pushl      -164(%ebp) 
        pushl      $1 
        pushl      $0 
        call       buildRaw__hla_3813
        movb       $46, -112(%ebp) 
        movb       $100, -111(%ebp) 
        movb       $97, -110(%ebp) 
        movb       $116, -109(%ebp) 
        movb       $97, -108(%ebp) 
        movb       $0, -107(%ebp) 
        movb       $0, -106(%ebp) 
        movb       $0, -105(%ebp) 
        mov        dataSize, %eax 
        mov        %eax, -104(%ebp) 
        mov        %eax, -96(%ebp) 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -168(%ebp) 
        mov        numDataRelocs, %edx 
        cmpl       $65535, %edx 
        jnb        false__hla_4142
        mov        %dx, -80(%ebp) 
        movzwl     %dx, %eax 
        imul       $10, %eax, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -160(%ebp) 
        movl       $-1068498880, -76(%ebp) 
        jmp        endif__hla_4142
false__hla_4142:
        movw       $65535, -80(%ebp) 
        imul       $10, %edx, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -160(%ebp) 
        mov        %edx, (%eax) 
        movl       $0, 4(%eax) 
        movw       $0, 8(%eax) 
        movl       $-1051721664, -76(%ebp) 
endif__hla_4142:
        movl       $0, -100(%ebp) 
        movl       $0, -92(%ebp) 
        movl       $0, -88(%ebp) 
        movl       $0, -84(%ebp) 
        movw       $0, -78(%ebp) 
        pushl      12(%ebp) 
        pushl      dataStart__hla_3325 
        pushl      -160(%ebp) 
        pushl      numDataRelocs 
        pushl      -168(%ebp) 
        pushl      $2 
        pushl      $0 
        call       buildRaw__hla_3813
        movb       $46, -152(%ebp) 
        movb       $98, -151(%ebp) 
        movb       $115, -150(%ebp) 
        movb       $115, -149(%ebp) 
        movl       $0, -148(%ebp) 
        mov        bssSize, %eax 
        mov        %eax, -136(%ebp) 
        movl       $0, -144(%ebp) 
        movw       $0, -120(%ebp) 
        movl       $0, -140(%ebp) 
        movl       $0, -132(%ebp) 
        movl       $0, -128(%ebp) 
        movl       $0, -124(%ebp) 
        movw       $0, -118(%ebp) 
        movl       $-1068498816, -116(%ebp) 
        mov        $140, %ecx 
        mov        %ecx, -52(%ebp) 
        addl       codeSize, %ecx 
        addl       $3, %ecx 
        andl       $-4, %ecx 
        mov        %ecx, -48(%ebp) 
        imul       $10, numCodeRelocs, %eax 
        addl       %eax, %ecx 
        addl       $3, %ecx 
        andl       $-4, %ecx 
        mov        %ecx, -92(%ebp) 
        addl       dataSize, %ecx 
        addl       $3, %ecx 
        andl       $-4, %ecx 
        mov        %ecx, -88(%ebp) 
        imul       $10, numDataRelocs, %eax 
        addl       %eax, %ecx 
        mov        %ecx, -24(%ebp) 
        mov        numCOFFsyms__hla_3312, %eax 
        mov        %eax, -20(%ebp) 
        imul       $18, %eax, %eax 
        addl       %eax, %ecx 
        addl       strTblOffset__hla_3321, %ecx 
        mov        %ecx, -188(%ebp) 
        pushl      %ecx 
        call       MEM_ZALLOC
        mov        %eax, -184(%ebp) 
        mov        -184(%ebp), %edi 
        lea        -32(%ebp), %esi 
        mov        $20, %ecx 
        cld
        rep movsb
        lea        -72(%ebp), %esi 
        mov        $40, %ecx 
        rep movsb
        lea        -112(%ebp), %esi 
        mov        $40, %ecx 
        rep movsb
        lea        -152(%ebp), %esi 
        mov        $40, %ecx 
        rep movsb
        mov        -164(%ebp), %esi 
        mov        codeSize, %ecx 
        rep movsb
        addl       $3, %edi 
        andl       $-4, %edi 
        mov        -156(%ebp), %esi 
        imul       $10, numCodeRelocs, %ecx 
        rep movsb
        addl       $3, %edi 
        andl       $-4, %edi 
        mov        -168(%ebp), %esi 
        mov        dataSize, %ecx 
        rep movsb
        addl       $3, %edi 
        andl       $-4, %edi 
        mov        -160(%ebp), %esi 
        imul       $10, numDataRelocs, %ecx 
        rep movsb
        mov        COFFsyms__hla_3311, %esi 
        imul       $18, numCOFFsyms__hla_3312, %ecx 
        rep movsb
        mov        stringTable__hla_3320, %esi 
        mov        strTblOffset__hla_3321, %eax 
        stosl
        addl       $4, %esi 
        lea        -4(%eax), %ecx 
        rep movsb
        pushl      20(%ebp) 
        call       FILEIO_OPENNEW
        mov        %eax, -192(%ebp) 
        pushl      -192(%ebp) 
        pushl      -184(%ebp) 
        pushl      -188(%ebp) 
        call       FILEIO_WRITE
        pushl      -192(%ebp) 
        call       FILEIO_CLOSE
        cmpb       $0, verboseDebug__hla_3329 
        je         false__hla_4143
        pushl      $str__hla_4144 
        call       STDOUT_PUTS
        pushl      numCOFFsyms__hla_3312 
        call       STDOUT_PUTU32
        pushl      $str__hla_4145 
        call       STDOUT_PUTS
        mov        COFFsyms__hla_3311, %ebx 
        xorl       %ecx, %ecx 
        jmp        continue__hla_4146
while__hla_4146:
        pushl      %ecx 
        call       STDOUT_PUTU32
        pushl      $str__hla_4111 
        call       STDOUT_PUTS
        mov        (%ebx), %eax 
        testl      %eax, %eax 
        jne        false__hla_4148
        mov        4(%ebx), %eax 
        addl       stringTable__hla_3320, %eax 
        pushl      %eax 
        call       STDOUT_PUTZS
        jmp        endif__hla_4148
false__hla_4148:
        pushl      8(%ebx) 
        movl       $0, 8(%ebx) 
        pushl      %ebx 
        call       STDOUT_PUTZS
        popl       8(%ebx) 
endif__hla_4148:
        pushl      $str__hla_4149 
        call       STDOUT_PUTS
        cmpb       $103, 16(%ebx) 
        jne        false__hla_4150
        lea        18(%ebx), %eax 
        pushl      %eax 
        call       STDOUT_PUTZS
        jmp        endif__hla_4150
false__hla_4150:
        cmpb       $3, 16(%ebx) 
        jne        false__hla_4151
        pushl      $str__hla_4152 
        call       STDOUT_PUTS
        jmp        endif__hla_4150
false__hla_4151:
        cmpb       $2, 16(%ebx) 
        jne        false__hla_4153
        cmpw       $0, 12(%ebx) 
        jne        false__hla_4154
        pushl      $str__hla_4155 
        call       STDOUT_PUTS
        jmp        endif__hla_4154
false__hla_4154:
        pushl      $str__hla_4156 
        call       STDOUT_PUTS
endif__hla_4154:
        jmp        endif__hla_4150
false__hla_4153:
        pushl      $str__hla_4157 
        call       STDOUT_PUTS
endif__hla_4150:
        call       STDOUT_NEWLN
        movzbl     17(%ebx), %eax 
        addl       $1, %eax 
        addl       %eax, %ecx 
        imul       $18, %eax, %eax 
        addl       %eax, %ebx 
continue__hla_4146:
        cmpl       numCOFFsyms__hla_3312, %ecx 
        jb         while__hla_4146
exitloop__hla_4146:

        pushl      $str__hla_4158 
        pushl      -156(%ebp) 
        pushl      numCodeRelocs 
        call       dumpRelocs__hla_4106
        pushl      $str__hla_4159 
        pushl      -160(%ebp) 
        pushl      numDataRelocs 
        call       dumpRelocs__hla_4106
false__hla_4143:
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
        popl       %eax 
xgenerateCOFF__hla_4091__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $20
generateELF__hla_4165:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $148, %esp 
        pushl      %eax 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        cmpb       $0, verboseDebug__hla_3329 
        je         false__hla_4177
        pushl      $str__hla_4178 
        call       STDOUT_PUTS
        pushl      28(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4131 
        call       STDOUT_PUTS
        pushl      24(%ebp) 
        call       STDOUT_PUTS
        call       STDOUT_NEWLN
false__hla_4177:
        pushl      $64 
        call       MEM_ZALLOC
        mov        %eax, -8(%ebp) 
        movl       $4, -140(%ebp) 
        movl       $5, -144(%ebp) 
        movl       $6, -148(%ebp) 
        lea        1(%eax), %edi 
        movl       $1, shstrtabSection__hla_4167 
        pushl      $str__hla_4179 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        movl       $11, symtabSection__hla_4168 
        pushl      $str__hla_4180 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        movl       $19, strtabSection__hla_4169 
        pushl      $str__hla_4181 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        mov        $27, %ebx 
        mov        %ebx, textSection__hla_4170 
        addl       $6, %ebx 
        pushl      $str__hla_4134 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        mov        %ebx, dataSection__hla_4171 
        addl       $6, %ebx 
        pushl      $str__hla_4136 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        mov        %ebx, bssSection__hla_4172 
        addl       $5, %ebx 
        pushl      $str__hla_4137 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        mov        %ebx, relTextSection__hla_4173 
        addl       $10, %ebx 
        pushl      $str__hla_4182 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        mov        %ebx, relDataSection__hla_4174 
        addl       $10, %ebx 
        pushl      $str__hla_4183 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        mov        %ebx, -104(%ebp) 
        movl       $7, -4(%ebp) 
        cmpl       $0, numCodeRelocs 
        je         false__hla_4184
        addl       $1, -4(%ebp) 
false__hla_4184:
        cmpl       $0, numDataRelocs 
        je         false__hla_4185
        addl       $1, -4(%ebp) 
false__hla_4185:
        imul       $40, -4(%ebp), %eax 
        mov        %eax, -96(%ebp) 
        movl       $262144, strTblSize__hla_3322 
        pushl      $262144 
        call       MEM_ZALLOC
        mov        %eax, stringTable__hla_3320 
        movl       $1, strTblOffset__hla_3321 
        pushl      $1048576 
        call       MEM_ZALLOC
        mov        %eax, ELFsyms__hla_3314 
        movl       %eax, %ebx 
        movl       $1048576, elfSymSize__hla_3316 
        movl       $1, numELFsyms__hla_3315 
        pushl      $0 
        pushl      $0 
        pushl      $0 
        pushl      $3 
        pushw      $0 
        pushw      -140(%ebp) 
        pushl      $0 
        call       addELFsym__hla_3787
        addl       $1, numELFsyms__hla_3315 
        pushl      $0 
        pushl      $0 
        pushl      $0 
        pushl      $3 
        pushw      $0 
        pushw      -144(%ebp) 
        pushl      $0 
        call       addELFsym__hla_3787
        addl       $1, numELFsyms__hla_3315 
        pushl      $0 
        pushl      $0 
        pushl      $0 
        pushl      $3 
        pushw      $0 
        pushw      -148(%ebp) 
        pushl      $0 
        call       addELFsym__hla_3787
        addl       $1, numELFsyms__hla_3315 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4186 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        mov        4(%eax), %ebx 
        movzbl     20(%ebx), %ecx 
        cmpl       $1, %ecx 
        jne        false__hla_4187
        mov        -140(%ebp), %ecx 
        jmp        endif__hla_4187
false__hla_4187:
        cmpl       $2, %ecx 
        jne        false__hla_4188
        mov        -144(%ebp), %ecx 
        jmp        endif__hla_4187
false__hla_4188:
        cmpl       $3, %ecx 
        jne        false__hla_4189
        mov        -148(%ebp), %ecx 
        jmp        endif__hla_4187
false__hla_4189:
        xorl       %ecx, %ecx 
endif__hla_4187:
        mov        12(%ebx), %edi 
        testb      $1, 21(%ebx) 
        jnz        false__hla_4190
        testb      $2, 21(%ebx) 
        jnz        false__hla_4191
        cmpb       $0, 22(%ebx) 
        je         false__hla_4192
        pushl      8(%edx) 
        pushl      %edi 
        pushl      16(%ebx) 
        pushl      $2 
        pushl      %ecx 
        pushl      $0 
        call       addELFsym__hla_3787
        jmp        endif__hla_4192
false__hla_4192:
        pushl      8(%edx) 
        pushl      %edi 
        pushl      $0 
        pushl      $0 
        pushl      %ecx 
        pushl      $0 
        call       addELFsym__hla_3787
endif__hla_4192:
        mov        numELFsyms__hla_3315, %eax 
        mov        %eax, 8(%ebx) 
        addl       $1, numELFsyms__hla_3315 
false__hla_4191:
false__hla_4190:
continue__hla_4186:
        popl       %ebp 
        ret        $4
exitfor__hla_4186:

        mov        numELFsyms__hla_3315, %eax 
        mov        %eax, symtabSection__hla_4168+28 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4193 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        mov        4(%eax), %ebx 
        movzbl     20(%ebx), %ecx 
        cmpl       $1, %ecx 
        jne        false__hla_4194
        mov        -140(%ebp), %ecx 
        jmp        endif__hla_4194
false__hla_4194:
        cmpl       $2, %ecx 
        jne        false__hla_4195
        mov        -144(%ebp), %ecx 
        jmp        endif__hla_4194
false__hla_4195:
        cmpl       $3, %ecx 
        jne        false__hla_4196
        mov        -148(%ebp), %ecx 
        jmp        endif__hla_4194
false__hla_4196:
        xorl       %ecx, %ecx 
endif__hla_4194:
        mov        12(%ebx), %edi 
        testb      $1, 21(%ebx) 
        jz         false__hla_4197
        cmpb       $0, 22(%ebx) 
        je         false__hla_4198
        mov        $18, %al 
        jmp        endif__hla_4198
false__hla_4198:
        mov        $16, %al 
endif__hla_4198:
        xorl       %ecx, %ecx 
        xorl       %edi, %edi 
        jmp        endif__hla_4197
false__hla_4197:
        testb      $2, 21(%ebx) 
        jz         false__hla_4199
        cmpb       $0, 22(%ebx) 
        je         false__hla_4200
        mov        $18, %al 
        jmp        endif__hla_4200
false__hla_4200:
        mov        $16, %al 
endif__hla_4200:
        jmp        endif__hla_4199
false__hla_4199:
        jmp        continue__hla_4193
endif__hla_4199:
endif__hla_4197:
        pushl      8(%edx) 
        pushl      %edi 
        pushl      16(%ebx) 
        pushl      %eax 
        pushl      %ecx 
        pushl      $0 
        call       addELFsym__hla_3787
        mov        numELFsyms__hla_3315, %eax 
        mov        %eax, 8(%ebx) 
        addl       $1, numELFsyms__hla_3315 
continue__hla_4193:
        popl       %ebp 
        ret        $4
exitfor__hla_4193:

        mov        codeSize, %eax 
        testl      %eax, %eax 
        je         false__hla_4201
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -84(%ebp) 
        imul       $8, numCodeRelocs, %eax 
        addl       $8, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -76(%ebp) 
        pushl      20(%ebp) 
        pushl      codeStart__hla_3323 
        pushl      -76(%ebp) 
        pushl      numCodeRelocs 
        pushl      -84(%ebp) 
        pushl      $1 
        pushl      8(%ebp) 
        call       buildRaw__hla_3813
false__hla_4201:
        mov        dataSize, %eax 
        testl      %eax, %eax 
        je         false__hla_4202
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -88(%ebp) 
        imul       $8, numDataRelocs, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -80(%ebp) 
        pushl      16(%ebp) 
        pushl      dataStart__hla_3325 
        pushl      -80(%ebp) 
        pushl      numDataRelocs 
        pushl      -88(%ebp) 
        pushl      $2 
        pushl      8(%ebp) 
        call       buildRaw__hla_3813
false__hla_4202:
        mov        $64, %eax 
        mov        %eax, -92(%ebp) 
        addl       -96(%ebp), %eax 
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, -100(%ebp) 
        addl       -104(%ebp), %eax 
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, -108(%ebp) 
        imul       $16, numELFsyms__hla_3315, %edx 
        addl       %edx, %eax 
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, -116(%ebp) 
        addl       strTblOffset__hla_3321, %eax 
        movl       %eax, %edx 
        addl       $15, %edx 
        andl       $-16, %edx 
        cmpl       $0, codeSize 
        je         false__hla_4203
        mov        %edx, -120(%ebp) 
        addl       codeSize, %edx 
        addl       $15, %edx 
        andl       $-16, %edx 
        jmp        endif__hla_4203
false__hla_4203:
        mov        -100(%ebp), %eax 
        mov        %eax, -120(%ebp) 
endif__hla_4203:
        cmpl       $0, dataSize 
        je         false__hla_4204
        mov        %edx, -128(%ebp) 
        addl       dataSize, %edx 
        addl       $15, %edx 
        andl       $-16, %edx 
        jmp        endif__hla_4204
false__hla_4204:
        mov        -100(%ebp), %eax 
        mov        %eax, -128(%ebp) 
endif__hla_4204:
        cmpl       $0, numCodeRelocs 
        je         false__hla_4205
        mov        %edx, -124(%ebp) 
        imul       $8, numCodeRelocs, %eax 
        addl       %eax, %edx 
        addl       $15, %edx 
        andl       $-16, %edx 
false__hla_4205:
        cmpl       $0, numDataRelocs 
        je         false__hla_4206
        mov        %edx, -132(%ebp) 
        imul       $8, numDataRelocs, %eax 
        addl       %eax, %edx 
false__hla_4206:
        mov        %edx, -16(%ebp) 
        pushl      %edx 
        call       MEM_ZALLOC
        mov        %eax, -12(%ebp) 
        pushl      -100(%ebp) 
        popl       -136(%ebp) 
        cld
        lea        -72(%ebp), %edi 
        mov        $52, %ecx 
        mov        $0, %al 
        rep stosb
        movw       $1, -56(%ebp) 
        movw       $3, -54(%ebp) 
        movl       $1, -52(%ebp) 
        movl       $0, -48(%ebp) 
        movl       $0, -44(%ebp) 
        mov        -92(%ebp), %eax 
        mov        %eax, -40(%ebp) 
        movl       $0, -36(%ebp) 
        movw       $52, -32(%ebp) 
        movw       $0, -30(%ebp) 
        movw       $0, -28(%ebp) 
        movw       $40, -26(%ebp) 
        mov        -4(%ebp), %eax 
        mov        %ax, -24(%ebp) 
        movw       $1, -22(%ebp) 
        lea        -72(%ebp), %ebx 
        movb       $127, (%ebx) 
        movb       $69, 1(%ebx) 
        movb       $76, 2(%ebx) 
        movb       $70, 3(%ebx) 
        movb       $1, 4(%ebx) 
        movb       $1, 5(%ebx) 
        movb       $1, 6(%ebx) 
        cmpb       $1, 8(%ebp) 
        jne        false__hla_4207
        movb       $0, 7(%ebx) 
        jmp        endif__hla_4207
false__hla_4207:
        cmpb       $2, 8(%ebp) 
        jne        false__hla_4208
        movb       $9, 7(%ebx) 
        jmp        endif__hla_4207
false__hla_4208:
        pushl      $str__hla_4209 
        call       STDERR_PUTS
        movb       $0, 7(%ebx) 
endif__hla_4207:
        mov        -100(%ebp), %eax 
        mov        %eax, shstrtabSection__hla_4167+16 
        mov        -104(%ebp), %eax 
        mov        %eax, shstrtabSection__hla_4167+20 
        mov        -108(%ebp), %eax 
        mov        %eax, symtabSection__hla_4168+16 
        imul       $16, numELFsyms__hla_3315, %eax 
        mov        %eax, symtabSection__hla_4168+20 
        mov        %eax, -112(%ebp) 
        mov        -116(%ebp), %eax 
        mov        %eax, strtabSection__hla_4169+16 
        mov        strTblOffset__hla_3321, %eax 
        mov        %eax, strtabSection__hla_4169+20 
        mov        -120(%ebp), %eax 
        mov        %eax, textSection__hla_4170+16 
        mov        codeSize, %eax 
        mov        %eax, textSection__hla_4170+20 
        mov        -128(%ebp), %eax 
        mov        %eax, dataSection__hla_4171+16 
        mov        dataSize, %eax 
        mov        %eax, dataSection__hla_4171+20 
        mov        bssSize, %eax 
        mov        %eax, bssSection__hla_4172+20 
        mov        -136(%ebp), %eax 
        mov        %eax, bssSection__hla_4172+16 
        cmpl       $0, numCodeRelocs 
        je         false__hla_4210
        mov        -124(%ebp), %eax 
        mov        %eax, relTextSection__hla_4173+16 
        imul       $8, numCodeRelocs, %eax 
        mov        %eax, relTextSection__hla_4173+20 
        mov        -140(%ebp), %eax 
        mov        %eax, relTextSection__hla_4173+28 
false__hla_4210:
        cmpl       $0, numDataRelocs 
        je         false__hla_4211
        mov        -132(%ebp), %eax 
        mov        %eax, relDataSection__hla_4174+16 
        imul       $8, numDataRelocs, %eax 
        mov        %eax, relDataSection__hla_4174+20 
        mov        -144(%ebp), %eax 
        mov        %eax, relDataSection__hla_4174+28 
false__hla_4211:
        cld
        mov        -12(%ebp), %edi 
        lea        -72(%ebp), %esi 
        mov        $52, %ecx 
        rep movsb
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        lea        NULLsection__hla_4166, %esi 
        mov        $40, %ecx 
        rep movsb
        lea        shstrtabSection__hla_4167, %esi 
        mov        $40, %ecx 
        rep movsb
        lea        symtabSection__hla_4168, %esi 
        mov        $40, %ecx 
        rep movsb
        lea        strtabSection__hla_4169, %esi 
        mov        $40, %ecx 
        rep movsb
        lea        textSection__hla_4170, %esi 
        mov        $40, %ecx 
        rep movsb
        lea        dataSection__hla_4171, %esi 
        mov        $40, %ecx 
        rep movsb
        lea        bssSection__hla_4172, %esi 
        mov        $40, %ecx 
        rep movsb
        cmpl       $0, numCodeRelocs 
        je         false__hla_4212
        lea        relTextSection__hla_4173, %esi 
        mov        $40, %ecx 
        rep movsb
false__hla_4212:
        cmpl       $0, numDataRelocs 
        je         false__hla_4213
        lea        relDataSection__hla_4174, %esi 
        mov        $40, %ecx 
        rep movsb
false__hla_4213:
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        -8(%ebp), %esi 
        mov        -104(%ebp), %ecx 
        cld
        rep movsb
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        ELFsyms__hla_3314, %esi 
        imul       $16, numELFsyms__hla_3315, %ecx 
        rep movsb
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        stringTable__hla_3320, %esi 
        mov        strTblOffset__hla_3321, %ecx 
        rep movsb
        cmpl       $0, codeSize 
        je         false__hla_4214
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        -84(%ebp), %esi 
        mov        codeSize, %ecx 
        rep movsb
false__hla_4214:
        cmpl       $0, dataSize 
        je         false__hla_4215
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        -88(%ebp), %esi 
        mov        dataSize, %ecx 
        rep movsb
false__hla_4215:
        cmpl       $0, numCodeRelocs 
        je         false__hla_4216
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        -76(%ebp), %esi 
        imul       $8, numCodeRelocs, %ecx 
        rep movsb
false__hla_4216:
        cmpl       $0, numDataRelocs 
        je         false__hla_4217
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        -80(%ebp), %esi 
        imul       $8, numDataRelocs, %ecx 
        rep movsb
false__hla_4217:
        pushl      24(%ebp) 
        call       FILEIO_OPENNEW
        mov        %eax, -20(%ebp) 
        pushl      -20(%ebp) 
        pushl      -12(%ebp) 
        pushl      -16(%ebp) 
        call       FILEIO_WRITE
        pushl      -20(%ebp) 
        call       FILEIO_CLOSE
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
        popl       %eax 
xgenerateELF__hla_4165__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $24
generateMacho__hla_4223:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $440, %esp 
        pushl      %eax 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        cmpb       $0, verboseDebug__hla_3329 
        je         false__hla_4226
        pushl      $str__hla_4227 
        call       STDOUT_PUTS
        pushl      24(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4131 
        call       STDOUT_PUTS
        pushl      20(%ebp) 
        call       STDOUT_PUTS
        call       STDOUT_NEWLN
false__hla_4226:
        movl       $262144, strTblSize__hla_3322 
        pushl      $262144 
        call       MEM_ZALLOC
        mov        %eax, stringTable__hla_3320 
        movl       $1, strTblOffset__hla_3321 
        pushl      $786432 
        call       MEM_ZALLOC
        mov        %eax, MachoSyms__hla_3317 
        movl       %eax, %ebx 
        movl       $786432, MachoSymSize__hla_3318 
        movl       $0, numMachoSyms__hla_3319 
        movl       $0, -20(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4228 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        mov        4(%eax), %ebx 
        movzbl     20(%ebx), %ecx 
        cmpl       $1, %ecx 
        jne        false__hla_4229
        mov        $1, %ecx 
        jmp        endif__hla_4229
false__hla_4229:
        cmpl       $2, %ecx 
        jne        false__hla_4230
        mov        $2, %ecx 
        jmp        endif__hla_4229
false__hla_4230:
        cmpl       $3, %ecx 
        jne        false__hla_4231
        mov        $3, %ecx 
        jmp        endif__hla_4229
false__hla_4231:
        xorl       %ecx, %ecx 
endif__hla_4229:
        mov        12(%ebx), %edi 
        testb      $3, 21(%ebx) 
        jnz        false__hla_4232
        pushl      8(%edx) 
        pushl      %edi 
        pushl      $14 
        pushl      %ecx 
        call       addMachoSym__hla_3798
        addl       $1, -20(%ebp) 
        mov        numMachoSyms__hla_3319, %eax 
        mov        %eax, 8(%ebx) 
        addl       $1, %eax 
        mov        %eax, numMachoSyms__hla_3319 
false__hla_4232:
continue__hla_4228:
        popl       %ebp 
        ret        $4
exitfor__hla_4228:

        movl       $0, -24(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4233 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        mov        4(%eax), %ebx 
        movzbl     20(%ebx), %ecx 
        cmpl       $1, %ecx 
        jne        false__hla_4234
        mov        $1, %ecx 
        jmp        endif__hla_4234
false__hla_4234:
        cmpl       $2, %ecx 
        jne        false__hla_4235
        mov        $2, %ecx 
        jmp        endif__hla_4234
false__hla_4235:
        cmpl       $3, %ecx 
        jne        false__hla_4236
        mov        $3, %ecx 
        jmp        endif__hla_4234
false__hla_4236:
        xorl       %ecx, %ecx 
endif__hla_4234:
        mov        12(%ebx), %edi 
        testb      $2, 21(%ebx) 
        jz         false__hla_4237
        pushl      8(%edx) 
        pushl      %edi 
        pushl      $15 
        pushl      %ecx 
        call       addMachoSym__hla_3798
        addl       $1, -24(%ebp) 
        mov        numMachoSyms__hla_3319, %eax 
        mov        %eax, 8(%ebx) 
        addl       $1, %eax 
        mov        %eax, numMachoSyms__hla_3319 
false__hla_4237:
continue__hla_4233:
        popl       %ebp 
        ret        $4
exitfor__hla_4233:

        movl       $0, -28(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4238 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        mov        4(%eax), %ebx 
        movzbl     20(%ebx), %ecx 
        cmpl       $1, %ecx 
        jne        false__hla_4239
        mov        $1, %ecx 
        jmp        endif__hla_4239
false__hla_4239:
        cmpl       $2, %ecx 
        jne        false__hla_4240
        mov        $2, %ecx 
        jmp        endif__hla_4239
false__hla_4240:
        cmpl       $3, %ecx 
        jne        false__hla_4241
        mov        $3, %ecx 
        jmp        endif__hla_4239
false__hla_4241:
        xorl       %ecx, %ecx 
endif__hla_4239:
        mov        12(%ebx), %edi 
        testb      $1, 21(%ebx) 
        jz         false__hla_4242
        pushl      8(%edx) 
        pushl      %edi 
        pushl      $1 
        pushl      %ecx 
        call       addMachoSym__hla_3798
        addl       $1, -28(%ebp) 
        mov        numMachoSyms__hla_3319, %eax 
        mov        %eax, 8(%ebx) 
        addl       $1, %eax 
        mov        %eax, numMachoSyms__hla_3319 
false__hla_4242:
continue__hla_4238:
        popl       %ebp 
        ret        $4
exitfor__hla_4238:

        mov        codeSize, %eax 
        testl      %eax, %eax 
        je         false__hla_4243
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, codeSize 
        pushl      %eax 
        call       MEM_ZALLOC
        mov        %eax, -12(%ebp) 
        imul       $8, numCodeRelocs, %eax 
        addl       $8, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -4(%ebp) 
        pushl      16(%ebp) 
        pushl      codeStart__hla_3323 
        pushl      -4(%ebp) 
        pushl      numCodeRelocs 
        pushl      -12(%ebp) 
        pushl      $1 
        pushl      $3 
        call       buildRaw__hla_3813
false__hla_4243:
        mov        dataSize, %eax 
        testl      %eax, %eax 
        je         false__hla_4244
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, dataSize 
        pushl      %eax 
        call       MEM_ZALLOC
        mov        %eax, -16(%ebp) 
        imul       $8, numDataRelocs, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -8(%ebp) 
        pushl      12(%ebp) 
        pushl      dataStart__hla_3325 
        pushl      -8(%ebp) 
        pushl      numDataRelocs 
        pushl      -16(%ebp) 
        pushl      $2 
        pushl      $3 
        call       buildRaw__hla_3813
false__hla_4244:
        addl       $15, bssSize 
        andl       $-16, bssSize 
        movl       $-17958194, -440(%ebp) 
        movl       $7, -436(%ebp) 
        movl       $3, -432(%ebp) 
        movl       $1, -428(%ebp) 
        movl       $3, -424(%ebp) 
        movl       $364, -420(%ebp) 
        movl       $0, -416(%ebp) 
        movl       $1, -412(%ebp) 
        movl       $260, -408(%ebp) 
        movl       $0, -404(%ebp) 
        movl       $0, -400(%ebp) 
        movl       $0, -396(%ebp) 
        movl       $0, -392(%ebp) 
        movl       $0, -388(%ebp) 
        mov        codeSize, %eax 
        addl       dataSize, %eax 
        mov        %eax, -376(%ebp) 
        addl       bssSize, %eax 
        mov        %eax, -384(%ebp) 
        movl       $392, -380(%ebp) 
        movl       $7, -372(%ebp) 
        movl       $7, -368(%ebp) 
        movl       $3, -364(%ebp) 
        movl       $0, -360(%ebp) 
        movl       $1702125407, -356(%ebp) 
        movl       $29816, -352(%ebp) 
        movl       $0, -348(%ebp) 
        movl       $0, -344(%ebp) 
        movl       $1163157343, -340(%ebp) 
        movl       $21592, -336(%ebp) 
        movl       $0, -332(%ebp) 
        movl       $0, -328(%ebp) 
        movl       $0, -324(%ebp) 
        mov        codeSize, %eax 
        mov        %eax, -320(%ebp) 
        movl       $392, -316(%ebp) 
        movl       $4, -312(%ebp) 
        mov        codeSize, %eax 
        addl       dataSize, %eax 
        addl       $392, %eax 
        mov        %eax, -308(%ebp) 
        mov        numCodeRelocs, %eax 
        mov        %eax, -304(%ebp) 
        movl       $1024, -300(%ebp) 
        movl       $0, -296(%ebp) 
        movl       $0, -292(%ebp) 
        movl       $1633967967, -288(%ebp) 
        movl       $24948, -284(%ebp) 
        movl       $0, -280(%ebp) 
        movl       $0, -276(%ebp) 
        movl       $1094999903, -272(%ebp) 
        movl       $16724, -268(%ebp) 
        movl       $0, -264(%ebp) 
        movl       $0, -260(%ebp) 
        mov        dataStart__hla_3325, %eax 
        mov        %eax, -256(%ebp) 
        mov        dataSize, %eax 
        mov        %eax, -252(%ebp) 
        mov        -316(%ebp), %eax 
        addl       codeSize, %eax 
        mov        %eax, -248(%ebp) 
        movl       $4, -244(%ebp) 
        imul       $8, numCodeRelocs, %eax 
        addl       -308(%ebp), %eax 
        mov        %eax, -240(%ebp) 
        mov        numDataRelocs, %eax 
        mov        %eax, -236(%ebp) 
        movl       $0, -232(%ebp) 
        movl       $0, -228(%ebp) 
        movl       $0, -224(%ebp) 
        movl       $1935826783, -220(%ebp) 
        movl       $115, -216(%ebp) 
        movl       $0, -212(%ebp) 
        movl       $0, -208(%ebp) 
        movl       $1094999903, -204(%ebp) 
        movl       $16724, -200(%ebp) 
        movl       $0, -196(%ebp) 
        movl       $0, -192(%ebp) 
        mov        bssStart__hla_3327, %eax 
        mov        %eax, -188(%ebp) 
        mov        bssSize, %eax 
        mov        %eax, -184(%ebp) 
        movl       $0, -180(%ebp) 
        movl       $4, -176(%ebp) 
        movl       $0, -172(%ebp) 
        movl       $0, -168(%ebp) 
        movl       $1, -164(%ebp) 
        movl       $0, -160(%ebp) 
        movl       $0, -156(%ebp) 
        movl       $2, -152(%ebp) 
        movl       $24, -148(%ebp) 
        movl       $0, -144(%ebp) 
        mov        numMachoSyms__hla_3319, %eax 
        mov        %eax, -140(%ebp) 
        movl       $0, -136(%ebp) 
        mov        strTblOffset__hla_3321, %eax 
        mov        %eax, -132(%ebp) 
        movl       $11, -128(%ebp) 
        movl       $80, -124(%ebp) 
        mov        -20(%ebp), %eax 
        movl       $0, -120(%ebp) 
        mov        %eax, -116(%ebp) 
        cmpl       $0, -24(%ebp) 
        je         false__hla_4259
        mov        -20(%ebp), %eax 
        mov        %eax, -112(%ebp) 
        jmp        endif__hla_4259
false__hla_4259:
        movl       $0, -112(%ebp) 
endif__hla_4259:
        mov        -24(%ebp), %eax 
        mov        %eax, -108(%ebp) 
        cmpl       $0, -28(%ebp) 
        je         false__hla_4260
        mov        -20(%ebp), %eax 
        addl       -24(%ebp), %eax 
        mov        %eax, -104(%ebp) 
        jmp        endif__hla_4260
false__hla_4260:
        movl       $0, -104(%ebp) 
endif__hla_4260:
        mov        -28(%ebp), %eax 
        mov        %eax, -100(%ebp) 
        xorl       %eax, %eax 
        mov        %eax, -96(%ebp) 
        mov        %eax, -92(%ebp) 
        mov        %eax, -88(%ebp) 
        mov        %eax, -84(%ebp) 
        mov        %eax, -80(%ebp) 
        mov        %eax, -76(%ebp) 
        mov        %eax, -72(%ebp) 
        mov        %eax, -68(%ebp) 
        mov        %eax, -64(%ebp) 
        mov        %eax, -60(%ebp) 
        mov        %eax, -56(%ebp) 
        mov        %eax, -52(%ebp) 
        mov        $392, %eax 
        addl       codeSize, %eax 
        addl       dataSize, %eax 
        imul       $8, numCodeRelocs, %edx 
        addl       %edx, %eax 
        imul       $8, numDataRelocs, %edx 
        addl       %edx, %eax 
        mov        %eax, -144(%ebp) 
        imul       $12, numMachoSyms__hla_3319, %edx 
        addl       %edx, %eax 
        mov        %eax, -136(%ebp) 
        addl       strTblOffset__hla_3321, %eax 
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, -36(%ebp) 
        pushl      %eax 
        call       MEM_ZALLOC
        mov        %eax, -32(%ebp) 
        cld
        movl       %eax, %edi 
        lea        -440(%ebp), %esi 
        mov        $392, %ecx 
        rep movsb
        mov        -12(%ebp), %esi 
        mov        codeSize, %ecx 
        rep movsb
        mov        -16(%ebp), %esi 
        mov        dataSize, %ecx 
        rep movsb
        mov        -4(%ebp), %esi 
        imul       $8, numCodeRelocs, %ecx 
        rep movsb
        mov        -8(%ebp), %esi 
        imul       $8, numDataRelocs, %ecx 
        rep movsb
        mov        MachoSyms__hla_3317, %esi 
        imul       $12, numMachoSyms__hla_3319, %ecx 
        rep movsb
        mov        stringTable__hla_3320, %esi 
        mov        strTblOffset__hla_3321, %ecx 
        rep movsb
        pushl      20(%ebp) 
        call       FILEIO_OPENNEW
        mov        %eax, -44(%ebp) 
        pushl      -44(%ebp) 
        pushl      -32(%ebp) 
        pushl      -36(%ebp) 
        call       FILEIO_WRITE
        pushl      -44(%ebp) 
        call       FILEIO_CLOSE
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
        popl       %eax 
xgenerateMacho__hla_4223__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $20
compileCOFF:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $36, %esp 
        pushl      %ebx 
        mov        16(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -4(%ebp) 
        mov        12(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -8(%ebp) 
        mov        8(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -12(%ebp) 
        pushl      28(%ebp) 
        pushl      24(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       lexer
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        pushl      -12(%ebp) 
        pushl      20(%ebp) 
        pushl      $0 
        call       optimizeDisps
        pushl      36(%ebp) 
        pushl      32(%ebp) 
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        pushl      -12(%ebp) 
        call       generateCOFF__hla_4091
        mov        16(%ebp), %ebx 
        mov        -4(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        12(%ebp), %ebx 
        mov        -8(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        8(%ebp), %ebx 
        mov        -12(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        $1, %eax 
xcompileCOFF__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $32
compileELF:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $36, %esp 
        pushl      %ebx 
        mov        16(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -4(%ebp) 
        mov        12(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -8(%ebp) 
        mov        8(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -12(%ebp) 
        pushl      32(%ebp) 
        pushl      28(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       lexer
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        pushl      -12(%ebp) 
        pushl      20(%ebp) 
        pushl      24(%ebp) 
        call       optimizeDisps
        pushl      40(%ebp) 
        pushl      36(%ebp) 
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        pushl      -12(%ebp) 
        pushl      24(%ebp) 
        call       generateELF__hla_4165
        mov        16(%ebp), %ebx 
        mov        -4(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        12(%ebp), %ebx 
        mov        -8(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        8(%ebp), %ebx 
        mov        -12(%ebp), %eax 
        mov        %eax, (%ebx) 
        xorl       %eax, %eax 
xcompileELF__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $36
compileMACHO:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $36, %esp 
        pushl      %ebx 
        mov        16(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -4(%ebp) 
        mov        12(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -8(%ebp) 
        mov        8(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -12(%ebp) 
        pushl      28(%ebp) 
        pushl      24(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       lexer
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        pushl      -12(%ebp) 
        pushl      20(%ebp) 
        pushl      $3 
        call       optimizeDisps
        pushl      36(%ebp) 
        pushl      32(%ebp) 
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        pushl      -12(%ebp) 
        call       generateMacho__hla_4223
        mov        16(%ebp), %ebx 
        mov        -4(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        12(%ebp), %ebx 
        mov        -8(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        8(%ebp), %ebx 
        mov        -12(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        $1, %eax 
xcompileMACHO__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $32
compile__hla_4283:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $28, %esp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        mov        %esp, saveESP__hla_3343 
        mov        ExceptionPtr__hla_, %eax 
        mov        %eax, SaveSEHPointer__hla_3342 
        call       BuildExcepts__hla_
        pushl      %ebp 
        addl       $-28, (%esp) 
        call       CONV_GETDELIMITERS
        pushl      $0 
        pushl      $0 
        pushl      $11008 
        pushl      $0 
        pushl      %ebp 
        addl       $-28, (%esp) 
        call       CSET_SETUNION
        pushl      -16(%ebp) 
        pushl      -20(%ebp) 
        pushl      -24(%ebp) 
        pushl      -28(%ebp) 
        call       CONV_SETDELIMITERS
        cmpb       $0, 8(%ebp) 
        je         false__hla_4286
        pushl      $str__hla_4287 
        call       STDOUT_PUTS
        pushl      40(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4288 
        call       STDOUT_PUTS
        pushl      36(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4289 
        call       STDOUT_PUTS
false__hla_4286:
        pushl      $exception__hla_4291 
        pushl      %ebp 
        mov        ExceptionPtr__hla_, %ebp 
        pushl      8(%ebp) 
        mov        4(%esp), %ebp 
        pushl      $244115826 
        pushl      ExceptionPtr__hla_ 
        mov        %esp, ExceptionPtr__hla_ 
        pushl      $65536 
        movl       $symbolTable, %esi 
        call       TABLE_CREATE
        pushl      $8192 
        movl       $equatesTable, %esi 
        call       TABLE_CREATE
        movzbl     24(%ebp), %eax 
        cmpl       $3, %eax 
        jg         default__hla_4292
        jmp *      jmpTbl__hla_4292(,%eax,4) 
case__hla_4293:
        pushl      40(%ebp) 
        pushl      36(%ebp) 
        pushl      32(%ebp) 
        pushl      28(%ebp) 
        pushl      8(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       compileCOFF
        jmp        endswitch__hla_4292
case__hla_4294:
        pushl      40(%ebp) 
        pushl      36(%ebp) 
        pushl      32(%ebp) 
        pushl      28(%ebp) 
        pushl      $1 
        pushl      8(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       compileELF
        jmp        endswitch__hla_4292
case__hla_4295:
        pushl      40(%ebp) 
        pushl      36(%ebp) 
        pushl      32(%ebp) 
        pushl      28(%ebp) 
        pushl      $2 
        pushl      8(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       compileELF
        jmp        endswitch__hla_4292
case__hla_4296:
        pushl      40(%ebp) 
        pushl      36(%ebp) 
        pushl      32(%ebp) 
        pushl      28(%ebp) 
        pushl      8(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       compileMACHO
        jmp        endswitch__hla_4292
default__hla_4292:
        pushl      $str__hla_4297 
        call       STDERR_PUTS
        mov        $1, %eax 
endswitch__hla_4292:
        mov        ExceptionPtr__hla_, %esp 
        popl       ExceptionPtr__hla_ 
        addl       $8, %esp 
        popl       %ebp 
        addl       $4, %esp 
        jmp        endtry__hla_4290
exception__hla_4291:
        call       EX_PRINTEXCEPTIONERROR
        mov        $0, %eax 
endtry__hla_4290:
        cmpb       $0, verboseDebug__hla_3329 
        je         false__hla_4298
        call       STDOUT_NEWLN
        pushl      $str__hla_4299 
        call       STDOUT_PUTS
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4300 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        pushl      8(%edx) 
        pushl      $-24 
        pushl      $32 
        call       STDOUT_PUTSSIZE
        pushl      $str__hla_4111 
        call       STDOUT_PUTS
        mov        4(%edx), %edx 
        mov        21(%edx), %ah 
        testb      $1, %ah 
        mov        $32, %al 
        jz         false__hla_4301
        mov        $88, %al 
false__hla_4301:
        pushl      %eax 
        call       STDOUT_PUTC
        testb      $2, %ah 
        mov        $32, %al 
        jz         false__hla_4302
        mov        $80, %al 
false__hla_4302:
        pushl      %eax 
        call       STDOUT_PUTC
        testb      $4, %ah 
        mov        $32, %al 
        jz         false__hla_4303
        mov        $82, %al 
false__hla_4303:
        pushl      %eax 
        call       STDOUT_PUTC
        testb      $8, %ah 
        mov        $32, %al 
        jz         false__hla_4304
        mov        $68, %al 
false__hla_4304:
        pushl      %eax 
        call       STDOUT_PUTC
        pushl      $str__hla_4305 
        call       STDOUT_PUTS
        pushl      12(%edx) 
        call       STDOUT_PUTD
        pushl      $str__hla_4306 
        call       STDOUT_PUTS
        pushl      $0 
        pushl      %eax 
        mov        20(%edx), %al 
        mov        %al, 4(%esp) 
        popl       %eax 
        call       STDOUT_PUTU8
        pushl      $str__hla_4307 
        call       STDOUT_PUTS
        pushl      $0 
        pushl      %eax 
        mov        8(%edx), %al 
        mov        %al, 4(%esp) 
        popl       %eax 
        call       STDOUT_PUTU8
        call       STDOUT_NEWLN
continue__hla_4300:
        popl       %ebp 
        ret        $4
exitfor__hla_4300:

        call       STDOUT_NEWLN
false__hla_4298:
        jmp        Exit_compile_hlabe__hla_4308

QuitMain__hla_:
        mov        $1, %eax 

Exit_compile_hlabe__hla_4308:
        mov        saveESP__hla_3343, %esp 
        pushl      %eax 
        mov        SaveSEHPointer__hla_3342, %eax 
        mov        %eax, ExceptionPtr__hla_ 
        mov        20(%ebp), %ecx 
        mov        -4(%ebp), %edx 
        mov        %edx, (%ecx) 
        mov        16(%ebp), %ecx 
        mov        -8(%ebp), %edx 
        mov        %edx, (%ecx) 
        mov        12(%ebp), %ecx 
        mov        -12(%ebp), %edx 
        mov        %edx, (%ecx) 
        popl       %eax 
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
xcompile__hla_4283__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $36
_hlabe_compile:
hlabe_compile:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $2088, %esp 
        mov        %ebx, -4(%ebp) 
        mov        %ecx, -8(%ebp) 
        mov        %edx, -12(%ebp) 
        mov        %esi, -16(%ebp) 
        mov        %edi, -20(%ebp) 
        pushl      %ebp 
        addl       $-1064, (%esp) 
        pushl      $1024 
        call       STR_INIT
        mov        %eax, -24(%ebp) 
        pushl      %ebp 
        addl       $-2088, (%esp) 
        pushl      $1024 
        call       STR_INIT
        mov        %eax, -28(%ebp) 
        pushl      8(%ebp) 
        pushl      -24(%ebp) 
        call       STR_CPYZ
        pushl      12(%ebp) 
        pushl      -28(%ebp) 
        call       STR_CPYZ
        pushl      -24(%ebp) 
        pushl      -28(%ebp) 
        pushl      16(%ebp) 
        pushl      20(%ebp) 
        pushl      24(%ebp) 
        pushl      %ebp 
        addl       $-32, (%esp) 
        pushl      %ebp 
        addl       $-36, (%esp) 
        pushl      %ebp 
        addl       $-40, (%esp) 
        pushl      28(%ebp) 
        call       compile__hla_4283
        mov        -4(%ebp), %ebx 
        mov        -8(%ebp), %ecx 
        mov        -12(%ebp), %edx 
        mov        -16(%ebp), %esi 
        mov        -20(%ebp), %edi 
xhlabe_compile__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret








  .text


        .align (2)
len__hla_3355 :.long      0x2
        .long      0x2
str__hla_3355:

 .ascii ", "
 .byte 0

 .byte 0

        .align (2)
len__hla_3397 :.long      0x2e
        .long      0x2e
str__hla_3397:

 .ascii "Attempted to scan beyond the end of the file"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0

        .align (2)
len__hla_3421 :.long      0x13
        .long      0x13
str__hla_3421:

 .ascii "Unknown statement: "
 .byte 0


        .align (2)
len__hla_3443 :.long      0x23
        .long      0x23
str__hla_3443:

 .ascii "Expected ')' in expression at line "
 .byte 0


        .align (2)
len__hla_3444 :.long      0x25
        .long      0x25
str__hla_3444:

 .ascii "Unexpected character in expression: '"
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_3445 :.long      0xa
        .long      0xa
str__hla_3445:

 .ascii "' at line "
 .byte 0

 .byte 0
jmpTbl__hla_3436:
        .long      (case__hla_3437+0)
        .long      (default__hla_3436+0)
        .long      (default__hla_3436+0)
        .long      (default__hla_3436+0)
        .long      (case__hla_3441+0)
        .long      (default__hla_3436+0)
        .long      (default__hla_3436+0)
        .long      (default__hla_3436+0)
        .long      (default__hla_3436+0)
        .long      (default__hla_3436+0)
        .long      (default__hla_3436+0)
        .long      (default__hla_3436+0)
        .long      (case__hla_3438+0)
        .long      (case__hla_3438+0)
        .long      (case__hla_3438+0)
        .long      (case__hla_3438+0)
        .long      (case__hla_3438+0)
        .long      (case__hla_3438+0)
        .long      (case__hla_3438+0)
        .long      (case__hla_3438+0)
        .long      (case__hla_3438+0)
        .long      (case__hla_3438+0)
        .long      (default__hla_3436+0)
        .long      (default__hla_3436+0)
        .long      (default__hla_3436+0)
        .long      (default__hla_3436+0)
        .long      (default__hla_3436+0)
        .long      (default__hla_3436+0)
        .long      (default__hla_3436+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (default__hla_3436+0)
        .long      (default__hla_3436+0)
        .long      (default__hla_3436+0)
        .long      (default__hla_3436+0)
        .long      (case__hla_3439+0)
        .long      (default__hla_3436+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)
        .long      (case__hla_3439+0)

        .align (2)
len__hla_3456 :.long      0x23
        .long      0x23
str__hla_3456:

 .ascii "Illegal relocatable object at line "
 .byte 0


        .align (2)
len__hla_3468 :.long      0x34
        .long      0x34
str__hla_3468:

 .ascii "Expression cannot contain relocatable items at line "
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_3482 :.long      0x19
        .long      0x19
str__hla_3482:

 .ascii ".b operand out of range"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_3493 :.long      0x19
        .long      0x19
str__hla_3493:

 .ascii ".w operand out of range"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_3535 :.long      0x1a
        .long      0x1a
str__hla_3535:

 .ascii "TByte value out of range"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0

        .align (2)
len__hla_3588 :.long      0x1a
        .long      0x1a
str__hla_3588:

 .ascii "Filename too long at line "
 .byte 0

 .byte 0

        .align (2)
len__hla_3624 :.long      0x1c
        .long      0x1c
str__hla_3624:

 .ascii "ecx <> NULL hlabe.hla (1977)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_3633 :.long      0x1c
        .long      0x1c
str__hla_3633:

 .ascii "ecx <> NULL hlabe.hla (2044)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_3639 :.long      0x15
        .long      0x15
str__hla_3639:

 .ascii "Syntax error at line "
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_3640 :.long      0x13
        .long      0x13
str__hla_3640:

 .ascii ", expected at ','"
 .byte 0xd
 .byte 0xa
 .byte 0


        .align (2)
len__hla_3641 :.long      0x2e
        .long      0x2e
str__hla_3641:

 .ascii "Equate attempted to redefine a symbol at line "
 .byte 0

 .byte 0

        .align (2)
len__hla_3644 :.long      0x2f
        .long      0x2f
str__hla_3644:

 .ascii "End Function symbol must be predefined at line "
 .byte 0


        .align (2)
len__hla_3649 :.long      0x1c
        .long      0x1c
str__hla_3649:

 .ascii "ecx <> NULL hlabe.hla (2168)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_3655 :.long      0x2c
        .long      0x2c
str__hla_3655:

 .ascii "Public symbol cannot also be extern at line "
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_3660 :.long      0x1c
        .long      0x1c
str__hla_3660:

 .ascii "ecx <> NULL hlabe.hla (2259)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_3669 :.long      0x1c
        .long      0x1c
str__hla_3669:

 .ascii "ecx <> NULL hlabe.hla (2351)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_3675 :.long      0x2a
        .long      0x2a
str__hla_3675:

 .ascii ".ub expected a ',' -- Syntax error at line"
 .byte 0

 .byte 0

        .align (2)
len__hla_3678 :.long      0x2b
        .long      0x2b
str__hla_3678:

 .ascii ".uw expected a ',' -- Syntax error at line "
 .byte 0


        .align (2)
len__hla_3681 :.long      0x2b
        .long      0x2b
str__hla_3681:

 .ascii ".ud expected a ',' -- Syntax error at line "
 .byte 0


        .align (2)
len__hla_3687 :.long      0x1c
        .long      0x1c
str__hla_3687:

 .ascii "ecx <> NULL hlabe.hla (2542)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_3693 :.long      0x11
        .long      0x11
str__hla_3693:

 .ascii "External symbol '"
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_3694 :.long      0x32
        .long      0x32
str__hla_3694:

 .ascii "' is already defined. Error in HLABE code at line "
 .byte 0

 .byte 0
jmpTbl__hla_3618:
        .long      (case__hla_3619+0)
        .long      (case__hla_3620+0)
        .long      (case__hla_3627+0)
        .long      (case__hla_3628+0)
        .long      (case__hla_3636+0)
        .long      (case__hla_3642+0)
        .long      (default__hla_3618+0)
        .long      (default__hla_3618+0)
        .long      (default__hla_3618+0)
        .long      (default__hla_3618+0)
        .long      (default__hla_3618+0)
        .long      (case__hla_3645+0)
        .long      (default__hla_3618+0)
        .long      (default__hla_3618+0)
        .long      (default__hla_3618+0)
        .long      (case__hla_3652+0)
        .long      (case__hla_3656+0)
        .long      (case__hla_3663+0)
        .long      (case__hla_3664+0)
        .long      (case__hla_3665+0)
        .long      (case__hla_3672+0)
        .long      (case__hla_3682+0)
        .long      (case__hla_3683+0)
        .long      (case__hla_3690+0)
        .long      (case__hla_3627+0)
        .long      (case__hla_3696+0)

        .align (2)
len__hla_3700 :.long      0x7
        .long      0x7
str__hla_3700:

 .ascii "Symbol "
 .byte 0


        .align (2)
len__hla_3701 :.long      0x23
        .long      0x23
str__hla_3701:

 .ascii " is already defined. Error at line "
 .byte 0


        .align (2)
len__hla_3805 :.long      0x1c
        .long      0x1c
str__hla_3805:

 .ascii "esi <> NULL hlabe.hla (3528)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_3835 :.long      0x40
        .long      0x40
str__hla_3835:

 .ascii "Error: Unexpected bss directive encountered in non-bss section"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_3840 :.long      0x42
        .long      0x42
str__hla_3840:

 .ascii "Error: Unexpected code directive encountered in non-code section"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0

        .align (2)
len__hla_3843 :.long      0x42
        .long      0x42
str__hla_3843:

 .ascii "Error: Unexpected data directive encountered in non-data section"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0

        .align (2)
len__hla_3859 :.long      0x23
        .long      0x23
str__hla_3859:

 .ascii "Object code type is not supported"
 .byte 0xd
 .byte 0xa
 .byte 0


        .align (2)
len__hla_3896 :.long      0x23
        .long      0x23
str__hla_3896:

 .ascii "HLABE Internal error (Bad section):"
 .byte 0


        .align (2)
len__hla_3899 :.long      0x24
        .long      0x24
str__hla_3899:

 .ascii "Internal error: illegal token value:"
 .byte 0

 .byte 0
 .byte 0
 .byte 0
jmpTbl__hla_3820:
        .long      (case__hla_3821+0)
        .long      (case__hla_3822+0)
        .long      (case__hla_3836+0)
        .long      (case__hla_3821+0)
        .long      (case__hla_3821+0)
        .long      (case__hla_3884+0)
        .long      (case__hla_3897+0)
        .long      (case__hla_3844+0)
        .long      (case__hla_3844+0)
        .long      (case__hla_3844+0)
        .long      (case__hla_3838+0)
        .long      (default__hla_3820+0)
        .long      (case__hla_3841+0)
        .long      (case__hla_3833+0)
        .long      (case__hla_3848+0)
        .long      (case__hla_3849+0)
        .long      (case__hla_3850+0)
        .long      (case__hla_3873+0)
        .long      (case__hla_3860+0)
        .long      (case__hla_3821+0)
        .long      (case__hla_3821+0)
        .long      (case__hla_3821+0)

        .align (2)
len__hla_3929 :.long      0x31
        .long      0x31
str__hla_3929:

 .ascii "Instruction cannot reference an external symbol ("
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_3930 :.long      0x3
        .long      0x3
str__hla_3930:

 .ascii ")"
 .byte 0xd
 .byte 0xa
 .byte 0

jmpTbl__hla_3915:
        .long      (case__hla_3916+0)
        .long      (case__hla_3920+0)
        .long      (case__hla_3921+0)
        .long      (case__hla_3922+0)
        .long      (case__hla_3916+0)
        .long      (case__hla_3936+0)
        .long      (case__hla_3923+0)
        .long      (case__hla_3924+0)
        .long      (case__hla_3924+0)
        .long      (case__hla_3924+0)
        .long      (case__hla_3917+0)
        .long      (default__hla_3915+0)
        .long      (case__hla_3918+0)
        .long      (case__hla_3919+0)
        .long      (case__hla_3925+0)
        .long      (case__hla_3934+0)
        .long      (case__hla_3931+0)
        .long      (case__hla_3935+0)
        .long      (case__hla_3933+0)
        .long      (case__hla_3916+0)
        .long      (case__hla_3916+0)
        .long      (case__hla_3916+0)

        .align (2)
len__hla_3956 :.long      0x11
        .long      0x11
str__hla_3956:

 .ascii "Undefined symbol:"
 .byte 0

 .byte 0
 .byte 0
jmpTbl__hla_3972:
        .long      (case__hla_3973+0)
        .long      (case__hla_3979+0)
        .long      (case__hla_3981+0)
        .long      (case__hla_3973+0)
        .long      (case__hla_3973+0)
        .long      (case__hla_3994+0)
        .long      (case__hla_3982+0)
        .long      (case__hla_3983+0)
        .long      (case__hla_3983+0)
        .long      (case__hla_3983+0)
        .long      (case__hla_3974+0)
        .long      (default__hla_3972+0)
        .long      (case__hla_3975+0)
        .long      (case__hla_3976+0)
        .long      (case__hla_3984+0)
        .long      (case__hla_3992+0)
        .long      (case__hla_3985+0)
        .long      (case__hla_3993+0)
        .long      (case__hla_3989+0)
        .long      (case__hla_3973+0)
        .long      (case__hla_3973+0)
        .long      (case__hla_3977+0)

        .align (2)
len__hla_4026 :.long      0x8
        .long      0x8
str__hla_4026:

 .ascii "Symbol '"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4027 :.long      0x10
        .long      0x10
str__hla_4027:

 .ascii "' is undefined"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4031 :.long      0x2f
        .long      0x2f
str__hla_4031:

 .ascii "Branch target is out of range. "
 .byte 0xd
 .byte 0xa

 .ascii "(displacement="
 .byte 0


        .align (2)
len__hla_4032 :.long      0x28
        .long      0x28
str__hla_4032:

 .ascii " and must be in the range -128..+127)."
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0
jmpTbl__hla_4021:
        .long      (case__hla_4022+0)
        .long      (case__hla_4022+0)
        .long      (case__hla_4022+0)
        .long      (case__hla_4024+0)
        .long      (case__hla_4023+0)
        .long      (case__hla_4056+0)
        .long      (case__hla_4022+0)
        .long      (case__hla_4022+0)
        .long      (case__hla_4022+0)
        .long      (case__hla_4022+0)
        .long      (case__hla_4022+0)
        .long      (default__hla_4021+0)
        .long      (case__hla_4022+0)
        .long      (case__hla_4022+0)
        .long      (case__hla_4028+0)
        .long      (case__hla_4033+0)
        .long      (case__hla_4036+0)
        .long      (case__hla_4049+0)
        .long      (case__hla_4041+0)
        .long      (case__hla_4022+0)
        .long      (case__hla_4022+0)
        .long      (case__hla_4022+0)

        .align (2)
len__hla_4063 :.long      0x2d
        .long      0x2d
str__hla_4063:

 .ascii "Internal error (relocations in BSS section)"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_4068 :.long      0x1c
        .long      0x1c
str__hla_4068:

 .ascii "ebx <> NULL hlabe.hla (5565)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4071 :.long      0x12
        .long      0x12
str__hla_4071:

 .ascii "Undefined symbol: "
 .byte 0

 .byte 0

        .align (2)
len__hla_4078 :.long      0x10
        .long      0x10
str__hla_4078:

 .ascii "optimizeDisps:"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4080 :.long      0x5e
        .long      0x5e
str__hla_4080:

 .ascii "Could not optimize (small->large) in 16,384 passes."
 .byte 0xd
 .byte 0xa

 .ascii "Reverting to large->small optimization."
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0

        .align (2)
len__hla_4082 :.long      0x15
        .long      0x15
str__hla_4082:

 .ascii "Optimization passes: "
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_4083 :.long      0x8
        .long      0x8
str__hla_4083:

 .ascii "+16386"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4085 :.long      0x4
        .long      0x4
str__hla_4085:

 .ascii "+2"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4109 :.long      0x4
        .long      0x4
str__hla_4109:
 .byte 0xd
 .byte 0xa
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4111 :.long      0x2
        .long      0x2
str__hla_4111:

 .ascii ": "
 .byte 0

 .byte 0

        .align (2)
len__hla_4112 :.long      0x3
        .long      0x3
str__hla_4112:

 .ascii ", '"
 .byte 0


        .align (2)
len__hla_4113 :.long      0x3
        .long      0x3
str__hla_4113:

 .ascii "', "
 .byte 0


        .align (2)
len__hla_4116 :.long      0x17
        .long      0x17
str__hla_4116:

 .ascii "IMAGE_REL_I386_ABSOLUTE"
 .byte 0


        .align (2)
len__hla_4118 :.long      0x14
        .long      0x14
str__hla_4118:

 .ascii "IMAGE_REL_I386_DIR32"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4120 :.long      0x16
        .long      0x16
str__hla_4120:

 .ascii "IMAGE_REL_I386_DIR32NB"
 .byte 0

 .byte 0

        .align (2)
len__hla_4122 :.long      0x14
        .long      0x14
str__hla_4122:

 .ascii "IMAGE_REL_I386_REL32"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4123 :.long      0x18
        .long      0x18
str__hla_4123:

 .ascii "???? relocation type = $"
 .byte 0

 .byte 0
 .byte 0
 .byte 0
jmpTbl__hla_4114:
        .long      (case__hla_4115+0)
        .long      (default__hla_4114+0)
        .long      (default__hla_4114+0)
        .long      (default__hla_4114+0)
        .long      (default__hla_4114+0)
        .long      (default__hla_4114+0)
        .long      (case__hla_4117+0)
        .long      (case__hla_4119+0)
        .long      (default__hla_4114+0)
        .long      (default__hla_4114+0)
        .long      (default__hla_4114+0)
        .long      (default__hla_4114+0)
        .long      (default__hla_4114+0)
        .long      (default__hla_4114+0)
        .long      (default__hla_4114+0)
        .long      (default__hla_4114+0)
        .long      (default__hla_4114+0)
        .long      (default__hla_4114+0)
        .long      (default__hla_4114+0)
        .long      (default__hla_4114+0)
        .long      (case__hla_4121+0)

        .align (2)
len__hla_4130 :.long      0x20
        .long      0x20
str__hla_4130:

 .ascii "generateCOFF:"
 .byte 0xd
 .byte 0xa

 .ascii "Input filename:  "
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4131 :.long      0x13
        .long      0x13
str__hla_4131:
 .byte 0xd
 .byte 0xa

 .ascii "Output filename: "
 .byte 0

divisor__hla_4132: .long 18

        .align (2)
len__hla_4134 :.long      0x5
        .long      0x5
str__hla_4134:

 .ascii ".text"
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_4136 :.long      0x5
        .long      0x5
str__hla_4136:

 .ascii ".data"
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_4137 :.long      0x4
        .long      0x4
str__hla_4137:

 .ascii ".bss"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4144 :.long      0x1c
        .long      0x1c
str__hla_4144:
 .byte 0xd
 .byte 0xa

 .ascii "COFF Symbol table (#syms: "
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4145 :.long      0x5
        .long      0x5
str__hla_4145:

 .ascii ")"
 .byte 0xd
 .byte 0xa
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_4149 :.long      0x2
        .long      0x2
str__hla_4149:

 .ascii " :"
 .byte 0

 .byte 0

        .align (2)
len__hla_4152 :.long      0x6
        .long      0x6
str__hla_4152:

 .ascii "static"
 .byte 0

 .byte 0

        .align (2)
len__hla_4155 :.long      0x8
        .long      0x8
str__hla_4155:

 .ascii "external"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4156 :.long      0x6
        .long      0x6
str__hla_4156:

 .ascii "public"
 .byte 0

 .byte 0

        .align (2)
len__hla_4157 :.long      0x4
        .long      0x4
str__hla_4157:

 .ascii "????"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4158 :.long      0x19
        .long      0x19
str__hla_4158:

 .ascii "Code Section Relocations:"
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_4159 :.long      0x19
        .long      0x19
str__hla_4159:

 .ascii "Data Section Relocations:"
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_4178 :.long      0x1f
        .long      0x1f
str__hla_4178:

 .ascii "generateELF:"
 .byte 0xd
 .byte 0xa

 .ascii "Input filename:  "
 .byte 0


        .align (2)
len__hla_4179 :.long      0x9
        .long      0x9
str__hla_4179:

 .ascii ".shstrtab"
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_4180 :.long      0x7
        .long      0x7
str__hla_4180:

 .ascii ".symtab"
 .byte 0


        .align (2)
len__hla_4181 :.long      0x7
        .long      0x7
str__hla_4181:

 .ascii ".strtab"
 .byte 0


        .align (2)
len__hla_4182 :.long      0x9
        .long      0x9
str__hla_4182:

 .ascii ".rel.text"
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_4183 :.long      0x9
        .long      0x9
str__hla_4183:

 .ascii ".rel.data"
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_4209 :.long      0x1f
        .long      0x1f
str__hla_4209:

 .ascii "Unknown ELF format specified!"
 .byte 0xd
 .byte 0xa
 .byte 0


        .align (2)
len__hla_4227 :.long      0x21
        .long      0x21
str__hla_4227:

 .ascii "generateMacho:"
 .byte 0xd
 .byte 0xa

 .ascii "Input filename:  "
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_4287 :.long      0x48
        .long      0x48
str__hla_4287:

 .ascii "------------"
 .byte 0xd
 .byte 0xa

 .ascii "HLA Back Engine Object code formatter"
 .byte 0xd
 .byte 0xa
 .byte 0xd
 .byte 0xa

 .ascii "HLABE compiling '"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4288 :.long      0x6
        .long      0x6
str__hla_4288:

 .ascii "' to '"
 .byte 0

 .byte 0

        .align (2)
len__hla_4289 :.long      0x3
        .long      0x3
str__hla_4289:

 .ascii "'"
 .byte 0xd
 .byte 0xa
 .byte 0


        .align (2)
len__hla_4297 :.long      0x38
        .long      0x38
str__hla_4297:

 .ascii "Illegal object-code format specified -- compile failed"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0
jmpTbl__hla_4292:
        .long      (case__hla_4293+0)
        .long      (case__hla_4294+0)
        .long      (case__hla_4295+0)
        .long      (case__hla_4296+0)

        .align (2)
len__hla_4299 :.long      0x12
        .long      0x12
str__hla_4299:

 .ascii "Symbol table: "
 .byte 0xd
 .byte 0xa
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0

        .align (2)
len__hla_4305 :.long      0x3
        .long      0x3
str__hla_4305:

 .ascii "  $"
 .byte 0


        .align (2)
len__hla_4306 :.long      0x6
        .long      0x6
str__hla_4306:

 .ascii ", sec:"
 .byte 0

 .byte 0

        .align (2)
len__hla_4307 :.long      0x8
        .long      0x8
str__hla_4307:

 .ascii ", index:"
 .byte 0

 .byte 0
 .byte 0
 .byte 0
idSet__hla_3404 :.byte  0x0,0x0,0x0,0x0,0x10,0x40,0xff,0x83,0xff,0xff,0xff,0x87,0xfe,0xff,0xff,0x7
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
filenameDelims__hla_3582 :.byte  0xff,0xff,0xff,0xff,0x1,0x10,0x0,0x8,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
_0e26_msg___hla_3623 :.long  str__hla_3624
_0e2f_msg___hla_3632 :.long  str__hla_3633
_0e3f_msg___hla_3648 :.long  str__hla_3649
_0e4a_msg___hla_3659 :.long  str__hla_3660
_0e53_msg___hla_3668 :.long  str__hla_3669
_0e65_msg___hla_3686 :.long  str__hla_3687
_0edb_msg___hla_3804 :.long  str__hla_3805
_0fe2_msg___hla_4067 :.long  str__hla_4068




  .data

        .globl    ExceptionPtr__hla_
        .globl    _VMT_table_t___hla_
        .globl    AssertionStr
        .align (2)
        .align (2)
COFFsyms__hla_3311 :.space     4
numCOFFsyms__hla_3312 :.space     4
coffSymSize__hla_3313 :.space     4
ELFsyms__hla_3314 :.space     4
numELFsyms__hla_3315 :.space     4
elfSymSize__hla_3316 :.space     4
MachoSyms__hla_3317 :.space     4
MachoSymSize__hla_3318 :.space     4
numMachoSyms__hla_3319 :.space     4
stringTable__hla_3320 :.space     4
strTblOffset__hla_3321 :.space     4
strTblSize__hla_3322 :.space     4
codeSize :.space     4
codeStart__hla_3323 :.space     4
codeEnd__hla_3324 :.space     4
numCodeRelocs :.space     4
dataSize :.space     4
dataStart__hla_3325 :.space     4
dataEnd__hla_3326 :.space     4
numDataRelocs :.space     4
bssSize :.space     4
bssStart__hla_3327 :.space     4
bssEnd__hla_3328 :.space     4
symbolTable :.space     160
equatesTable :.space     160
currentSection :.byte  0x1
verboseDebug__hla_3329 :.byte  0x0
        .align (2)
MainPgmVMT__hla_3340 :.long      QuitMain__hla_
MainPgmCoroutine__hla_3341:
        .long      MainPgmVMT__hla_3340
        .long      0x0
        .long      0x0
SaveSEHPointer__hla_3342 :.long  0x0
        .long      0x0
        .long      0x0
saveESP__hla_3343 :.space     4
lineNumber__hla_3361 :.long  0x1
tknListTail__hla_3362 :.space     4
lastTailPtr__hla_3363 :.space     4
codeListTail__hla_3364 :.space     4
dataListTail__hla_3365 :.space     4
bssListTail__hla_3366 :.space     4
end_source__hla_3367 :.space     4
start_stmt__hla_3368 :.space     4
CodeAuxSection__hla_4092:
        .long      0x0
        .word      0x0
        .word      0x0
        .long      0x0
        .long      0x1
        .byte      0x0
DataAuxSection__hla_4093:
        .long      0x0
        .word      0x0
        .word      0x0
        .long      0x0
        .long      0x2
        .byte      0x0
BssAuxSection__hla_4094:
        .long      0x0
        .word      0x0
        .word      0x0
        .long      0x0
        .long      0x3
        .byte      0x0
NULLsection__hla_4166:
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
shstrtabSection__hla_4167:
        .long      0x1
        .long      0x3
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x1
        .long      0x0
symtabSection__hla_4168:
        .long      0x0
        .long      0x2
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x3
        .long      0x0
        .long      0x4
        .long      0x10
strtabSection__hla_4169:
        .long      0x0
        .long      0x3
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x1
        .long      0x0
textSection__hla_4170:
        .long      0x0
        .long      0x1
        .long      0x6
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x4
        .long      0x0
dataSection__hla_4171:
        .long      0x0
        .long      0x1
        .long      0x3
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x4
        .long      0x0
bssSection__hla_4172:
        .long      0x0
        .long      0x8
        .long      0x3
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x4
        .long      0x0
relTextSection__hla_4173:
        .long      0x0
        .long      0x9
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x2
        .long      0x4
        .long      0x4
        .long      0x8
relDataSection__hla_4174:
        .long      0x0
        .long      0x9
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x2
        .long      0x5
        .long      0x4
        .long      0x8





